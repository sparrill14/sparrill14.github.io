{"version":3,"file":"main.8f7a71d7f2f245991c69.bundle.js","mappings":"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","sources":["webpack://treads/./src/game/AudioManager.ts","webpack://treads/./src/game/tanks/Tank.ts","webpack://treads/./src/game/Ammunition.ts","webpack://treads/./src/game/BombFragment.ts","webpack://treads/./src/game/Bomb.ts","webpack://treads/./src/game/GameRenderer.ts","webpack://treads/./src/game/GameCanvas.ts","webpack://treads/./src/game/NavigationGrid.ts","webpack://treads/./src/game/Obstacle.ts","webpack://treads/./src/game/ObstacleCanvas.ts","webpack://treads/./src/ui/PastelColorPalette.ts","webpack://treads/./src/game/Reticule.ts","webpack://treads/./src/game/tanks/EnemyTank.ts","webpack://treads/./src/game/tanks/BomberTank.ts","webpack://treads/./src/game/tanks/PlayerTank.ts","webpack://treads/./src/game/tanks/SimpleMovingTank.ts","webpack://treads/./src/game/tanks/StationaryRandomAimTank.ts","webpack://treads/./src/game/tanks/StationaryTank.ts","webpack://treads/./src/game/tanks/SuperBomberMovingTank.ts","webpack://treads/./src/game/Level.ts","webpack://treads/./src/index.ts","webpack://treads/./src/ui/LevelSelector.ts"],"sourcesContent":["import backgroundMusic from '../assets/audio/backgroundMusic.mp3';\nimport bombExplode from '../assets/audio/bombExplode.mp3';\nimport tankDestroy from '../assets/audio/tankDestroy.mp3';\nimport tankFire from '../assets/audio/tankFire.mp3';\n\nexport enum AudioFile {\n\tTANK_FIRE = 1,\n\tTANK_DESTROY = 2,\n\tBOMB_EXPLODE = 3,\n\tBACKGROUND_MUSIC = 4,\n}\n\nexport class AudioManager {\n\tprivate audioContext: AudioContext;\n\tprivate audioBuffers: Map<AudioFile, AudioBuffer>;\n\tprivate backgroundMusicSource: AudioBufferSourceNode | null;\n\n\tconstructor() {\n\t\tthis.audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n\t\tthis.audioBuffers = new Map();\n\t\tthis.backgroundMusicSource = null;\n\t}\n\n\tloadAllAudio(): Promise<void[]> {\n\t\tconst promises = [\n\t\t\tthis.loadAudio(AudioFile.TANK_FIRE, tankFire),\n\t\t\tthis.loadAudio(AudioFile.TANK_DESTROY, tankDestroy),\n\t\t\tthis.loadAudio(AudioFile.BOMB_EXPLODE, bombExplode),\n\t\t\tthis.loadAudio(AudioFile.BACKGROUND_MUSIC, backgroundMusic),\n\t\t];\n\t\treturn Promise.all(promises);\n\t}\n\n\tloadAudio(audioFile: AudioFile, url: string): Promise<void> {\n\t\treturn fetch(url)\n\t\t\t.then((response) => response.arrayBuffer())\n\t\t\t.then((arrayBuffer) => this.audioContext.decodeAudioData(arrayBuffer))\n\t\t\t.then((audioBuffer) => {\n\t\t\t\tthis.audioBuffers.set(audioFile, audioBuffer);\n\t\t\t})\n\t\t\t.catch((error) => console.error(`Error loading audio file: ${url}`, error));\n\t}\n\n\tplay(audioFile: AudioFile): void {\n\t\tconst buffer = this.audioBuffers.get(audioFile);\n\t\tif (buffer) {\n\t\t\tconst source = this.audioContext.createBufferSource();\n\t\t\tsource.buffer = buffer;\n\t\t\tsource.connect(this.audioContext.destination);\n\t\t\tsource.start(0);\n\t\t} else {\n\t\t\tconsole.warn(`Audio buffer for ${audioFile} not found`);\n\t\t}\n\t}\n\n\tgetAudioContext(): AudioContext {\n\t\treturn this.audioContext;\n\t}\n\n\tplayBackgroundMusic(): void {\n\t\tconst buffer = this.audioBuffers.get(AudioFile.BACKGROUND_MUSIC);\n\t\tif (buffer) {\n\t\t\tthis.stopBackgroundMusic();\n\t\t\tthis.backgroundMusicSource = this.audioContext.createBufferSource();\n\t\t\tthis.backgroundMusicSource.buffer = buffer;\n\t\t\tthis.backgroundMusicSource.loop = true;\n\t\t\tthis.backgroundMusicSource.connect(this.audioContext.destination);\n\t\t\tthis.backgroundMusicSource.start(0);\n\t\t} else {\n\t\t\tconsole.warn(`Background music buffer not found`);\n\t\t}\n\t}\n\n\tstopBackgroundMusic(): void {\n\t\tif (this.backgroundMusicSource) {\n\t\t\tthis.backgroundMusicSource.stop(0);\n\t\t\tthis.backgroundMusicSource.disconnect();\n\t\t\tthis.backgroundMusicSource = null;\n\t\t}\n\t}\n}\n","import { Ammunition } from '../Ammunition';\nimport { AudioManager } from '../AudioManager';\nimport { Bomb } from '../Bomb';\nimport { BombFragment } from '../BombFragment';\nimport { ObstacleCanvas } from '../ObstacleCanvas';\nimport { Reticule } from '../Reticule';\n\nexport enum Direction {\n\tNORTH = 1,\n\tSOUTH = 2,\n\tEAST = 3,\n\tWEST = 4,\n\tNORTHEAST = 5,\n\tNORTHWEST = 6,\n\tSOUTHEAST = 7,\n\tSOUTHWEST = 8,\n\tUNKNOWN = 9,\n}\n\nexport class Tank {\n\tpublic xPosition: number;\n\tpublic yPosition: number;\n\tpublic xLeft: number;\n\tpublic xRight: number;\n\tpublic yTop: number;\n\tpublic yBottom: number;\n\tpublic speed: number;\n\tpublic size: number;\n\tpublic tankMidpoint: number;\n\tpublic color: string;\n\tpublic reticule: Reticule;\n\tpublic gunBarrellWidth = 7;\n\tpublic isDestroyed = false;\n\tpublic isExploding = false;\n\tpublic obstacleCanvas: ObstacleCanvas;\n\tpublic twoPi: number = 2 * Math.PI;\n\tpublic lastDirectionMoved: Direction = Direction.UNKNOWN;\n\tpublic wasLastMoveBlocked = false;\n\tpublic consecutiveDirectionMoves = 0;\n\tpublic audioManager: AudioManager;\n\tpublic aimAngle: number;\n\tpublic aimXPos: number;\n\tpublic aimYPos: number;\n\tpublic xOffset: number;\n\tpublic yOffset: number;\n\tpublic gunBarrellEndX: number;\n\tpublic gunBarrellEndY: number;\n\tpublic ammunition: Ammunition[] = [];\n\tpublic maxAmmunition: number;\n\tpublic bombs: Bomb[] = [];\n\tpublic maxBombs: number;\n\tpublic canvasWidth: number;\n\tpublic canvasHeight: number;\n\tprivate fragments: BombFragment[];\n\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\treticule: Reticule,\n\t\txPosition: number,\n\t\tyPosition: number,\n\t\tspeed: number,\n\t\tsize: number,\n\t\tcolor: string,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\tammunition: Ammunition[],\n\t\tbombs: Bomb[],\n\t\taudioManager: AudioManager\n\t) {\n\t\tthis.reticule = reticule;\n\t\tthis.xPosition = xPosition;\n\t\tthis.yPosition = yPosition;\n\t\tthis.xLeft = xPosition;\n\t\tthis.xRight = xPosition + size;\n\t\tthis.yTop = yPosition;\n\t\tthis.yBottom = yPosition + size;\n\t\tthis.speed = speed;\n\t\tthis.size = size;\n\t\tthis.color = color;\n\t\tthis.canvasWidth = canvas.width;\n\t\tthis.canvasHeight = canvas.height;\n\t\tthis.obstacleCanvas = obstacleCanvas;\n\t\tthis.tankMidpoint = this.size / 2;\n\t\tthis.ammunition = ammunition;\n\t\tthis.maxAmmunition = ammunition.length;\n\t\tthis.bombs = bombs;\n\t\tthis.maxBombs = bombs.length;\n\t\tthis.audioManager = audioManager;\n\t\tconst canvasRect: DOMRect = canvas.getBoundingClientRect();\n\t\tthis.xOffset = canvasRect.left;\n\t\tthis.yOffset = canvasRect.top;\n\t\t// Set the initital X and Y aim position to the center of the canvas\n\t\tthis.aimXPos = canvas.width / 2;\n\t\tthis.aimYPos = canvas.height / 2;\n\n\t\tconst dx: number = this.aimXPos - this.xPosition - this.tankMidpoint;\n\t\tconst dy: number = this.aimYPos - this.yPosition - this.tankMidpoint;\n\t\tlet theta = Math.atan2(dy, dx);\n\t\tif (theta < 0) {\n\t\t\ttheta += 2 * Math.PI;\n\t\t}\n\t\tthis.aimAngle = theta;\n\n\t\tthis.gunBarrellEndX = this.xPosition + this.tankMidpoint + Math.cos(this.aimAngle) * this.size;\n\t\tthis.gunBarrellEndY = this.yPosition + this.tankMidpoint + Math.sin(this.aimAngle) * this.size;\n\n\t\tthis.fragments = [];\n\t}\n\n\tpublic draw(context: CanvasRenderingContext2D): void {\n\t\tif (this.isDestroyed) {\n\t\t\tif (this.isExploding) {\n\t\t\t\tthis.updateExplosion(context);\n\t\t\t}\n\t\t\tcontext.strokeStyle = this.color;\n\t\t\tcontext.lineWidth = 5;\n\t\t\tcontext.setLineDash([]);\n\t\t\tconst xLength = 12;\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(this.xPosition + this.tankMidpoint - xLength, this.yPosition + this.tankMidpoint - xLength);\n\t\t\tcontext.lineTo(this.xPosition + this.tankMidpoint + xLength, this.yPosition + this.tankMidpoint + xLength);\n\t\t\tcontext.stroke();\n\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(this.xPosition + this.tankMidpoint - xLength, this.yPosition + this.tankMidpoint + xLength);\n\t\t\tcontext.lineTo(this.xPosition + this.tankMidpoint + xLength, this.yPosition + this.tankMidpoint - xLength);\n\t\t\tcontext.stroke();\n\t\t} else {\n\t\t\tcontext.fillStyle = this.color;\n\t\t\tcontext.fillRect(this.xPosition, this.yPosition, this.size, this.size);\n\n\t\t\tcontext.setLineDash([]);\n\t\t\tcontext.lineJoin = 'bevel';\n\t\t\tcontext.strokeStyle = 'black';\n\t\t\tcontext.lineWidth = 2;\n\t\t\tcontext.strokeRect(this.xPosition, this.yPosition, this.size, this.size);\n\n\t\t\tcontext.beginPath();\n\t\t\tcontext.arc(this.xPosition + this.tankMidpoint, this.yPosition + this.tankMidpoint, this.size / 3, 0, this.twoPi);\n\t\t\tcontext.stroke();\n\n\t\t\tthis.gunBarrellEndX = this.xPosition + this.tankMidpoint + Math.cos(this.aimAngle) * this.size;\n\t\t\tthis.gunBarrellEndY = this.yPosition + this.tankMidpoint + Math.sin(this.aimAngle) * this.size;\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(this.xPosition + this.tankMidpoint, this.yPosition + this.tankMidpoint);\n\t\t\tcontext.lineTo(this.gunBarrellEndX, this.gunBarrellEndY);\n\t\t\tcontext.lineWidth = this.gunBarrellWidth;\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n\n\tpublic destroy(): void {\n\t\tthis.isDestroyed = true;\n\t\tthis.isExploding = true;\n\t\tthis.createFragments();\n\t\tsetTimeout((): void => {\n\t\t\tthis.isExploding = false;\n\t\t}, 1000);\n\t}\n\n\tcreateFragments(): void {\n\t\tconst fragmentCount = 50;\n\t\tfor (let i = 0; i < fragmentCount; i++) {\n\t\t\tconst angle = Math.random() * 2 * Math.PI;\n\t\t\tconst speed = Math.random() * 5 + 2;\n\t\t\tconst velocityX = Math.cos(angle) * speed;\n\t\t\tconst velocityY = Math.sin(angle) * speed;\n\t\t\tconst grayValue = Math.floor(Math.random() * 256);\n\t\t\tconst alphaValue = Math.random() * 0.5 + 0.5;\n\t\t\tconst fragmentColor = `rgba(${grayValue}, ${grayValue}, ${grayValue}, ${alphaValue})`;\n\t\t\tconst fragment = new BombFragment(\n\t\t\t\tthis.xPosition + this.tankMidpoint,\n\t\t\t\tthis.yPosition + this.tankMidpoint,\n\t\t\t\tMath.random() * 2 + 1,\n\t\t\t\tfragmentColor,\n\t\t\t\tvelocityX,\n\t\t\t\tvelocityY,\n\t\t\t\t10\n\t\t\t);\n\t\t\tthis.fragments.push(fragment);\n\t\t}\n\t}\n\n\tupdateExplosion(context: CanvasRenderingContext2D): void {\n\t\tthis.fragments.forEach((particle) => {\n\t\t\tparticle.update();\n\t\t\tparticle.draw(context);\n\t\t});\n\n\t\tthis.fragments = this.fragments.filter((particle) => particle.life > 0);\n\t}\n\n\tpublic updatePosition(playerTank: Tank, enemyTanks: Tank[], ammunition: Ammunition[], bombs: Bomb[]): void {\n\t\treturn;\n\t}\n\n\tpublic aim(mouseXPos: number, mouseYpos: number, playerTank: Tank): void {\n\t\treturn;\n\t}\n\n\tpublic shoot(playerTank: Tank): void {\n\t\treturn;\n\t}\n\n\tpublic plantBomb(playerTank: Tank): void {\n\t\treturn;\n\t}\n\n\tpublic moveInLastDirectionMoved(): void {\n\t\tthis.moveInCardinalDirection(this.lastDirectionMoved);\n\t}\n\n\tpublic getRandomDirection<Direction>(): Direction[keyof Direction] {\n\t\tconst enumValues = Object.keys(Direction)\n\t\t\t.map((n) => Number.parseInt(n))\n\t\t\t.filter((n) => !Number.isNaN(n)) as unknown as Direction[keyof Direction][];\n\t\tconst randomIndex = Math.floor(Math.random() * enumValues.length);\n\t\tconst randomEnumValue = enumValues[randomIndex];\n\t\treturn randomEnumValue;\n\t}\n\n\tpublic moveInCardinalDirection(direction: Direction): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tswitch (direction) {\n\t\t\tcase Direction.NORTH: {\n\t\t\t\tthis.moveNorth();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Direction.SOUTH: {\n\t\t\t\tthis.moveSouth();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Direction.EAST: {\n\t\t\t\tthis.moveEast();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Direction.WEST: {\n\t\t\t\tthis.moveWest();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Direction.NORTHEAST: {\n\t\t\t\tthis.moveNorthEast();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Direction.NORTHWEST: {\n\t\t\t\tthis.moveNorthWest();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Direction.SOUTHEAST: {\n\t\t\t\tthis.moveSouthEast();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Direction.SOUTHWEST: {\n\t\t\t\tthis.moveSouthWest();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tconst enumValues = Object.values(Direction).filter((value) => typeof value === 'number') as Direction[];\n\t\t\t\tconst randomIndex = Math.floor(Math.random() * enumValues.length);\n\t\t\t\tthis.moveInCardinalDirection(enumValues[randomIndex]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic moveNorth(): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.lastDirectionMoved == Direction.NORTH) {\n\t\t\tthis.consecutiveDirectionMoves += 1;\n\t\t} else {\n\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t}\n\t\tthis.lastDirectionMoved = Direction.NORTH;\n\t\tlet blocked = false;\n\t\tfor (const obstacle of this.obstacleCanvas.obstacles) {\n\t\t\tif (\n\t\t\t\tthis.yPosition - this.speed < obstacle.yTop + obstacle.height &&\n\t\t\t\tthis.yPosition > obstacle.yTop &&\n\t\t\t\tobstacle.xLeft < this.xPosition + this.size &&\n\t\t\t\tthis.xPosition < obstacle.xRight\n\t\t\t) {\n\t\t\t\tthis.yPosition = obstacle.yBottom;\n\t\t\t\tblocked = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!blocked) {\n\t\t\tthis.yPosition = Math.max(this.yPosition - this.speed, 0);\n\t\t} else {\n\t\t\tthis.wasLastMoveBlocked = true;\n\t\t}\n\t}\n\n\tpublic moveSouth(): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.lastDirectionMoved == Direction.SOUTH) {\n\t\t\tthis.consecutiveDirectionMoves += 1;\n\t\t} else {\n\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t}\n\t\tthis.lastDirectionMoved = Direction.SOUTH;\n\t\tlet blocked = false;\n\t\tfor (const obstacle of this.obstacleCanvas.obstacles) {\n\t\t\tif (\n\t\t\t\tthis.yPosition + this.speed + this.size > obstacle.yTop &&\n\t\t\t\tthis.yPosition < obstacle.yTop + obstacle.height &&\n\t\t\t\tobstacle.xLeft < this.xPosition + this.size &&\n\t\t\t\tthis.xPosition < obstacle.xRight\n\t\t\t) {\n\t\t\t\tthis.yPosition = obstacle.yTop - this.size;\n\t\t\t\tblocked = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!blocked) {\n\t\t\tthis.yPosition = Math.min(this.yPosition + this.speed, this.canvasHeight - this.size);\n\t\t} else {\n\t\t\tthis.wasLastMoveBlocked = true;\n\t\t}\n\t}\n\n\tpublic moveWest(): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.lastDirectionMoved == Direction.WEST) {\n\t\t\tthis.consecutiveDirectionMoves += 1;\n\t\t} else {\n\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t}\n\t\tthis.lastDirectionMoved = Direction.WEST;\n\t\tlet blocked = false;\n\t\tfor (const obstacle of this.obstacleCanvas.obstacles) {\n\t\t\tif (\n\t\t\t\tthis.xPosition - this.speed < obstacle.xRight &&\n\t\t\t\tthis.xPosition > obstacle.xLeft &&\n\t\t\t\tobstacle.yTop < this.yPosition + this.size &&\n\t\t\t\tthis.yPosition < obstacle.yBottom\n\t\t\t) {\n\t\t\t\tthis.xPosition = obstacle.xRight;\n\t\t\t\tblocked = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!blocked) {\n\t\t\tthis.xPosition = Math.max(this.xPosition - this.speed, 0);\n\t\t} else {\n\t\t\tthis.wasLastMoveBlocked = true;\n\t\t}\n\t}\n\n\tpublic moveEast(): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.lastDirectionMoved == Direction.EAST) {\n\t\t\tthis.consecutiveDirectionMoves += 1;\n\t\t} else {\n\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t}\n\t\tthis.lastDirectionMoved = Direction.EAST;\n\t\tlet blocked = false;\n\t\tfor (const obstacle of this.obstacleCanvas.obstacles) {\n\t\t\tif (\n\t\t\t\tthis.xPosition + this.speed + this.size > obstacle.xLeft &&\n\t\t\t\tthis.xPosition < obstacle.xLeft + obstacle.width &&\n\t\t\t\tobstacle.yTop < this.yPosition + this.size &&\n\t\t\t\tthis.yPosition < obstacle.yBottom\n\t\t\t) {\n\t\t\t\tthis.xPosition = obstacle.xLeft - this.size;\n\t\t\t\tblocked = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!blocked) {\n\t\t\tthis.xPosition = Math.min(this.xPosition + this.speed, this.canvasWidth - this.size);\n\t\t} else {\n\t\t\tthis.wasLastMoveBlocked = true;\n\t\t}\n\t}\n\n\tpublic moveNorthEast(): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.lastDirectionMoved == Direction.NORTHEAST) {\n\t\t\tthis.consecutiveDirectionMoves += 1;\n\t\t} else {\n\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t}\n\t\tthis.lastDirectionMoved = Direction.NORTHEAST;\n\t\tlet blockedNorth = false;\n\t\tlet blockedEast = false;\n\t\tfor (const obstacle of this.obstacleCanvas.obstacles) {\n\t\t\tif (\n\t\t\t\t!blockedNorth &&\n\t\t\t\tthis.yPosition - this.speed < obstacle.yTop + obstacle.height &&\n\t\t\t\tthis.yPosition > obstacle.yTop &&\n\t\t\t\tobstacle.xLeft < this.xPosition + this.size &&\n\t\t\t\tthis.xPosition < obstacle.xRight\n\t\t\t) {\n\t\t\t\tthis.yPosition = obstacle.yBottom;\n\t\t\t\tblockedNorth = true;\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!blockedEast &&\n\t\t\t\tthis.xPosition + this.speed + this.size > obstacle.xLeft &&\n\t\t\t\tthis.xPosition < obstacle.xLeft + obstacle.width &&\n\t\t\t\tobstacle.yTop < this.yPosition + this.size &&\n\t\t\t\tthis.yPosition < obstacle.yBottom\n\t\t\t) {\n\t\t\t\tthis.xPosition = obstacle.xLeft - this.size;\n\t\t\t\tblockedEast = true;\n\t\t\t}\n\t\t}\n\t\tif (blockedNorth && blockedEast) {\n\t\t\tthis.wasLastMoveBlocked = true;\n\t\t}\n\t\tif (!blockedNorth) {\n\t\t\tthis.yPosition = Math.max(this.yPosition - this.speed, 0);\n\t\t}\n\t\tif (!blockedEast) {\n\t\t\tthis.xPosition = Math.min(this.xPosition + this.speed, this.canvasWidth - this.size);\n\t\t}\n\t}\n\n\tpublic moveNorthWest(): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.lastDirectionMoved == Direction.NORTHWEST) {\n\t\t\tthis.consecutiveDirectionMoves += 1;\n\t\t} else {\n\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t}\n\t\tthis.lastDirectionMoved = Direction.NORTHWEST;\n\t\tlet blockedNorth = false;\n\t\tlet blockedWest = false;\n\t\tfor (const obstacle of this.obstacleCanvas.obstacles) {\n\t\t\tif (\n\t\t\t\t!blockedNorth &&\n\t\t\t\tthis.yPosition - this.speed < obstacle.yTop + obstacle.height &&\n\t\t\t\tthis.yPosition > obstacle.yTop &&\n\t\t\t\tobstacle.xLeft < this.xPosition + this.size &&\n\t\t\t\tthis.xPosition < obstacle.xRight\n\t\t\t) {\n\t\t\t\tthis.yPosition = obstacle.yBottom;\n\t\t\t\tblockedNorth = true;\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!blockedWest &&\n\t\t\t\tthis.xPosition - this.speed < obstacle.xRight &&\n\t\t\t\tthis.xPosition > obstacle.xLeft &&\n\t\t\t\tobstacle.yTop < this.yPosition + this.size &&\n\t\t\t\tthis.yPosition < obstacle.yBottom\n\t\t\t) {\n\t\t\t\tthis.xPosition = obstacle.xRight;\n\t\t\t\tblockedWest = true;\n\t\t\t}\n\t\t}\n\t\tif (blockedNorth && blockedWest) {\n\t\t\tthis.wasLastMoveBlocked = true;\n\t\t}\n\t\tif (!blockedNorth) {\n\t\t\tthis.yPosition = Math.max(this.yPosition - this.speed, 0);\n\t\t}\n\t\tif (!blockedWest) {\n\t\t\tthis.xPosition = Math.max(this.xPosition - this.speed, 0);\n\t\t}\n\t}\n\n\tpublic moveSouthEast(): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.lastDirectionMoved == Direction.SOUTHEAST) {\n\t\t\tthis.consecutiveDirectionMoves += 1;\n\t\t} else {\n\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t}\n\t\tthis.lastDirectionMoved = Direction.SOUTHEAST;\n\t\tlet blockedSouth = false;\n\t\tlet blockedEast = false;\n\t\tfor (const obstacle of this.obstacleCanvas.obstacles) {\n\t\t\tif (\n\t\t\t\t!blockedSouth &&\n\t\t\t\tthis.yPosition + this.speed + this.size > obstacle.yTop &&\n\t\t\t\tthis.yPosition < obstacle.yTop + obstacle.height &&\n\t\t\t\tobstacle.xLeft < this.xPosition + this.size &&\n\t\t\t\tthis.xPosition < obstacle.xRight\n\t\t\t) {\n\t\t\t\tthis.yPosition = obstacle.yTop - this.size;\n\t\t\t\tblockedSouth = true;\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!blockedEast &&\n\t\t\t\tthis.xPosition + this.speed + this.size > obstacle.xLeft &&\n\t\t\t\tthis.xPosition < obstacle.xLeft + obstacle.width &&\n\t\t\t\tobstacle.yTop < this.yPosition + this.size &&\n\t\t\t\tthis.yPosition < obstacle.yBottom\n\t\t\t) {\n\t\t\t\tthis.xPosition = obstacle.xLeft - this.size;\n\t\t\t\tblockedEast = true;\n\t\t\t}\n\t\t}\n\t\tif (blockedSouth && blockedEast) {\n\t\t\tthis.wasLastMoveBlocked = true;\n\t\t}\n\t\tif (!blockedSouth) {\n\t\t\tthis.yPosition = Math.min(this.yPosition + this.speed, this.canvasHeight - this.size);\n\t\t}\n\t\tif (!blockedEast) {\n\t\t\tthis.xPosition = Math.min(this.xPosition + this.speed, this.canvasWidth - this.size);\n\t\t}\n\t}\n\n\tpublic moveSouthWest(): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.lastDirectionMoved == Direction.SOUTHWEST) {\n\t\t\tthis.consecutiveDirectionMoves += 1;\n\t\t} else {\n\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t}\n\t\tthis.lastDirectionMoved = Direction.SOUTHWEST;\n\t\tlet blockedSouth = false;\n\t\tlet blockedWest = false;\n\t\tfor (const obstacle of this.obstacleCanvas.obstacles) {\n\t\t\tif (\n\t\t\t\t!blockedSouth &&\n\t\t\t\tthis.yPosition + this.speed + this.size > obstacle.yTop &&\n\t\t\t\tthis.yPosition < obstacle.yTop + obstacle.height &&\n\t\t\t\tobstacle.xLeft < this.xPosition + this.size &&\n\t\t\t\tthis.xPosition < obstacle.xRight\n\t\t\t) {\n\t\t\t\tthis.yPosition = obstacle.yTop - this.size;\n\t\t\t\tblockedSouth = true;\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!blockedWest &&\n\t\t\t\tthis.xPosition - this.speed < obstacle.xRight &&\n\t\t\t\tthis.xPosition > obstacle.xLeft &&\n\t\t\t\tobstacle.yTop < this.yPosition + this.size &&\n\t\t\t\tthis.yPosition < obstacle.yBottom\n\t\t\t) {\n\t\t\t\tthis.xPosition = obstacle.xRight;\n\t\t\t\tblockedWest = true;\n\t\t\t}\n\t\t}\n\t\tif (blockedSouth && blockedWest) {\n\t\t\tthis.wasLastMoveBlocked = true;\n\t\t}\n\t\tif (!blockedSouth) {\n\t\t\tthis.yPosition = Math.min(this.yPosition + this.speed, this.canvasHeight - this.size);\n\t\t}\n\t\tif (!blockedWest) {\n\t\t\tthis.xPosition = Math.max(this.xPosition - this.speed, 0);\n\t\t}\n\t}\n}\n","import { AudioFile, AudioManager } from './AudioManager';\nimport { Bomb } from './Bomb';\nimport { ObstacleCanvas } from './ObstacleCanvas';\nimport { Tank } from './tanks/Tank';\n\nexport class Ammunition {\n\tpublic xPosition: number;\n\tpublic yPosition: number;\n\tpublic xVelocity: number;\n\tpublic yVelocity: number;\n\tpublic theta: number;\n\tpublic bounces: number;\n\tpublic maxBounces: number;\n\tpublic speed: number;\n\tpublic canvasWidth: number;\n\tpublic canvasHeight: number;\n\tpublic isDestroyed: boolean;\n\tpublic audioManager: AudioManager;\n\tpublic radius: number = 4;\n\n\tconstructor(\n\t\tstartX: number,\n\t\tstartY: number,\n\t\ttheta: number,\n\t\tspeed: number,\n\t\tmaxBounces: number,\n\t\tcanvasWidth: number,\n\t\tcanvasHeight: number,\n\t\tisDestroyed: boolean,\n\t\taudioManager: AudioManager\n\t) {\n\t\tthis.xPosition = startX;\n\t\tthis.yPosition = startY;\n\t\tthis.theta = theta;\n\t\tthis.speed = speed;\n\t\tthis.xVelocity = Math.cos(this.theta) * this.speed;\n\t\tthis.yVelocity = Math.sin(this.theta) * this.speed;\n\t\tthis.bounces = 0;\n\t\tthis.maxBounces = maxBounces;\n\t\tthis.canvasWidth = canvasWidth;\n\t\tthis.canvasHeight = canvasHeight;\n\t\tthis.isDestroyed = isDestroyed;\n\t\tthis.audioManager = audioManager;\n\t}\n\n\tupdatePosition(obstacleCanvas: ObstacleCanvas): void {\n\t\tthis.xPosition += this.xVelocity;\n\t\tthis.yPosition += this.yVelocity;\n\n\t\tif (this.xPosition <= 0 || this.xPosition > this.canvasWidth) {\n\t\t\tthis.xVelocity = -this.xVelocity;\n\t\t\tthis.bounces++;\n\t\t}\n\n\t\tif (this.yPosition <= 0 || this.yPosition > this.canvasHeight) {\n\t\t\tthis.yVelocity = -this.yVelocity;\n\t\t\tthis.bounces++;\n\t\t}\n\n\t\tobstacleCanvas.obstacles.forEach((obstacle) => {\n\t\t\tif (\n\t\t\t\tthis.xPosition > obstacle.xLeft &&\n\t\t\t\tthis.xPosition < obstacle.xRight &&\n\t\t\t\tthis.yPosition > obstacle.yTop &&\n\t\t\t\tthis.yPosition < obstacle.yBottom\n\t\t\t) {\n\t\t\t\tthis.bounces++;\n\t\t\t\tconst fromLeft = Math.abs(this.xPosition - obstacle.xLeft);\n\t\t\t\tconst fromRight = Math.abs(this.xPosition - obstacle.xRight);\n\t\t\t\tconst fromTop = Math.abs(this.yPosition - obstacle.yTop);\n\t\t\t\tconst fromBottom = Math.abs(this.yPosition - obstacle.yBottom);\n\t\t\t\tconst minDistance = Math.min(fromLeft, fromRight, fromTop, fromBottom);\n\n\t\t\t\tif (minDistance === fromTop) {\n\t\t\t\t\tthis.yPosition = obstacle.yTop - 1;\n\t\t\t\t\tthis.yVelocity = -this.yVelocity;\n\t\t\t\t} else if (minDistance === fromBottom) {\n\t\t\t\t\tthis.yPosition = obstacle.yBottom + 1;\n\t\t\t\t\tthis.yVelocity = -this.yVelocity;\n\t\t\t\t} else if (minDistance === fromLeft) {\n\t\t\t\t\tthis.xPosition = obstacle.xLeft - 1;\n\t\t\t\t\tthis.xVelocity = -this.xVelocity;\n\t\t\t\t} else if (minDistance === fromRight) {\n\t\t\t\t\tthis.xPosition = obstacle.xRight + 1;\n\t\t\t\t\tthis.xVelocity = -this.xVelocity;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (this.bounces > this.maxBounces) {\n\t\t\tthis.isDestroyed = true;\n\t\t}\n\t}\n\n\tcheckEnemyHit(enemyTanks: Tank[]): void {\n\t\tenemyTanks.forEach((enemyTank) => {\n\t\t\tif (enemyTank.isDestroyed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tthis.xPosition > enemyTank.xLeft &&\n\t\t\t\tthis.xPosition < enemyTank.xRight &&\n\t\t\t\tthis.yPosition > enemyTank.yTop &&\n\t\t\t\tthis.yPosition < enemyTank.yBottom\n\t\t\t) {\n\t\t\t\tthis.isDestroyed = true;\n\t\t\t\tenemyTank.destroy();\n\t\t\t\tthis.audioManager.play(AudioFile.TANK_DESTROY);\n\t\t\t\tconsole.log('Enemy hit!!!');\n\t\t\t}\n\t\t});\n\t}\n\n\tcheckPlayerHit(playerTank: Tank): void {\n\t\tif (playerTank.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\tthis.xPosition > playerTank.xLeft &&\n\t\t\tthis.xPosition < playerTank.xRight &&\n\t\t\tthis.yPosition > playerTank.yTop &&\n\t\t\tthis.yPosition < playerTank.yBottom\n\t\t) {\n\t\t\tplayerTank.destroy();\n\t\t\tthis.isDestroyed = true;\n\t\t\tconsole.log('Player Hit!!!');\n\t\t}\n\t}\n\n\tcheckAmmunitionCollision(ammunitions: Ammunition[]): void {\n\t\tfor (const ammunition of ammunitions) {\n\t\t\tif (ammunition !== this && !ammunition.isDestroyed) {\n\t\t\t\tconst dx = this.xPosition - ammunition.xPosition;\n\t\t\t\tconst dy = this.yPosition - ammunition.yPosition;\n\t\t\t\tconst distance = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\tif (distance < this.radius + ammunition.radius) {\n\t\t\t\t\tthis.isDestroyed = true;\n\t\t\t\t\tammunition.isDestroyed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tcheckBombCollision(bombs: Bomb[]): void {\n\t\tfor (const bomb of bombs) {\n\t\t\tif (!bomb.isDestroyed) {\n\t\t\t\tconst dx = this.xPosition - bomb.xPosition;\n\t\t\t\tconst dy = this.yPosition - bomb.yPosition;\n\t\t\t\tconst distance = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\tif (distance < this.radius + bomb.radius) {\n\t\t\t\t\tthis.isDestroyed = true;\n\t\t\t\t\tbomb.destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treload(\n\t\tstartX: number,\n\t\tstartY: number,\n\t\ttheta: number,\n\t\tisDestroyed: boolean,\n\t\tcanvasWidth: number,\n\t\tcanvasHeight: number\n\t) {\n\t\tthis.xPosition = startX;\n\t\tthis.yPosition = startY;\n\t\tthis.theta = theta;\n\t\tthis.isDestroyed = isDestroyed;\n\t\tthis.xVelocity = Math.cos(this.theta) * this.speed;\n\t\tthis.yVelocity = Math.sin(this.theta) * this.speed;\n\t\tthis.canvasWidth = canvasWidth;\n\t\tthis.canvasHeight = canvasHeight;\n\t\tthis.bounces = 0;\n\t}\n\n\tdraw(context: CanvasRenderingContext2D): void {\n\t\tcontext.beginPath();\n\t\tcontext.arc(this.xPosition, this.yPosition, this.radius, 0, 2 * Math.PI);\n\t\tcontext.fillStyle = 'white';\n\t\tcontext.fill();\n\t\tcontext.lineWidth = 2;\n\t\tcontext.strokeStyle = 'black';\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\t}\n\n\twillHitPlayerTank(obstacleCanvas: ObstacleCanvas, playerTank: Tank): boolean {\n\t\tlet predictedXPosition: number = this.xPosition;\n\t\tlet predictedYPosition: number = this.yPosition;\n\t\tlet predictedXVelocity: number = this.xVelocity;\n\t\tlet predictedYVelocity: number = this.yVelocity;\n\t\tlet predictedBounces = 0;\n\t\twhile (predictedBounces <= this.maxBounces) {\n\t\t\tpredictedXPosition += predictedXVelocity;\n\t\t\tpredictedYPosition += predictedYVelocity;\n\t\t\tif (predictedXPosition <= 0 || predictedXPosition > this.canvasWidth) {\n\t\t\t\tpredictedXVelocity = -predictedXVelocity;\n\t\t\t\tpredictedBounces++;\n\t\t\t}\n\t\t\tif (predictedYPosition <= 0 || predictedYPosition > this.canvasHeight) {\n\t\t\t\tpredictedYVelocity = -predictedYVelocity;\n\t\t\t\tpredictedBounces++;\n\t\t\t}\n\t\t\tobstacleCanvas.obstacles.forEach((obstacle) => {\n\t\t\t\tif (\n\t\t\t\t\tpredictedXPosition > obstacle.xLeft &&\n\t\t\t\t\tpredictedXPosition < obstacle.xRight &&\n\t\t\t\t\tpredictedYPosition > obstacle.yTop &&\n\t\t\t\t\tpredictedYPosition < obstacle.yBottom\n\t\t\t\t) {\n\t\t\t\t\tpredictedBounces++;\n\t\t\t\t\tpredictedXVelocity = -predictedXVelocity;\n\t\t\t\t\tpredictedYVelocity = -predictedYVelocity;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (\n\t\t\t\tpredictedXPosition > playerTank.xLeft &&\n\t\t\t\tpredictedXPosition < playerTank.xRight &&\n\t\t\t\tpredictedYPosition > playerTank.yTop &&\n\t\t\t\tpredictedYPosition < playerTank.yBottom\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class PlayerAmmunition extends Ammunition {\n\tconstructor(\n\t\tstartX: number,\n\t\tstartY: number,\n\t\ttheta: number,\n\t\tcanvasWidth: number,\n\t\tcanvasHeight: number,\n\t\tisDestroyed: boolean,\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst playerAmmunitionMaxBounces = 1;\n\t\tconst playerAmmunitionSpeed = 4;\n\t\tsuper(\n\t\t\tstartX,\n\t\t\tstartY,\n\t\t\ttheta,\n\t\t\tplayerAmmunitionSpeed,\n\t\t\tplayerAmmunitionMaxBounces,\n\t\t\tcanvasWidth,\n\t\t\tcanvasHeight,\n\t\t\tisDestroyed,\n\t\t\taudioManager\n\t\t);\n\t}\n}\n\nexport class BasicAIAmmunition extends Ammunition {\n\tconstructor(\n\t\tstartX: number,\n\t\tstartY: number,\n\t\ttheta: number,\n\t\tcanvasWidth: number,\n\t\tcanvasHeight: number,\n\t\tisDestroyed: boolean,\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst BasicAIAmmunitionMaxBounces = 1;\n\t\tconst BasicAIAmmunitionSpeed = 4;\n\t\tsuper(\n\t\t\tstartX,\n\t\t\tstartY,\n\t\t\ttheta,\n\t\t\tBasicAIAmmunitionSpeed,\n\t\t\tBasicAIAmmunitionMaxBounces,\n\t\t\tcanvasWidth,\n\t\t\tcanvasHeight,\n\t\t\tisDestroyed,\n\t\t\taudioManager\n\t\t);\n\t}\n}\n\nexport class SuperAIAmmunition extends Ammunition {\n\tconstructor(\n\t\tstartX: number,\n\t\tstartY: number,\n\t\ttheta: number,\n\t\tcanvasWidth: number,\n\t\tcanvasHeight: number,\n\t\tisDestroyed: boolean,\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst superAIAmmunitionMaxBounces = 2;\n\t\tconst superAIAmmunitionSpeed = 6;\n\t\tsuper(\n\t\t\tstartX,\n\t\t\tstartY,\n\t\t\ttheta,\n\t\t\tsuperAIAmmunitionSpeed,\n\t\t\tsuperAIAmmunitionMaxBounces,\n\t\t\tcanvasWidth,\n\t\t\tcanvasHeight,\n\t\t\tisDestroyed,\n\t\t\taudioManager\n\t\t);\n\t}\n}\n","export class BombFragment {\n\tpublic life: number;\n\n\tprivate x: number;\n\tprivate y: number;\n\tprivate fragmentRadius: number;\n\tprivate fragmentColor: string;\n\tprivate velocityX: number;\n\tprivate velocityY: number;\n\tprivate blastRadius: number;\n\n\tconstructor(x: number, y: number, radius: number, color: string, velocityX: number, velocityY: number, life: number) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.fragmentRadius = radius;\n\t\tthis.fragmentColor = color;\n\t\tthis.velocityX = velocityX;\n\t\tthis.velocityY = velocityY;\n\t\tthis.blastRadius = life;\n\t\tthis.life = life;\n\t}\n\n\tupdate(): void {\n\t\tthis.x += this.velocityX;\n\t\tthis.y += this.velocityY;\n\t\tthis.life -= 1;\n\t}\n\n\tdraw(context: CanvasRenderingContext2D): void {\n\t\tcontext.beginPath();\n\t\tcontext.arc(this.x, this.y, this.fragmentRadius * (this.life / this.blastRadius), 0, Math.PI * 2, false);\n\t\tcontext.fillStyle = this.fragmentColor;\n\t\tcontext.fill();\n\t\tcontext.closePath();\n\t}\n}\n","import * as d3 from 'd3';\nimport { AudioFile, AudioManager } from './AudioManager';\nimport { BombFragment } from './BombFragment';\nimport { Tank } from './tanks/Tank';\n\nexport class Bomb {\n\tpublic xPosition: number;\n\tpublic yPosition: number;\n\tpublic blastRadius: number;\n\tpublic blastDelayMS: number;\n\tpublic isDestroyed: boolean;\n\tpublic isExploding: boolean;\n\tpublic fuseStartTime: number;\n\tpublic shouldFlashRed: boolean;\n\tpublic audioManager: AudioManager;\n\tpublic radius: number = 15;\n\n\tprivate fragments: BombFragment[];\n\tprivate fragmentColorScale = d3.scaleLinear<string>().domain([0, 0.5, 1]).range(['red', 'yellow', 'orange']);\n\n\tconstructor(startX: number, startY: number, blastRadius: number, isDestroyed: boolean, audioManager: AudioManager) {\n\t\tthis.xPosition = startX;\n\t\tthis.yPosition = startY;\n\t\tthis.blastRadius = blastRadius;\n\t\tthis.isDestroyed = isDestroyed;\n\t\tthis.audioManager = audioManager;\n\t\tthis.blastDelayMS = 5000;\n\t\tthis.fuseStartTime = 0;\n\t\tthis.shouldFlashRed = false;\n\t\tthis.isExploding = false;\n\t\tthis.fragments = [];\n\t}\n\n\tpublic destroy(): void {\n\t\tif (this.isDestroyed || this.isExploding) {\n\t\t\treturn;\n\t\t}\n\t\tthis.createFragments();\n\t\tthis.audioManager.play(AudioFile.BOMB_EXPLODE);\n\t\tthis.isExploding = true;\n\t\tsetTimeout((): void => {\n\t\t\tthis.isExploding = false;\n\t\t\tthis.isDestroyed = true;\n\t\t}, 500);\n\t}\n\n\tpublic checkEnemyHit(enemyTanks: Tank[]): void {\n\t\tenemyTanks.forEach((enemyTank) => {\n\t\t\tif (enemyTank.isDestroyed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.isExploding) {\n\t\t\t\tif (\n\t\t\t\t\tthis.isExploding &&\n\t\t\t\t\tthis.isPointInsideBlastRadius(\n\t\t\t\t\t\tenemyTank.xPosition + enemyTank.tankMidpoint,\n\t\t\t\t\t\tenemyTank.yPosition + enemyTank.tankMidpoint\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tenemyTank.destroy();\n\t\t\t\t\tconsole.log('Enemy hit with bomb!!!');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic checkPlayerHit(playerTank: Tank): void {\n\t\tif (playerTank.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\tthis.isExploding &&\n\t\t\t(this.isPointInsideBlastRadius(playerTank.xLeft, playerTank.yTop) ||\n\t\t\t\tthis.isPointInsideBlastRadius(playerTank.xRight, playerTank.yTop) ||\n\t\t\t\tthis.isPointInsideBlastRadius(playerTank.xLeft, playerTank.yBottom) ||\n\t\t\t\tthis.isPointInsideBlastRadius(playerTank.xRight, playerTank.yBottom) ||\n\t\t\t\tthis.isPointInsideBlastRadius(playerTank.xPosition, playerTank.yPosition))\n\t\t) {\n\t\t\tplayerTank.destroy();\n\t\t\tconsole.log('Player Hit with bomb!!!');\n\t\t}\n\t}\n\n\tpublic setFuse(): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tthis.fuseStartTime = performance.now();\n\t\tthis.animateFuse();\n\t\tsetTimeout((): void => {\n\t\t\tthis.destroy();\n\t\t}, this.blastDelayMS);\n\t}\n\n\tpublic isPointInsideBlastRadius(x: number, y: number): boolean {\n\t\tconst dx = x - this.xPosition;\n\t\tconst dy = y - this.yPosition;\n\t\treturn Math.sqrt(dx * dx + dy * dy) <= this.blastRadius;\n\t}\n\n\tprotected updateExplosion(context: CanvasRenderingContext2D): void {\n\t\tthis.fragments.forEach((particle) => {\n\t\t\tparticle.update();\n\t\t\tparticle.draw(context);\n\t\t});\n\n\t\tthis.fragments = this.fragments.filter((particle) => particle.life > 0);\n\t}\n\n\tpublic draw(context: CanvasRenderingContext2D): void {\n\t\tif (this.isExploding) {\n\t\t\tthis.updateExplosion(context);\n\t\t\treturn;\n\t\t}\n\n\t\tcontext.beginPath();\n\t\tcontext.arc(this.xPosition, this.yPosition, this.radius, 0, 2 * Math.PI);\n\t\tcontext.fillStyle = this.shouldFlashRed ? 'red' : 'yellow';\n\t\tcontext.fill();\n\t\tcontext.lineWidth = 3;\n\t\tcontext.strokeStyle = 'black';\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\n\t\tcontext.beginPath();\n\t\tcontext.arc(this.xPosition, this.yPosition, 10, 0, 2 * Math.PI);\n\t\tcontext.lineWidth = 1.5;\n\t\tcontext.strokeStyle = 'black';\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\t}\n\n\tprivate animateFuse(): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tconst elapsedTime = performance.now() - this.fuseStartTime;\n\t\tconst fractionElapsed = elapsedTime / this.blastDelayMS;\n\t\tconst flashThresholds = [0.25, 0.5, 0.625, 0.75, 0.8125, 0.875, 0.90625, 0.9375, 0.96875, 0.984375];\n\t\tthis.shouldFlashRed = flashThresholds.some(\n\t\t\t(threshold) => fractionElapsed > threshold && fractionElapsed < threshold + 0.01\n\t\t);\n\t\trequestAnimationFrame(() => this.animateFuse());\n\t}\n\n\tprivate createFragments(): void {\n\t\tconst fragmentCount = 50;\n\t\tfor (let i = 0; i < fragmentCount; i++) {\n\t\t\tconst angle = Math.random() * 2 * Math.PI;\n\t\t\tconst speed = Math.random() * 5 + 2;\n\t\t\tconst velocityX = Math.cos(angle) * speed;\n\t\t\tconst velocityY = Math.sin(angle) * speed;\n\t\t\tconst fragment = new BombFragment(\n\t\t\t\tthis.xPosition,\n\t\t\t\tthis.yPosition,\n\t\t\t\tMath.random() * 2 + 1,\n\t\t\t\tthis.fragmentColorScale(Math.random()),\n\t\t\t\tvelocityX,\n\t\t\t\tvelocityY,\n\t\t\t\tthis.blastRadius\n\t\t\t);\n\t\t\tthis.fragments.push(fragment);\n\t\t}\n\t}\n}\n\nexport class PlayerBomb extends Bomb {\n\tconstructor(startX: number, startY: number, isDestroyed: boolean, audioManager: AudioManager) {\n\t\tconst playerBombBlastRadius = 50;\n\t\tsuper(startX, startY, playerBombBlastRadius, isDestroyed, audioManager);\n\t}\n}\n\nexport class BasicBomb extends Bomb {\n\tconstructor(startX: number, startY: number, isDestroyed: boolean, audioManager: AudioManager) {\n\t\tconst basicBombBlastRadius = 80;\n\t\tsuper(startX, startY, basicBombBlastRadius, isDestroyed, audioManager);\n\t}\n}\n\nexport class SuperBomb extends Bomb {\n\tconstructor(startX: number, startY: number, isDestroyed: boolean, audioManager: AudioManager) {\n\t\tconst superBombBlastRadius = 100;\n\t\tsuper(startX, startY, superBombBlastRadius, isDestroyed, audioManager);\n\t}\n}\n\nexport class LoveBomb extends Bomb {\n\tconstructor(startX: number, startY: number, isDestroyed: boolean, audioManager: AudioManager) {\n\t\tconst loveBombBlastRadius = 150;\n\t\tsuper(startX, startY, loveBombBlastRadius, isDestroyed, audioManager);\n\t}\n\n\toverride draw(context: CanvasRenderingContext2D): void {\n\t\tif (this.isExploding) {\n\t\t\tthis.updateExplosion(context);\n\t\t\treturn;\n\t\t}\n\t\tcontext.save();\n\t\tcontext.translate(this.xPosition, this.yPosition);\n\t\tcontext.scale(1, 1.3);\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(0, 0);\n\t\tcontext.bezierCurveTo(12, -12, 24, 0, 0, 24);\n\t\tcontext.bezierCurveTo(-24, 0, -12, -12, 0, 0);\n\t\tcontext.fillStyle = this.shouldFlashRed ? 'red' : '#FFC2D1';\n\t\tcontext.fill();\n\t\tcontext.lineWidth = 3;\n\t\tcontext.strokeStyle = 'black';\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\t\tcontext.restore();\n\t}\n}\n","import { Ammunition } from './Ammunition';\nimport { Bomb } from './Bomb';\nimport { Tank } from './tanks/Tank';\n\nexport class GameRenderer {\n\tpublic playerWin = false;\n\tpublic enemyWin = false;\n\n\tprivate context: CanvasRenderingContext2D | null;\n\n\tconstructor(public canvas: HTMLCanvasElement) {\n\t\tconst context = this.canvas.getContext('2d');\n\t\tif (!context) {\n\t\t\tthrow new Error('2d context not supported or canvas element not found.');\n\t\t}\n\t\tthis.context = context;\n\t}\n\n\tpublic initializeCanvas(width: number, height: number): void {\n\t\tthis.canvas.width = width;\n\t\tthis.canvas.height = height;\n\t}\n\n\trenderLevelOverScreen() {\n\t\tif (!this.context) {\n\t\t\tthrow new Error('2d context not supported or canvas element not found.');\n\t\t}\n\n\t\tconst message = this.playerWin ? 'Win' : this.enemyWin ? 'Lose' : '';\n\t\tif (message === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst fontSize = 100;\n\t\tthis.context.font = `${fontSize}px Arial`;\n\t\tthis.context.lineWidth = 5;\n\t\tthis.context.strokeStyle = this.playerWin ? 'green' : 'red';\n\t\tthis.context.fillStyle = this.playerWin ? 'green' : 'red';\n\n\t\tconst textWidth = this.context.measureText(message).width;\n\t\tconst x = (this.canvas.width - textWidth) / 2;\n\t\tconst y = this.canvas.height / 2 + fontSize / 2;\n\n\t\tthis.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t\tthis.context.strokeText(message, x, y);\n\t\tthis.context.fillText(message, x, y);\n\t}\n\n\trender(progress: number, playerTank: Tank, enemyTanks: Tank[]): void {\n\t\tif (!this.context) {\n\t\t\tthrow new Error('2d context not supported or canvas element not found.');\n\t\t}\n\t\tthis.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n\t\tif (playerTank.isDestroyed) {\n\t\t\tthis.enemyWin = true;\n\t\t} else if (enemyTanks.every((tank) => tank.isDestroyed)) {\n\t\t\tthis.playerWin = true;\n\t\t}\n\t\tif (this.enemyWin || this.playerWin) {\n\t\t\tthis.renderLevelOverScreen();\n\t\t}\n\t\tconst allAmmunition: Ammunition[] = [\n\t\t\t...enemyTanks.flatMap((enemyTank) => enemyTank.ammunition),\n\t\t\t...playerTank.ammunition,\n\t\t];\n\t\tconst allBombs: Bomb[] = [...enemyTanks.flatMap((enemyTank) => enemyTank.bombs), ...playerTank.bombs];\n\t\tplayerTank.updatePosition(playerTank, enemyTanks, allAmmunition, allBombs);\n\t\tplayerTank.aim(playerTank.aimXPos, playerTank.aimYPos, playerTank);\n\n\t\tenemyTanks.forEach((enemyTank) => {\n\t\t\tif (!enemyTank.isDestroyed) {\n\t\t\t\tenemyTank.updatePosition(playerTank, enemyTanks, allAmmunition, allBombs);\n\t\t\t\tenemyTank.aim(enemyTank.aimXPos, enemyTank.aimYPos, playerTank);\n\t\t\t\tenemyTank.shoot(playerTank);\n\t\t\t\tenemyTank.plantBomb(playerTank);\n\t\t\t}\n\t\t});\n\t\tenemyTanks.forEach((enemyTank) => {\n\t\t\tenemyTank.draw(this.context as CanvasRenderingContext2D);\n\t\t\tenemyTank.ammunition.forEach((ammunition) => {\n\t\t\t\tif (ammunition.isDestroyed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tammunition.checkAmmunitionCollision(allAmmunition);\n\t\t\t\tammunition.checkBombCollision([...playerTank.bombs]);\n\t\t\t\tammunition.updatePosition(enemyTank.obstacleCanvas);\n\t\t\t\tammunition.checkPlayerHit(playerTank);\n\t\t\t\tammunition.draw(this.context as CanvasRenderingContext2D);\n\t\t\t});\n\t\t\tenemyTank.bombs.forEach((bomb) => {\n\t\t\t\tif (bomb.isDestroyed && !bomb.isExploding) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbomb.checkPlayerHit(playerTank);\n\t\t\t\tbomb.draw(this.context as CanvasRenderingContext2D);\n\t\t\t});\n\t\t});\n\n\t\tplayerTank.draw(this.context as CanvasRenderingContext2D);\n\t\tif (!playerTank.isDestroyed) {\n\t\t\tplayerTank.reticule.draw(\n\t\t\t\tthis.context as CanvasRenderingContext2D,\n\t\t\t\tplayerTank.xPosition,\n\t\t\t\tplayerTank.yPosition,\n\t\t\t\tplayerTank.aimXPos,\n\t\t\t\tplayerTank.aimYPos\n\t\t\t);\n\t\t}\n\t\tplayerTank.ammunition.forEach((ammunition) => {\n\t\t\tif (ammunition.isDestroyed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tammunition.checkAmmunitionCollision(allAmmunition);\n\t\t\tammunition.checkBombCollision(allBombs);\n\t\t\tammunition.updatePosition(playerTank.obstacleCanvas);\n\t\t\tammunition.checkEnemyHit(enemyTanks);\n\t\t\tammunition.checkPlayerHit(playerTank);\n\t\t\tammunition.draw(this.context as CanvasRenderingContext2D);\n\t\t});\n\t\tplayerTank.bombs.forEach((bomb) => {\n\t\t\tif (bomb.isDestroyed && !bomb.isExploding) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tbomb.checkEnemyHit(enemyTanks);\n\t\t\tbomb.checkPlayerHit(playerTank);\n\t\t\tbomb.draw(this.context as CanvasRenderingContext2D);\n\t\t});\n\t}\n}\n","import { GameRenderer } from './GameRenderer';\nimport { ObstacleCanvas } from './ObstacleCanvas';\nimport { Tank } from './tanks/Tank';\n\nexport class GameCanvas {\n\tpublic gameRenderer: GameRenderer;\n\tprivate playerTank: Tank | null = null;\n\tprivate enemyTanks: Tank[] = [];\n\tprivate lastRenderTime: number;\n\tpublic obstacleCanvas: ObstacleCanvas;\n\tpublic width: number;\n\tpublic height: number;\n\tpublic animationFrameID: number | null = null;\n\n\tconstructor(canvasSelector: string, width: number, height: number, obstacleCanvas: ObstacleCanvas) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.obstacleCanvas = obstacleCanvas;\n\t\tthis.animationFrameID = null;\n\t\tthis.gameRenderer = new GameRenderer(document.querySelector(canvasSelector) as HTMLCanvasElement);\n\t\tthis.gameRenderer.initializeCanvas(this.width, this.height);\n\t\tthis.lastRenderTime = 0;\n\t\twindow.addEventListener('resize', this.resizeCanvas.bind(this));\n\t}\n\n\tpublic start() {\n\t\tif (!this.animationFrameID) {\n\t\t\tthis.animationFrameID = requestAnimationFrame(this.gameLoop.bind(this));\n\t\t}\n\t}\n\n\tpublic stop() {\n\t\tif (this.animationFrameID) {\n\t\t\tcancelAnimationFrame(this.animationFrameID);\n\t\t\tthis.animationFrameID = null;\n\t\t}\n\t}\n\n\tprivate resizeCanvas(): void {}\n\n\tprivate gameLoop(timeStamp: number): void {\n\t\tif (this.playerTank != null) {\n\t\t\tconst progress = timeStamp - this.lastRenderTime;\n\t\t\tthis.gameRenderer.render(progress, this.playerTank, this.enemyTanks);\n\t\t\tthis.lastRenderTime = timeStamp;\n\t\t\tthis.animationFrameID = requestAnimationFrame(this.gameLoop.bind(this));\n\t\t}\n\t}\n\n\tpublic addEnemyTank(tank: Tank): void {\n\t\tthis.enemyTanks.push(tank);\n\t}\n\n\tpublic addPlayerTank(tank: Tank): void {\n\t\tthis.playerTank = tank;\n\t}\n}\n","import { GameCanvas } from './GameCanvas';\nimport { ObstacleCanvas } from './ObstacleCanvas';\nimport { Tank } from './tanks/Tank';\n\nexport class Node {\n\tpublic x: number;\n\tpublic y: number;\n\tpublic g = 0;\n\tpublic h = 0;\n\tpublic f = 0;\n\tpublic walkable = true;\n\tpublic parent: Node | null = null;\n\n\tconstructor(x: number, y: number) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n}\n\nexport class NavigationGrid {\n\tpublic grid: Node[][] = [];\n\tpublic gridCellWidth = 30;\n\tpublic gridXLength: number;\n\tpublic gridYLength: number;\n\tpublic path: Node[] = [];\n\tpublic stationary: boolean;\n\n\tconstructor(gameCanvas?: GameCanvas, obstacleCanvas?: ObstacleCanvas, stationary: boolean = true) {\n\t\tif (!gameCanvas || !obstacleCanvas || stationary) {\n\t\t\tthis.gridXLength = 0;\n\t\t\tthis.gridYLength = 0;\n\t\t\tthis.stationary = true;\n\t\t\treturn;\n\t\t}\n\t\tthis.stationary = false;\n\t\tthis.gridXLength = Math.floor(gameCanvas.width / this.gridCellWidth);\n\t\tthis.gridYLength = Math.floor(gameCanvas.height / this.gridCellWidth);\n\t\tfor (let x = 0; x < this.gridXLength; x++) {\n\t\t\tthis.grid[x] = [];\n\t\t\tfor (let y = 0; y < this.gridYLength; y++) {\n\t\t\t\tthis.grid[x][y] = new Node(x, y);\n\t\t\t\tconst gridXLeft = x * this.gridCellWidth;\n\t\t\t\tconst gridXRight = gridXLeft + this.gridCellWidth;\n\t\t\t\tconst gridYTop = y * this.gridCellWidth;\n\t\t\t\tconst gridYBottom = gridYTop + this.gridCellWidth;\n\t\t\t\tthis.grid[x][y].walkable = !obstacleCanvas.obstacles.some(\n\t\t\t\t\t(obs) => gridXRight > obs.xLeft && gridXLeft < obs.xRight && gridYBottom > obs.yTop && gridYTop < obs.yBottom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treset(): void {\n\t\tfor (let x = 0; x < this.gridXLength; x++) {\n\t\t\tfor (let y = 0; y < this.gridYLength; y++) {\n\t\t\t\tthis.grid[x][y].f = 0;\n\t\t\t\tthis.grid[x][y].g = 0;\n\t\t\t\tthis.grid[x][y].h = 0;\n\t\t\t\tthis.grid[x][y].parent = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetNodeFromTank(tank: Tank): Node {\n\t\tif (this.stationary) {\n\t\t\treturn new Node(0, 0);\n\t\t}\n\t\tlet xGridCoordinate: number = Math.floor((tank.xPosition + tank.size / 2) / this.gridCellWidth);\n\t\tlet yGridCoordinate: number = Math.floor((tank.yPosition + tank.size / 2) / this.gridCellWidth);\n\n\t\txGridCoordinate = Math.max(0, Math.min(xGridCoordinate, this.gridXLength - 1));\n\t\tyGridCoordinate = Math.max(0, Math.min(yGridCoordinate, this.gridYLength - 1));\n\t\treturn this.grid[xGridCoordinate][yGridCoordinate];\n\t}\n\n\tgetRandomNodeInRadiusOfTarget(target: Node, radius: number): Node {\n\t\tconst candidateNodes: Node[] = [];\n\t\tfor (let x = 0; x < this.gridXLength; x++) {\n\t\t\tfor (let y = 0; y < this.gridYLength; y++) {\n\t\t\t\tconst node = this.grid[x][y];\n\t\t\t\tconst distance = Math.sqrt(Math.pow(node.x - target.x, 2) + Math.pow(node.y - target.y, 2));\n\t\t\t\tif (distance <= radius + 1 && distance >= radius - 1 && node.walkable) {\n\t\t\t\t\tcandidateNodes.push(node);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst randomIndex = Math.floor(Math.random() * candidateNodes.length);\n\t\treturn candidateNodes[randomIndex];\n\t}\n\n\taStar(start: Node, target: Node): Node[] | null {\n\t\tconst openSet: Node[] = [start];\n\t\tconst closedSet = new Set<Node>();\n\n\t\twhile (openSet.length > 0) {\n\t\t\tlet current: Node | null = openSet.sort((a, b) => a.f - b.f)[0];\n\n\t\t\tif (current.x === target.x && current.y === target.y) {\n\t\t\t\tconst path = [];\n\t\t\t\twhile (current !== null) {\n\t\t\t\t\tpath.unshift(current);\n\t\t\t\t\tcurrent = current.parent;\n\t\t\t\t}\n\t\t\t\treturn path;\n\t\t\t}\n\n\t\t\topenSet.splice(openSet.indexOf(current), 1);\n\t\t\tclosedSet.add(current);\n\n\t\t\tconst neighbors = this.getWalkableNeighbors(current);\n\n\t\t\tfor (const neighbor of neighbors) {\n\t\t\t\tif (closedSet.has(neighbor)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst tentativeG = current.g + (neighbor.x - current.x === 0 || neighbor.y - current.y === 0 ? 1 : Math.SQRT2);\n\t\t\t\tif (!openSet.includes(neighbor)) {\n\t\t\t\t\topenSet.push(neighbor);\n\t\t\t\t} else if (tentativeG >= neighbor.g) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tneighbor.parent = current;\n\t\t\t\tneighbor.g = tentativeG;\n\t\t\t\tneighbor.h = Math.round(Math.sqrt(Math.pow(neighbor.x - target.x, 2) + Math.pow(neighbor.y - target.y, 2)));\n\t\t\t\tneighbor.f = neighbor.g + neighbor.h;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetWalkableNeighbors(node: Node): Node[] {\n\t\t// Get the 8 nodes surrounding the current only if its walkable\n\t\tconst neighbors: Node[] = [];\n\t\tfor (let dx = -1; dx <= 1; dx++) {\n\t\t\tfor (let dy = -1; dy <= 1; dy++) {\n\t\t\t\tif (dx === 0 && dy === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst x = node.x + dx;\n\t\t\t\tconst y = node.y + dy;\n\t\t\t\tif (x >= 0 && y >= 0 && x < this.gridXLength && y < this.gridYLength && this.grid[x][y].walkable) {\n\t\t\t\t\tneighbors.push(this.grid[x][y]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn neighbors;\n\t}\n}\n","export class Obstacle {\n\tpublic xLeft: number;\n\tpublic xRight: number;\n\tpublic yTop: number;\n\tpublic yBottom: number;\n\tpublic width: number;\n\tpublic height: number;\n\n\tconstructor(startX: number, startY: number, width: number, height: number) {\n\t\tthis.xLeft = startX;\n\t\tthis.yTop = startY;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.yBottom = this.yTop + this.height;\n\t\tthis.xRight = this.xLeft + this.width;\n\t}\n\n\tdraw(context: CanvasRenderingContext2D): void {\n\t\tcontext.beginPath();\n\t\tcontext.rect(this.xLeft, this.yTop, this.width, this.height);\n\t\tcontext.fillStyle = '#1d1c1a';\n\t\tcontext.fill();\n\t}\n}\n","import { Obstacle } from './Obstacle';\n\nexport class ObstacleCanvas {\n\tprivate obstacleCanvas: HTMLCanvasElement;\n\tpublic obstacles: Obstacle[] = [];\n\tpublic width: number;\n\tpublic height: number;\n\n\tconstructor(obstacleCanvasSelector: string, width: number, height: number, obstacles: Obstacle[]) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.obstacles = obstacles;\n\t\twindow.addEventListener('resize', this.resizeCanvas.bind(this));\n\t\tthis.obstacleCanvas = document.querySelector(obstacleCanvasSelector) as HTMLCanvasElement;\n\t\tthis.obstacleCanvas.width = width;\n\t\tthis.obstacleCanvas.height = height;\n\t\tobstacles.forEach((obstacle) => {\n\t\t\tobstacle.draw(this.obstacleCanvas.getContext('2d') as CanvasRenderingContext2D);\n\t\t});\n\t}\n\n\tpublic clearObstacles(): void {\n\t\tconst context = this.obstacleCanvas.getContext('2d');\n\t\tif (context) {\n\t\t\tcontext.clearRect(0, 0, this.obstacleCanvas.width, this.obstacleCanvas.height);\n\t\t}\n\t\tthis.obstacles = [];\n\t}\n\n\tprivate resizeCanvas(): void {}\n}\n","export class PastelColorPalette {\n\tpublic static readonly BABY_BLUE = '#ABDEE6';\n\tpublic static readonly LAVENDER_BLUSH = '#CBAACB';\n\tpublic static readonly PALE_YELLOW = '#FFFFB5';\n\tpublic static readonly PEACH_PUFF = '#FFCCB6';\n\tpublic static readonly BLUSH_PINK = '#F3B0C3';\n\tpublic static readonly LIGHT_AQUA = '#C6DBDA';\n\tpublic static readonly LIGHT_PINK = '#FEE1E8';\n\tpublic static readonly LIGHT_CORAL_PINK = '#FED7C3';\n\tpublic static readonly MINT_CREAM = '#F6EAC2';\n\tpublic static readonly PALE_LAVENDER = '#ECD5E3';\n\tpublic static readonly CORAL_ORANGE = '#FF968A';\n\tpublic static readonly SOFT_PEACH = '#FFAEA5';\n\tpublic static readonly LIGHT_SALMON_PINK = '#FFCFB5';\n\tpublic static readonly LIGHT_ROSE = '#FFD8BE';\n\tpublic static readonly SOFT_ORANGE = '#FFC8A2';\n\tpublic static readonly SOFT_TEAL = '#D4F0F0';\n\tpublic static readonly PALE_MINT = '#8FCACA';\n\tpublic static readonly LIGHT_SAGE = '#CCE2CB';\n\tpublic static readonly PALE_GREEN = '#B6CFB6';\n\tpublic static readonly MINT_GREEN = '#97C1A9';\n\tpublic static readonly SOFT_PEACH_PINK = '#FCB9AA';\n\tpublic static readonly PALE_PEACH = '#FFDBCC';\n\tpublic static readonly PALE_GRAY = '#ECE4E4';\n\tpublic static readonly PALE_AQUA = '#A2E1DB';\n\tpublic static readonly SOFT_CYAN = '#55CBCD';\n}\n","export class Reticule {\n\tprotected color: string;\n\tprotected dashPattern: [number, number]; // [dashLengthInPixels, spaceLengthInPixels]\n\tprotected renderReticule: boolean;\n\tprotected tankSize: number;\n\tprotected reticuleWidth = 5;\n\n\tconstructor(dashPattern: [number, number], color: string, renderReticule: boolean, tankSize: number) {\n\t\tthis.color = color;\n\t\tthis.dashPattern = dashPattern;\n\t\tthis.renderReticule = renderReticule;\n\t\tthis.tankSize = tankSize;\n\t}\n\n\tpublic draw(\n\t\tcontext: CanvasRenderingContext2D,\n\t\ttankXPos: number,\n\t\ttankYPos: number,\n\t\tmouseXPos: number,\n\t\tmouseYpos: number\n\t): void {\n\t\tif (this.renderReticule) {\n\t\t\tcontext.strokeStyle = this.color;\n\t\t\tcontext.setLineDash(this.dashPattern);\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(tankXPos + this.tankSize / 2, tankYPos + this.tankSize / 2);\n\t\t\tcontext.lineTo(mouseXPos, mouseYpos);\n\t\t\tcontext.lineWidth = this.reticuleWidth;\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n}\n\nexport class NoReticule extends Reticule {\n\tconstructor() {\n\t\tsuper([0, 0], 'blue', false, 0);\n\t}\n}\n\nexport class SimplePlayerReticule extends Reticule {\n\tconstructor(tankSize: number) {\n\t\tsuper([5, 5], 'blue', true, tankSize);\n\t}\n}\n\nexport class CustomColorReticule extends Reticule {\n\tconstructor(tankSize: number, color: string) {\n\t\tsuper([4, 1], color, true, tankSize);\n\t}\n}\n\nexport class AdjustingCustomColorReticule extends Reticule {\n\tprivate maxReticuleLength: number;\n\n\tconstructor(tankSize: number, color: string, maxReticuleLength: number) {\n\t\tsuper([1, 1], color, true, tankSize);\n\t\tthis.maxReticuleLength = maxReticuleLength;\n\t}\n\n\toverride draw(\n\t\tcontext: CanvasRenderingContext2D,\n\t\ttankXPosition: number,\n\t\ttankYPosition: number,\n\t\tmouseXPosition: number,\n\t\tmouseYPosition: number\n\t): void {\n\t\tconst xDist = mouseXPosition - tankXPosition;\n\t\tconst yDist = mouseYPosition - tankYPosition;\n\t\tconst distance = Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));\n\t\tconst distanceToMaxDistanceRatio = distance / this.maxReticuleLength;\n\t\tconst distanceToMaxDistanceRatioInverse = 1 - distanceToMaxDistanceRatio;\n\t\tconst dashLength = distanceToMaxDistanceRatio * 10 + 2;\n\t\tconst spaceLength = distanceToMaxDistanceRatioInverse * 10 + 5;\n\n\t\tif (this.renderReticule) {\n\t\t\tcontext.strokeStyle = this.color;\n\t\t\tcontext.setLineDash([dashLength, spaceLength]);\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(tankXPosition + this.tankSize / 2, tankYPosition + this.tankSize / 2);\n\t\t\tcontext.lineTo(mouseXPosition, mouseYPosition);\n\t\t\tcontext.lineWidth = this.reticuleWidth;\n\t\t\tcontext.stroke();\n\n\t\t\tcontext.setLineDash([]);\n\t\t\tconst xLength = 8;\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(mouseXPosition - xLength, mouseYPosition - xLength);\n\t\t\tcontext.lineTo(mouseXPosition + xLength, mouseYPosition + xLength);\n\t\t\tcontext.stroke();\n\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(mouseXPosition - xLength, mouseYPosition + xLength);\n\t\t\tcontext.lineTo(mouseXPosition + xLength, mouseYPosition - xLength);\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n}\n","import { Ammunition } from '../Ammunition';\nimport { AudioManager } from '../AudioManager';\nimport { Bomb } from '../Bomb';\nimport { NavigationGrid, Node } from '../NavigationGrid';\nimport { ObstacleCanvas } from '../ObstacleCanvas';\nimport { Reticule } from '../Reticule';\nimport { Direction, Tank } from './Tank';\n\nexport class EnemyTank extends Tank {\n\tpublic navigationGrid: NavigationGrid;\n\tpublic aggressionFactor = 15; // Distance tank should maintain from its target\n\tpublic currentNode: Node;\n\tpublic path: Node[] | null = [];\n\tpublic pathRecaculationInterval = 60;\n\tpublic drawNavigationGrid = false;\n\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\treticule: Reticule,\n\t\txPosition: number,\n\t\tyPosition: number,\n\t\tspeed: number,\n\t\tsize: number,\n\t\taggressionFactor: number,\n\t\tcolor: string,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\tammunition: Ammunition[],\n\t\tbombs: Bomb[],\n\t\tnavigationGrid: NavigationGrid,\n\t\taudioManager: AudioManager\n\t) {\n\t\tsuper(canvas, reticule, xPosition, yPosition, speed, size, color, obstacleCanvas, ammunition, bombs, audioManager);\n\t\tthis.aggressionFactor = aggressionFactor;\n\t\tthis.navigationGrid = navigationGrid;\n\t\tthis.currentNode = this.navigationGrid.getNodeFromTank(this);\n\t}\n\n\tpublic override draw(context: CanvasRenderingContext2D): void {\n\t\tif (this.drawNavigationGrid) {\n\t\t\tcontext.lineWidth = 1;\n\t\t\tfor (let i = 0; i <= this.navigationGrid.gridYLength; i++) {\n\t\t\t\tcontext.fillStyle = 'blue';\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(0, i * this.navigationGrid.gridCellWidth);\n\t\t\t\tcontext.lineTo(\n\t\t\t\t\tthis.navigationGrid.gridXLength * this.navigationGrid.gridCellWidth,\n\t\t\t\t\ti * this.navigationGrid.gridCellWidth\n\t\t\t\t);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t\tfor (let j = 0; j <= this.navigationGrid.gridXLength; j++) {\n\t\t\t\tcontext.fillStyle = 'blue';\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(j * this.navigationGrid.gridCellWidth, 0);\n\t\t\t\tcontext.lineTo(\n\t\t\t\t\tj * this.navigationGrid.gridCellWidth,\n\t\t\t\t\tthis.navigationGrid.gridXLength * this.navigationGrid.gridCellWidth\n\t\t\t\t);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t\tcontext.fillStyle = this.color;\n\t\t\tthis.path?.forEach((value: Node, index: number, array: Node[]) => {\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.arc(\n\t\t\t\t\tvalue.x * this.navigationGrid.gridCellWidth + this.navigationGrid.gridCellWidth / 2,\n\t\t\t\t\tvalue.y * this.navigationGrid.gridCellWidth + this.navigationGrid.gridCellWidth / 2,\n\t\t\t\t\t5,\n\t\t\t\t\t0,\n\t\t\t\t\t2 * Math.PI\n\t\t\t\t);\n\t\t\t\tcontext.fill();\n\t\t\t});\n\t\t}\n\t\tsuper.draw(context);\n\t}\n\n\tpublic override updatePosition(playerTank: Tank, enemyTanks: Tank[], ammunition: Ammunition[], bombs: Bomb[]): void {\n\t\tthis.pathRecaculationInterval -= 1;\n\t\tif (this.path == null || this.path.length == 0 || this.pathRecaculationInterval == 0) {\n\t\t\tthis.navigationGrid.reset();\n\t\t\tconst startNode: Node = this.navigationGrid.getNodeFromTank(this);\n\t\t\tconst targetNode: Node = this.navigationGrid.getNodeFromTank(playerTank);\n\t\t\tconst destinationNode: Node = this.navigationGrid.getRandomNodeInRadiusOfTarget(\n\t\t\t\ttargetNode,\n\t\t\t\tthis.aggressionFactor\n\t\t\t);\n\t\t\tthis.path = this.navigationGrid.aStar(startNode, destinationNode);\n\t\t\tthis.pathRecaculationInterval = 60;\n\t\t\tif (this.path == null) {\n\t\t\t\tconsole.log(`Path is null`);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.currentNode = this.navigationGrid.getNodeFromTank(this);\n\t\t\tconst dx = this.path[0].x - this.currentNode.x;\n\t\t\tconst dy = this.path[0].y - this.currentNode.y;\n\n\t\t\tif (this.wasLastMoveBlocked && this.consecutiveDirectionMoves > 2) {\n\t\t\t\tconst randomDirection: Direction = this.getRandomDirection();\n\t\t\t\tthis.moveInCardinalDirection(randomDirection);\n\t\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t\t\tconst randomNumber: number = Math.random();\n\t\t\t\tif (dx === 1 && dy === 0) {\n\t\t\t\t\tif (randomNumber < 0.5) {\n\t\t\t\t\t\tthis.moveSouthEast();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.moveNorthEast();\n\t\t\t\t\t}\n\t\t\t\t} else if (dx === -1 && dy === 0) {\n\t\t\t\t\tif (randomNumber < 0.5) {\n\t\t\t\t\t\tthis.moveNorthWest();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.moveSouthWest();\n\t\t\t\t\t}\n\t\t\t\t} else if (dx === 0 && dy === 1) {\n\t\t\t\t\tif (randomNumber < 0.5) {\n\t\t\t\t\t\tthis.moveSouthEast();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.moveSouthWest();\n\t\t\t\t\t}\n\t\t\t\t} else if (dx === 0 && dy === -1) {\n\t\t\t\t\tif (randomNumber < 0.5) {\n\t\t\t\t\t\tthis.moveNorthWest();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.moveNorthEast();\n\t\t\t\t\t}\n\t\t\t\t} else if (dx === 1 && dy === 1) {\n\t\t\t\t\tif (randomNumber < 0.5) {\n\t\t\t\t\t\tthis.moveSouth();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.moveEast();\n\t\t\t\t\t}\n\t\t\t\t} else if (dx === 1 && dy === -1) {\n\t\t\t\t\tif (randomNumber < 0.5) {\n\t\t\t\t\t\tthis.moveNorth();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.moveEast();\n\t\t\t\t\t}\n\t\t\t\t} else if (dx === -1 && dy === 1) {\n\t\t\t\t\tif (randomNumber < 0.5) {\n\t\t\t\t\t\tthis.moveSouth();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.moveWest();\n\t\t\t\t\t}\n\t\t\t\t} else if (dx === -1 && dy === -1) {\n\t\t\t\t\tif (randomNumber < 0.5) {\n\t\t\t\t\t\tthis.moveNorth();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.moveWest();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (dx === 1 && dy === 0) {\n\t\t\t\t\tthis.moveEast();\n\t\t\t\t} else if (dx === -1 && dy === 0) {\n\t\t\t\t\tthis.moveWest();\n\t\t\t\t} else if (dx === 0 && dy === 1) {\n\t\t\t\t\tthis.moveSouth();\n\t\t\t\t} else if (dx === 0 && dy === -1) {\n\t\t\t\t\tthis.moveNorth();\n\t\t\t\t} else if (dx === 1 && dy === 1) {\n\t\t\t\t\tthis.moveSouthEast();\n\t\t\t\t} else if (dx === 1 && dy === -1) {\n\t\t\t\t\tthis.moveNorthEast();\n\t\t\t\t} else if (dx === -1 && dy === 1) {\n\t\t\t\t\tthis.moveSouthWest();\n\t\t\t\t} else if (dx === -1 && dy === -1) {\n\t\t\t\t\tthis.moveNorthWest();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.path[0].x == this.currentNode.x && this.path[0].y == this.currentNode.y) {\n\t\t\t\tthis.path.splice(0, 1);\n\t\t\t}\n\t\t}\n\n\t\tthis.xLeft = this.xPosition;\n\t\tthis.xRight = this.xPosition + this.size;\n\t\tthis.yTop = this.yPosition;\n\t\tthis.yBottom = this.yPosition + this.size;\n\t}\n}\n","import { PastelColorPalette } from '../../ui/PastelColorPalette';\nimport { Ammunition } from '../Ammunition';\nimport { AudioManager } from '../AudioManager';\nimport { Bomb } from '../Bomb';\nimport { NavigationGrid } from '../NavigationGrid';\nimport { ObstacleCanvas } from '../ObstacleCanvas';\nimport { NoReticule } from '../Reticule';\nimport { EnemyTank } from './EnemyTank';\nimport { Tank } from './Tank';\n\nexport class BomberTank extends EnemyTank {\n\tpublic minTimeBetweenShotsMS = 20000;\n\tpublic timeBetweenShotsIsElapsed = true;\n\tpublic minTimeBetweenBombPlantsMS = 1000;\n\tpublic timeBetweenPlantsIsElapsed = true;\n\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\txPosition: number,\n\t\tyPosition: number,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\tammunition: Ammunition[],\n\t\tbombs: Bomb[],\n\t\tnavigationGrid: NavigationGrid,\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst bomberTankSpeed = 2;\n\t\tconst bomberTankSize = 30;\n\t\tconst bomberTankAggressionFactor = 4;\n\t\tconst bomberTankColor = PastelColorPalette.PALE_YELLOW;\n\t\tsuper(\n\t\t\tcanvas,\n\t\t\tnew NoReticule(),\n\t\t\txPosition,\n\t\t\tyPosition,\n\t\t\tbomberTankSpeed,\n\t\t\tbomberTankSize,\n\t\t\tbomberTankAggressionFactor,\n\t\t\tbomberTankColor,\n\t\t\tobstacleCanvas,\n\t\t\tammunition,\n\t\t\tbombs,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t}\n\n\tpublic override plantBomb(playerTank: Tank): void {\n\t\tif (this.timeBetweenPlantsIsElapsed && !this.isDestroyed) {\n\t\t\tconst availableBombIndex = this.bombs.findIndex((bomb) => bomb.isDestroyed && !bomb.isExploding);\n\t\t\tif (availableBombIndex !== -1) {\n\t\t\t\tthis.bombs[availableBombIndex].xPosition = this.xPosition + this.size / 2;\n\t\t\t\tthis.bombs[availableBombIndex].yPosition = this.yPosition + this.size / 2;\n\t\t\t\tconst willHitPlayerTank: boolean = this.bombs[availableBombIndex].isPointInsideBlastRadius(\n\t\t\t\t\tplayerTank.xPosition + playerTank.tankMidpoint,\n\t\t\t\t\tplayerTank.yPosition + playerTank.tankMidpoint\n\t\t\t\t);\n\t\t\t\tif (willHitPlayerTank) {\n\t\t\t\t\tthis.bombs[availableBombIndex].isDestroyed = false;\n\t\t\t\t\tthis.bombs[availableBombIndex].setFuse();\n\t\t\t\t\tthis.timeBetweenPlantsIsElapsed = false;\n\t\t\t\t\tsetTimeout((): void => {\n\t\t\t\t\t\tthis.timeBetweenPlantsIsElapsed = true;\n\t\t\t\t\t}, this.minTimeBetweenBombPlantsMS);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic override shoot(playerTank: Tank): void {\n\t\tif (this.timeBetweenShotsIsElapsed && !this.isDestroyed) {\n\t\t\tconst availableAmmunitionIndex = this.ammunition.findIndex((ammunition) => ammunition.isDestroyed);\n\t\t\tif (availableAmmunitionIndex !== -1) {\n\t\t\t\tthis.ammunition[availableAmmunitionIndex].reload(\n\t\t\t\t\tthis.gunBarrellEndX,\n\t\t\t\t\tthis.gunBarrellEndY,\n\t\t\t\t\tthis.aimAngle,\n\t\t\t\t\ttrue,\n\t\t\t\t\tthis.canvasWidth,\n\t\t\t\t\tthis.canvasHeight\n\t\t\t\t);\n\t\t\t\tconst willHitPlayerTank: boolean = this.ammunition[availableAmmunitionIndex].willHitPlayerTank(\n\t\t\t\t\tthis.obstacleCanvas,\n\t\t\t\t\tplayerTank\n\t\t\t\t);\n\t\t\t\tif (willHitPlayerTank) {\n\t\t\t\t\tthis.ammunition[availableAmmunitionIndex].isDestroyed = false;\n\t\t\t\t\tthis.timeBetweenShotsIsElapsed = false;\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.timeBetweenShotsIsElapsed = true;\n\t\t\t\t\t}, this.minTimeBetweenShotsMS);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic override aim(mouseXPos: number, mouseYpos: number, playerTank: Tank): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dx: number = playerTank.xPosition + playerTank.size / 2 - this.xPosition - this.tankMidpoint;\n\t\tconst dy: number = playerTank.yPosition + playerTank.size / 2 - this.yPosition - this.tankMidpoint;\n\t\tlet theta = Math.atan2(dy, dx);\n\t\tif (theta < 0) {\n\t\t\ttheta += 2 * Math.PI;\n\t\t}\n\t\tthis.aimAngle = theta;\n\t}\n}\n","import { KeyStates } from '../../utils/KeyStates';\nimport { Ammunition, PlayerAmmunition } from '../Ammunition';\nimport { AudioFile, AudioManager } from '../AudioManager';\nimport { Bomb, PlayerBomb } from '../Bomb';\nimport { ObstacleCanvas } from '../ObstacleCanvas';\nimport { AdjustingCustomColorReticule, Reticule } from '../Reticule';\nimport { Tank } from './Tank';\n\nexport class PlayerTank extends Tank {\n\tpublic keyStates: KeyStates = {\n\t\tArrowUp: false,\n\t\tArrowDown: false,\n\t\tArrowLeft: false,\n\t\tArrowRight: false,\n\t\tw: false,\n\t\ta: false,\n\t\ts: false,\n\t\td: false,\n\t\tW: false,\n\t\tA: false,\n\t\tS: false,\n\t\tD: false,\n\t};\n\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\treticule: Reticule,\n\t\txPosition: number,\n\t\tyPosition: number,\n\t\tspeed: number,\n\t\tsize: number,\n\t\tcolor: string,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\tammunition: Ammunition[],\n\t\tbombs: Bomb[],\n\t\taudioManager: AudioManager\n\t) {\n\t\tsuper(canvas, reticule, xPosition, yPosition, speed, size, color, obstacleCanvas, ammunition, bombs, audioManager);\n\n\t\tdocument.addEventListener('keydown', (event: KeyboardEvent) => {\n\t\t\tif (this.keyStates.hasOwnProperty(event.key)) {\n\t\t\t\tthis.keyStates[event.key] = true;\n\t\t\t}\n\t\t});\n\t\tdocument.addEventListener('keydown', (event: KeyboardEvent) => {\n\t\t\tif (event.code === 'Space') {\n\t\t\t\tthis.plantBomb(this);\n\t\t\t}\n\t\t});\n\t\tdocument.addEventListener('keyup', (event: KeyboardEvent) => {\n\t\t\tif (this.keyStates.hasOwnProperty(event.key)) {\n\t\t\t\tthis.keyStates[event.key] = false;\n\t\t\t}\n\t\t});\n\t\tdocument.addEventListener('mousemove', (event: MouseEvent) => {\n\t\t\tthis.aimXPos = event.clientX - this.xOffset;\n\t\t\tthis.aimYPos = event.clientY - this.yOffset;\n\t\t});\n\t\tdocument.addEventListener('click', (event: MouseEvent) => {\n\t\t\tif (canvas.contains(event.target as Node)) {\n\t\t\t\tthis.shoot(this);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic override updatePosition(playerTank: Tank, enemyTanks: Tank[], ammunition: Ammunition[], bombs: Bomb[]): void {\n\t\t// Move the tank\n\t\tif (this.up() && this.right()) {\n\t\t\tthis.moveNorthEast();\n\t\t} else if (this.up() && this.left()) {\n\t\t\tthis.moveNorthWest();\n\t\t} else if (this.down() && this.right()) {\n\t\t\tthis.moveSouthEast();\n\t\t} else if (this.down() && this.left()) {\n\t\t\tthis.moveSouthWest();\n\t\t} else if (this.up()) {\n\t\t\tthis.moveNorth();\n\t\t} else if (this.down()) {\n\t\t\tthis.moveSouth();\n\t\t} else if (this.left()) {\n\t\t\tthis.moveWest();\n\t\t} else if (this.right()) {\n\t\t\tthis.moveEast();\n\t\t}\n\n\t\tthis.xLeft = this.xPosition;\n\t\tthis.xRight = this.xPosition + this.size;\n\t\tthis.yTop = this.yPosition;\n\t\tthis.yBottom = this.yPosition + this.size;\n\t}\n\n\tpublic override plantBomb(playerTank: Tank): void {\n\t\tif (!this.isDestroyed) {\n\t\t\tconst availableBombIndex = this.bombs.findIndex((bomb) => bomb.isDestroyed);\n\t\t\tif (availableBombIndex !== -1) {\n\t\t\t\tthis.bombs[availableBombIndex].xPosition = this.xPosition + this.size / 2;\n\t\t\t\tthis.bombs[availableBombIndex].yPosition = this.yPosition + this.size / 2;\n\t\t\t\tthis.bombs[availableBombIndex].isDestroyed = false;\n\t\t\t\tthis.bombs[availableBombIndex].setFuse();\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic override aim(mouseXPos: number, mouseYpos: number, playerTank: Tank): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tconst dx: number = mouseXPos - this.xPosition - this.tankMidpoint;\n\t\tconst dy: number = mouseYpos - this.yPosition - this.tankMidpoint;\n\t\tlet theta = Math.atan2(dy, dx);\n\t\tif (theta < 0) {\n\t\t\ttheta += 2 * Math.PI;\n\t\t}\n\t\tthis.aimAngle = theta;\n\t}\n\n\tpublic override shoot(playerTank: Tank): void {\n\t\tif (!this.isDestroyed) {\n\t\t\tconst availableAmmunitionIndex = this.ammunition.findIndex((ammunition) => ammunition.isDestroyed);\n\t\t\tif (availableAmmunitionIndex !== -1) {\n\t\t\t\tthis.audioManager.play(AudioFile.TANK_FIRE);\n\t\t\t\tthis.ammunition[availableAmmunitionIndex] = new PlayerAmmunition(\n\t\t\t\t\tthis.gunBarrellEndX,\n\t\t\t\t\tthis.gunBarrellEndY,\n\t\t\t\t\tthis.aimAngle,\n\t\t\t\t\tthis.canvasWidth,\n\t\t\t\t\tthis.canvasHeight,\n\t\t\t\t\tfalse,\n\t\t\t\t\tthis.audioManager\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic up(): boolean {\n\t\treturn this.keyStates.ArrowUp || this.keyStates.w || this.keyStates.W;\n\t}\n\n\tpublic down(): boolean {\n\t\treturn this.keyStates.ArrowDown || this.keyStates.s || this.keyStates.S;\n\t}\n\n\tpublic left(): boolean {\n\t\treturn this.keyStates.ArrowLeft || this.keyStates.a || this.keyStates.A;\n\t}\n\n\tpublic right(): boolean {\n\t\treturn this.keyStates.ArrowRight || this.keyStates.d || this.keyStates.D;\n\t}\n}\n\nexport class DefaultPlayerTank extends PlayerTank {\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\txPos: number,\n\t\tyPos: number,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst defaultPlayerTankSpeed = 2;\n\t\tconst defaultPlayerTankSize = 30;\n\t\tconst defaultPlayerTankColor = '#4f6d7a';\n\t\tconst ammunition: Ammunition[] = [\n\t\t\tnew PlayerAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew PlayerAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew PlayerAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew PlayerAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew PlayerAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t];\n\t\tconst bombs: Bomb[] = [new PlayerBomb(0, 0, true, audioManager), new PlayerBomb(0, 0, true, audioManager)];\n\t\tconst rect: DOMRect = canvas.getBoundingClientRect();\n\t\tconst viewportWidth: number = window.innerWidth;\n\t\tconst distanceFromLeft: number = rect.left;\n\t\tconst distanceFromRight: number = viewportWidth - rect.right;\n\t\tconst maxReticuleLength: number = canvas.width + Math.max(distanceFromLeft, distanceFromRight);\n\t\tsuper(\n\t\t\tcanvas,\n\t\t\tnew AdjustingCustomColorReticule(defaultPlayerTankSize, defaultPlayerTankColor, maxReticuleLength),\n\t\t\txPos,\n\t\t\tyPos,\n\t\t\tdefaultPlayerTankSpeed,\n\t\t\tdefaultPlayerTankSize,\n\t\t\tdefaultPlayerTankColor,\n\t\t\tobstacleCanvas,\n\t\t\tammunition,\n\t\t\tbombs,\n\t\t\taudioManager\n\t\t);\n\t}\n}\n","import { PastelColorPalette } from '../../ui/PastelColorPalette';\nimport { Ammunition } from '../Ammunition';\nimport { AudioManager } from '../AudioManager';\nimport { Bomb } from '../Bomb';\nimport { NavigationGrid } from '../NavigationGrid';\nimport { ObstacleCanvas } from '../ObstacleCanvas';\nimport { NoReticule } from '../Reticule';\nimport { EnemyTank } from './EnemyTank';\nimport { Tank } from './Tank';\n\nexport class SimpleMovingTank extends EnemyTank {\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\txPosition: number,\n\t\tyPosition: number,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\tammunition: Ammunition[],\n\t\tbombs: Bomb[],\n\t\tnavigationGrid: NavigationGrid,\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst simpleMovingTankSpeed = 1.2;\n\t\tconst simpleMovingTankSize = 30;\n\t\tconst simpleMovingTankAggressionFactor = 15;\n\t\tconst simpleMovingTankColor = PastelColorPalette.CORAL_ORANGE;\n\t\tsuper(\n\t\t\tcanvas,\n\t\t\tnew NoReticule(),\n\t\t\txPosition,\n\t\t\tyPosition,\n\t\t\tsimpleMovingTankSpeed,\n\t\t\tsimpleMovingTankSize,\n\t\t\tsimpleMovingTankAggressionFactor,\n\t\t\tsimpleMovingTankColor,\n\t\t\tobstacleCanvas,\n\t\t\tammunition,\n\t\t\tbombs,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t}\n\n\tpublic override shoot(playerTank: Tank): void {\n\t\tconst availableAmmunitionIndex = this.ammunition.findIndex((ammunition) => ammunition.isDestroyed);\n\t\tif (availableAmmunitionIndex !== -1) {\n\t\t\tthis.ammunition[availableAmmunitionIndex].reload(\n\t\t\t\tthis.gunBarrellEndX,\n\t\t\t\tthis.gunBarrellEndY,\n\t\t\t\tthis.aimAngle,\n\t\t\t\ttrue,\n\t\t\t\tthis.canvasWidth,\n\t\t\t\tthis.canvasHeight\n\t\t\t);\n\t\t\tconst willHitPlayerTank: boolean = this.ammunition[availableAmmunitionIndex].willHitPlayerTank(\n\t\t\t\tthis.obstacleCanvas,\n\t\t\t\tplayerTank\n\t\t\t);\n\t\t\tif (willHitPlayerTank) {\n\t\t\t\tthis.ammunition[availableAmmunitionIndex].isDestroyed = false;\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic override aim(mouseXPos: number, mouseYpos: number, playerTank: Tank): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dx: number = playerTank.xPosition + playerTank.size / 2 - this.xPosition - this.tankMidpoint;\n\t\tconst dy: number = playerTank.yPosition + playerTank.size / 2 - this.yPosition - this.tankMidpoint;\n\t\tlet theta = Math.atan2(dy, dx);\n\t\tif (theta < 0) {\n\t\t\ttheta += 2 * Math.PI;\n\t\t}\n\t\tthis.aimAngle = theta;\n\t}\n}\n","import { PastelColorPalette } from '../../ui/PastelColorPalette';\nimport { Ammunition } from '../Ammunition';\nimport { AudioManager } from '../AudioManager';\nimport { Bomb } from '../Bomb';\nimport { NavigationGrid } from '../NavigationGrid';\nimport { ObstacleCanvas } from '../ObstacleCanvas';\nimport { NoReticule } from '../Reticule';\nimport { EnemyTank } from './EnemyTank';\nimport { Tank } from './Tank';\n\nexport class StationaryRandomAimTank extends EnemyTank {\n\tpublic aimAngleChangeAmount = 0;\n\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\txPosition: number,\n\t\tyPosition: number,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\tammunition: Ammunition[],\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst stationaryRandomAimTankSpeed = 0;\n\t\tconst stationaryRandomAimTankSize = 30;\n\t\tconst stationaryRandomAimTankAggressionFactor = 0;\n\t\tconst fastTankColor = PastelColorPalette.BABY_BLUE;\n\t\tconst bombs: Bomb[] = [];\n\t\tconst navigationGrid: NavigationGrid = new NavigationGrid();\n\t\tsuper(\n\t\t\tcanvas,\n\t\t\tnew NoReticule(),\n\t\t\txPosition,\n\t\t\tyPosition,\n\t\t\tstationaryRandomAimTankSpeed,\n\t\t\tstationaryRandomAimTankSize,\n\t\t\tstationaryRandomAimTankAggressionFactor,\n\t\t\tfastTankColor,\n\t\t\tobstacleCanvas,\n\t\t\tammunition,\n\t\t\tbombs,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t}\n\n\tprivate getAngleChangeAmount(): number {\n\t\tconst max = 360;\n\t\tconst min = -360;\n\t\tconst randomAmount: number = Math.floor(Math.random() * (max - min + 1)) + min;\n\t\treturn randomAmount;\n\t}\n\n\tpublic override updatePosition(playerTank: Tank): void {\n\t\treturn;\n\t}\n\n\tpublic override shoot(playerTank: Tank): void {\n\t\tconst availableAmmunitionIndex = this.ammunition.findIndex((ammunition) => ammunition.isDestroyed);\n\t\tif (availableAmmunitionIndex !== -1) {\n\t\t\tthis.ammunition[availableAmmunitionIndex].reload(\n\t\t\t\tthis.gunBarrellEndX,\n\t\t\t\tthis.gunBarrellEndY,\n\t\t\t\tthis.aimAngle,\n\t\t\t\ttrue,\n\t\t\t\tthis.canvasWidth,\n\t\t\t\tthis.canvasHeight\n\t\t\t);\n\t\t\tconst willHitPlayerTank: boolean = this.ammunition[availableAmmunitionIndex].willHitPlayerTank(\n\t\t\t\tthis.obstacleCanvas,\n\t\t\t\tplayerTank\n\t\t\t);\n\t\t\tif (willHitPlayerTank) {\n\t\t\t\tthis.ammunition[availableAmmunitionIndex].isDestroyed = false;\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic override aim(mouseXPos: number, mouseYpos: number, playerTank: Tank): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.aimAngleChangeAmount > 0) {\n\t\t\tthis.aimAngle += 0.01;\n\t\t\tthis.aimAngleChangeAmount -= 1;\n\t\t} else if (this.aimAngleChangeAmount < 0) {\n\t\t\tthis.aimAngle -= 0.01;\n\t\t\tthis.aimAngleChangeAmount += 1;\n\t\t} else {\n\t\t\tthis.aimAngleChangeAmount = this.getAngleChangeAmount();\n\t\t}\n\t}\n}\n","import { PastelColorPalette } from '../../ui/PastelColorPalette';\nimport { Ammunition, BasicAIAmmunition } from '../Ammunition';\nimport { AudioManager } from '../AudioManager';\nimport { Bomb } from '../Bomb';\nimport { NavigationGrid } from '../NavigationGrid';\nimport { ObstacleCanvas } from '../ObstacleCanvas';\nimport { NoReticule } from '../Reticule';\nimport { EnemyTank } from './EnemyTank';\nimport { Tank } from './Tank';\n\nexport class StationaryTank extends EnemyTank {\n\tminTimeBetweenShotsMS = 5000;\n\ttimeBetweenShotsIsElapsed = false;\n\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\txPosition: number,\n\t\tyPosition: number,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst stationaryTankSpeed = 0;\n\t\tconst stationaryTankSize = 30;\n\t\tconst stationaryTankAggressionFactor = 0;\n\t\tconst stationaryTankColor = PastelColorPalette.PALE_GRAY;\n\t\tconst ammunition: Ammunition[] = [new BasicAIAmmunition(0, 0, 0, 0, 0, true, audioManager)];\n\t\tconst bombs: Bomb[] = [];\n\t\tconst navigationGrid: NavigationGrid = new NavigationGrid();\n\t\tsuper(\n\t\t\tcanvas,\n\t\t\tnew NoReticule(),\n\t\t\txPosition,\n\t\t\tyPosition,\n\t\t\tstationaryTankSpeed,\n\t\t\tstationaryTankSize,\n\t\t\tstationaryTankAggressionFactor,\n\t\t\tstationaryTankColor,\n\t\t\tobstacleCanvas,\n\t\t\tammunition,\n\t\t\tbombs,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t\tsetTimeout(() => {\n\t\t\tthis.timeBetweenShotsIsElapsed = true;\n\t\t}, 1000);\n\t}\n\n\tpublic override updatePosition(playerTank: Tank): void {\n\t\treturn;\n\t}\n\n\tpublic override shoot(playerTank: Tank): void {\n\t\tif (!this.timeBetweenShotsIsElapsed || this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tconst availableAmmunitionIndex = this.ammunition.findIndex((ammunition) => ammunition.isDestroyed);\n\t\tif (availableAmmunitionIndex !== -1) {\n\t\t\tthis.ammunition[availableAmmunitionIndex].reload(\n\t\t\t\tthis.gunBarrellEndX,\n\t\t\t\tthis.gunBarrellEndY,\n\t\t\t\tthis.aimAngle,\n\t\t\t\ttrue,\n\t\t\t\tthis.canvasWidth,\n\t\t\t\tthis.canvasHeight\n\t\t\t);\n\t\t\tconst willHitPlayerTank: boolean = this.ammunition[availableAmmunitionIndex].willHitPlayerTank(\n\t\t\t\tthis.obstacleCanvas,\n\t\t\t\tplayerTank\n\t\t\t);\n\t\t\tif (willHitPlayerTank) {\n\t\t\t\tthis.ammunition[availableAmmunitionIndex].isDestroyed = false;\n\t\t\t\tthis.timeBetweenShotsIsElapsed = false;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.timeBetweenShotsIsElapsed = true;\n\t\t\t\t}, this.minTimeBetweenShotsMS);\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic override aim(mouseXPos: number, mouseYpos: number, playerTank: Tank): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dx: number = playerTank.xPosition + playerTank.size / 2 - this.xPosition - this.tankMidpoint;\n\t\tconst dy: number = playerTank.yPosition + playerTank.size / 2 - this.yPosition - this.tankMidpoint;\n\t\tlet theta = Math.atan2(dy, dx);\n\t\tif (theta < 0) {\n\t\t\ttheta += 2 * Math.PI;\n\t\t}\n\t\tthis.aimAngle = theta;\n\t}\n}\n","import { PastelColorPalette } from '../../ui/PastelColorPalette';\nimport { Ammunition } from '../Ammunition';\nimport { AudioManager } from '../AudioManager';\nimport { Bomb } from '../Bomb';\nimport { NavigationGrid } from '../NavigationGrid';\nimport { ObstacleCanvas } from '../ObstacleCanvas';\nimport { NoReticule } from '../Reticule';\nimport { EnemyTank } from './EnemyTank';\nimport { Tank } from './Tank';\n\nexport class SuperBomberMovingTank extends EnemyTank {\n\tpublic minTimeBetweenShotsMS = 1000;\n\tpublic timeBetweenShotsIsElapsed = false;\n\tpublic minTimeBetweenBombPlantsMS = 1000;\n\tpublic timeBetweenPlantsIsElapsed = true;\n\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\txPosition: number,\n\t\tyPosition: number,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\tammunition: Ammunition[],\n\t\tbombs: Bomb[],\n\t\tnavigationGrid: NavigationGrid,\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst superBomberMovingTankSpeed = 2.2;\n\t\tconst superBomberMovingTankSize = 30;\n\t\tconst superBomberMovingTankAggressionFactor = 5;\n\t\tconst superBomberMovingTankColor = PastelColorPalette.BLUSH_PINK;\n\t\tsuper(\n\t\t\tcanvas,\n\t\t\tnew NoReticule(),\n\t\t\txPosition,\n\t\t\tyPosition,\n\t\t\tsuperBomberMovingTankSpeed,\n\t\t\tsuperBomberMovingTankSize,\n\t\t\tsuperBomberMovingTankAggressionFactor,\n\t\t\tsuperBomberMovingTankColor,\n\t\t\tobstacleCanvas,\n\t\t\tammunition,\n\t\t\tbombs,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t\tsetTimeout(() => {\n\t\t\tthis.timeBetweenShotsIsElapsed = true;\n\t\t}, 1000);\n\t}\n\n\tpublic override plantBomb(playerTank: Tank): void {\n\t\tif (this.timeBetweenPlantsIsElapsed && !this.isDestroyed) {\n\t\t\tconst availableBombIndex = this.bombs.findIndex((bomb) => bomb.isDestroyed);\n\t\t\tif (availableBombIndex !== -1) {\n\t\t\t\tthis.bombs[availableBombIndex].xPosition = this.xPosition + this.size / 2;\n\t\t\t\tthis.bombs[availableBombIndex].yPosition = this.yPosition + this.size / 2;\n\t\t\t\tconst willHitPlayerTank: boolean = this.bombs[availableBombIndex].isPointInsideBlastRadius(\n\t\t\t\t\tplayerTank.xPosition + playerTank.tankMidpoint,\n\t\t\t\t\tplayerTank.yPosition + playerTank.tankMidpoint\n\t\t\t\t);\n\t\t\t\tif (willHitPlayerTank) {\n\t\t\t\t\tthis.bombs[availableBombIndex].isDestroyed = false;\n\t\t\t\t\tthis.bombs[availableBombIndex].setFuse();\n\t\t\t\t\tthis.timeBetweenPlantsIsElapsed = false;\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.timeBetweenPlantsIsElapsed = true;\n\t\t\t\t\t}, this.minTimeBetweenBombPlantsMS);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic override shoot(playerTank: Tank): void {\n\t\tif (this.timeBetweenShotsIsElapsed && !this.isDestroyed) {\n\t\t\tconst availableAmmunitionIndex = this.ammunition.findIndex((ammunition) => ammunition.isDestroyed);\n\t\t\tif (availableAmmunitionIndex !== -1) {\n\t\t\t\tthis.ammunition[availableAmmunitionIndex].reload(\n\t\t\t\t\tthis.gunBarrellEndX,\n\t\t\t\t\tthis.gunBarrellEndY,\n\t\t\t\t\tthis.aimAngle,\n\t\t\t\t\ttrue,\n\t\t\t\t\tthis.canvasWidth,\n\t\t\t\t\tthis.canvasHeight\n\t\t\t\t);\n\t\t\t\tconst willHitPlayerTank: boolean = this.ammunition[availableAmmunitionIndex].willHitPlayerTank(\n\t\t\t\t\tthis.obstacleCanvas,\n\t\t\t\t\tplayerTank\n\t\t\t\t);\n\t\t\t\tif (willHitPlayerTank) {\n\t\t\t\t\tthis.ammunition[availableAmmunitionIndex].isDestroyed = false;\n\t\t\t\t\tthis.timeBetweenShotsIsElapsed = false;\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.timeBetweenShotsIsElapsed = true;\n\t\t\t\t\t}, this.minTimeBetweenShotsMS);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic override aim(mouseXPos: number, mouseYpos: number, playerTank: Tank): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dx: number = playerTank.xPosition + playerTank.size / 2 - this.xPosition - this.tankMidpoint;\n\t\tconst dy: number = playerTank.yPosition + playerTank.size / 2 - this.yPosition - this.tankMidpoint;\n\t\tlet theta = Math.atan2(dy, dx);\n\t\tif (theta < 0) {\n\t\t\ttheta += 2 * Math.PI;\n\t\t}\n\t\tthis.aimAngle = theta;\n\t}\n}\n","import { Ammunition, BasicAIAmmunition, SuperAIAmmunition } from './Ammunition';\nimport { AudioManager } from './AudioManager';\nimport { BasicBomb, Bomb, LoveBomb } from './Bomb';\nimport { GameCanvas } from './GameCanvas';\nimport { NavigationGrid } from './NavigationGrid';\nimport { Obstacle } from './Obstacle';\nimport { ObstacleCanvas } from './ObstacleCanvas';\nimport { BomberTank } from './tanks/BomberTank';\nimport { DefaultPlayerTank } from './tanks/PlayerTank';\nimport { SimpleMovingTank } from './tanks/SimpleMovingTank';\nimport { StationaryRandomAimTank } from './tanks/StationaryRandomAimTank';\nimport { StationaryTank } from './tanks/StationaryTank';\nimport { SuperBomberMovingTank } from './tanks/SuperBomberMovingTank';\n\nexport class Level {\n\tpublic gameCanvas: GameCanvas;\n\tpublic obstacleCanvas: ObstacleCanvas;\n\tpublic canvasWidth = 1000;\n\tpublic canvasHeight = 500;\n\tpublic audioManager: AudioManager;\n\n\tconstructor(obstacleCanvas: ObstacleCanvas, audioManager: AudioManager) {\n\t\tthis.obstacleCanvas = obstacleCanvas;\n\t\tthis.gameCanvas = new GameCanvas('#game-canvas', this.canvasWidth, this.canvasHeight, obstacleCanvas);\n\t\tthis.audioManager = audioManager;\n\t}\n\n\tpublic stop() {\n\t\tthis.gameCanvas.stop();\n\t}\n\n\tpublic start() {\n\t\tthis.gameCanvas.start();\n\t}\n}\n\nexport class Level1 extends Level {\n\tconstructor(audioManager: AudioManager) {\n\t\tconst obs: Obstacle = new Obstacle(300, 200, 40, 100);\n\t\tconst obstacleCanvas = new ObstacleCanvas('#obstacle-canvas', 1000, 500, [obs]);\n\t\tsuper(obstacleCanvas, audioManager);\n\t\tconst stationaryTank = new StationaryTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t900,\n\t\t\t240,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addEnemyTank(stationaryTank);\n\n\t\tconst playerTank = new DefaultPlayerTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t100,\n\t\t\t250,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addPlayerTank(playerTank);\n\t}\n}\n\nexport class Level2 extends Level {\n\tconstructor(audioManager: AudioManager) {\n\t\tconst obs: Obstacle = new Obstacle(300, 200, 40, 100);\n\t\tconst obstacleCanvas = new ObstacleCanvas('#obstacle-canvas', 1000, 500, [obs]);\n\t\tsuper(obstacleCanvas, audioManager);\n\n\t\tconst stationaryTank1 = new StationaryTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t100,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tconst stationaryTank2 = new StationaryTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t900,\n\t\t\t240,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tconst stationaryTank3 = new StationaryTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t400,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addEnemyTank(stationaryTank1);\n\t\tthis.gameCanvas.addEnemyTank(stationaryTank2);\n\t\tthis.gameCanvas.addEnemyTank(stationaryTank3);\n\n\t\tconst playerTank = new DefaultPlayerTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t100,\n\t\t\t250,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addPlayerTank(playerTank);\n\t}\n}\n\nexport class Level3 extends Level {\n\tconstructor(audioManager: AudioManager) {\n\t\tconst obs: Obstacle = new Obstacle(700, 150, 30, 250);\n\t\tconst obstacleCanvas = new ObstacleCanvas('#obstacle-canvas', 1000, 500, [obs]);\n\t\tsuper(obstacleCanvas, audioManager);\n\t\tconst superAmmo: Ammunition[] = [new SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager)];\n\t\tconst aiTank = new StationaryRandomAimTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t900,\n\t\t\t250,\n\t\t\tobstacleCanvas,\n\t\t\tsuperAmmo,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addEnemyTank(aiTank);\n\n\t\tconst playerTank = new DefaultPlayerTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t200,\n\t\t\t250,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addPlayerTank(playerTank);\n\t}\n}\n\nexport class Level4 extends Level {\n\tconstructor(audioManager: AudioManager) {\n\t\tconst obs: Obstacle = new Obstacle(250, 100, 600, 40);\n\t\tconst obs2: Obstacle = new Obstacle(100, 350, 600, 40);\n\t\tconst obstacleCanvas = new ObstacleCanvas('#obstacle-canvas', 1000, 500, [obs, obs2]);\n\t\tsuper(obstacleCanvas, audioManager);\n\t\tconst basicAmmo: Ammunition[] = [new BasicAIAmmunition(0, 0, 0, 0, 0, true, audioManager)];\n\t\tconst basicBomb: Bomb[] = [];\n\t\tconst navigationGrid: NavigationGrid = new NavigationGrid(this.gameCanvas, this.obstacleCanvas, false);\n\t\tconst aiTank = new SimpleMovingTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t900,\n\t\t\t50,\n\t\t\tobstacleCanvas,\n\t\t\tbasicAmmo,\n\t\t\tbasicBomb,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addEnemyTank(aiTank);\n\n\t\tconst playerTank = new DefaultPlayerTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t50,\n\t\t\t450,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addPlayerTank(playerTank);\n\t}\n}\n\nexport class Level5 extends Level {\n\tconstructor(audioManager: AudioManager) {\n\t\tconst obs: Obstacle = new Obstacle(100, 100, 200, 100);\n\t\tconst obs2: Obstacle = new Obstacle(700, 100, 30, 100);\n\t\tconst obs3: Obstacle = new Obstacle(700, 350, 30, 100);\n\t\tconst obstacleCanvas = new ObstacleCanvas('#obstacle-canvas', 1000, 500, [obs, obs2, obs3]);\n\t\tsuper(obstacleCanvas, audioManager);\n\t\tconst basicAmmo: Ammunition[] = [new BasicAIAmmunition(0, 0, 0, 0, 0, true, audioManager)];\n\t\tconst superAmmo: Ammunition[] = [new SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager)];\n\t\tconst basicBomb: Bomb[] = [];\n\t\tconst navigationGrid: NavigationGrid = new NavigationGrid(this.gameCanvas, this.obstacleCanvas, false);\n\t\tconst aiTank3 = new SimpleMovingTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t300,\n\t\t\tobstacleCanvas,\n\t\t\tbasicAmmo,\n\t\t\tbasicBomb,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t\tconst aiTank = new StationaryRandomAimTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t100,\n\t\t\tobstacleCanvas,\n\t\t\tsuperAmmo,\n\t\t\taudioManager\n\t\t);\n\t\tconst aiTank2 = new StationaryTank(this.gameCanvas.gameRenderer.canvas, 800, 200, obstacleCanvas, audioManager);\n\t\tthis.gameCanvas.addEnemyTank(aiTank3);\n\t\tthis.gameCanvas.addEnemyTank(aiTank);\n\t\tthis.gameCanvas.addEnemyTank(aiTank2);\n\n\t\tconst playerTank = new DefaultPlayerTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t200,\n\t\t\t250,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addPlayerTank(playerTank);\n\t}\n}\n\nexport class Level6 extends Level {\n\tconstructor(audioManager: AudioManager) {\n\t\tconst obs: Obstacle = new Obstacle(100, 100, 200, 100);\n\t\tconst obs2: Obstacle = new Obstacle(700, 100, 30, 300);\n\t\tconst obstacleCanvas = new ObstacleCanvas('#obstacle-canvas', 1000, 500, [obs, obs2]);\n\t\tsuper(obstacleCanvas, audioManager);\n\n\t\tconst basicBombs: Bomb[] = [\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t];\n\t\tconst basicBombs2: Bomb[] = [\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t];\n\t\tconst basicBombs3: Bomb[] = [\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t];\n\n\t\tconst navigationGrid: NavigationGrid = new NavigationGrid(this.gameCanvas, this.obstacleCanvas, false);\n\t\tconst navigationGrid2: NavigationGrid = new NavigationGrid(this.gameCanvas, this.obstacleCanvas, false);\n\t\tconst navigationGrid3: NavigationGrid = new NavigationGrid(this.gameCanvas, this.obstacleCanvas, false);\n\t\tconst aiTank = new BomberTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t100,\n\t\t\tobstacleCanvas,\n\t\t\t[new BasicAIAmmunition(0, 0, 0, 0, 0, true, audioManager)],\n\t\t\tbasicBombs,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t\tconst aiTank2 = new BomberTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t200,\n\t\t\tobstacleCanvas,\n\t\t\t[new BasicAIAmmunition(0, 0, 0, 0, 0, true, audioManager)],\n\t\t\tbasicBombs2,\n\t\t\tnavigationGrid2,\n\t\t\taudioManager\n\t\t);\n\t\tconst aiTank3 = new BomberTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t300,\n\t\t\tobstacleCanvas,\n\t\t\t[new BasicAIAmmunition(0, 0, 0, 0, 0, true, audioManager)],\n\t\t\tbasicBombs3,\n\t\t\tnavigationGrid3,\n\t\t\taudioManager\n\t\t);\n\n\t\tthis.gameCanvas.addEnemyTank(aiTank);\n\t\tthis.gameCanvas.addEnemyTank(aiTank2);\n\t\tthis.gameCanvas.addEnemyTank(aiTank3);\n\n\t\tconst playerTank = new DefaultPlayerTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t200,\n\t\t\t250,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addPlayerTank(playerTank);\n\t}\n}\n\nexport class Level7 extends Level {\n\tconstructor(audioManager: AudioManager) {\n\t\tconst obs: Obstacle = new Obstacle(700, 100, 30, 300);\n\t\tconst obstacleCanvas = new ObstacleCanvas('#obstacle-canvas', 1000, 500, [obs]);\n\t\tsuper(obstacleCanvas, audioManager);\n\t\tconst basicAmmo: Ammunition[] = [\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t];\n\t\tconst basicAmmo2: Ammunition[] = [\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t];\n\t\tconst basicAmmo3: Ammunition[] = [\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t];\n\n\t\tconst basicBombs: Bomb[] = [new LoveBomb(0, 0, true, audioManager), new LoveBomb(0, 0, true, audioManager)];\n\t\tconst basicBombs2: Bomb[] = [new LoveBomb(0, 0, true, audioManager), new LoveBomb(0, 0, true, audioManager)];\n\t\tconst basicBombs3: Bomb[] = [new LoveBomb(0, 0, true, audioManager), new LoveBomb(0, 0, true, audioManager)];\n\n\t\tconst navigationGrid: NavigationGrid = new NavigationGrid(this.gameCanvas, this.obstacleCanvas, false);\n\t\tconst navigationGrid2: NavigationGrid = new NavigationGrid(this.gameCanvas, this.obstacleCanvas, false);\n\t\tconst navigationGrid3: NavigationGrid = new NavigationGrid(this.gameCanvas, this.obstacleCanvas, false);\n\t\tconst aiTank = new SuperBomberMovingTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t100,\n\t\t\tobstacleCanvas,\n\t\t\tbasicAmmo,\n\t\t\tbasicBombs,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t\tconst aiTank2 = new SuperBomberMovingTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t200,\n\t\t\tobstacleCanvas,\n\t\t\tbasicAmmo2,\n\t\t\tbasicBombs2,\n\t\t\tnavigationGrid2,\n\t\t\taudioManager\n\t\t);\n\t\tconst aiTank3 = new SuperBomberMovingTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t300,\n\t\t\tobstacleCanvas,\n\t\t\tbasicAmmo3,\n\t\t\tbasicBombs3,\n\t\t\tnavigationGrid3,\n\t\t\taudioManager\n\t\t);\n\n\t\tthis.gameCanvas.addEnemyTank(aiTank);\n\t\tthis.gameCanvas.addEnemyTank(aiTank2);\n\t\tthis.gameCanvas.addEnemyTank(aiTank3);\n\n\t\tconst playerTank = new DefaultPlayerTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t200,\n\t\t\t250,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addPlayerTank(playerTank);\n\t}\n}\n\nexport class Level8 extends Level {\n\tconstructor(audioManager: AudioManager) {\n\t\tconst obs1: Obstacle = new Obstacle(0, 120, 400, 50);\n\t\tconst obs2: Obstacle = new Obstacle(600, 120, 400, 50);\n\n\t\tconst obs3: Obstacle = new Obstacle(0, 330, 400, 50);\n\t\tconst obs4: Obstacle = new Obstacle(600, 330, 400, 50);\n\t\tconst obstacleCanvas = new ObstacleCanvas('#obstacle-canvas', 1000, 500, [obs1, obs2, obs3, obs4]);\n\t\tsuper(obstacleCanvas, audioManager);\n\n\t\tconst superAmmo1: Ammunition[] = [new SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager)];\n\t\tconst aiTank1 = new StationaryRandomAimTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t900,\n\t\t\t50,\n\t\t\tobstacleCanvas,\n\t\t\tsuperAmmo1,\n\t\t\taudioManager\n\t\t);\n\n\t\tconst superAmmo2: Ammunition[] = [new SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager)];\n\t\tconst aiTank2 = new StationaryRandomAimTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t900,\n\t\t\t250,\n\t\t\tobstacleCanvas,\n\t\t\tsuperAmmo2,\n\t\t\taudioManager\n\t\t);\n\n\t\tconst superAmmo3: Ammunition[] = [new SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager)];\n\t\tconst aiTank3 = new StationaryRandomAimTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t900,\n\t\t\t430,\n\t\t\tobstacleCanvas,\n\t\t\tsuperAmmo3,\n\t\t\taudioManager\n\t\t);\n\n\t\tconst superAmmo4: Ammunition[] = [new SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager)];\n\t\tconst aiTank4 = new StationaryRandomAimTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t100,\n\t\t\t50,\n\t\t\tobstacleCanvas,\n\t\t\tsuperAmmo4,\n\t\t\taudioManager\n\t\t);\n\n\t\tconst superAmmo5: Ammunition[] = [new SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager)];\n\t\tconst aiTank5 = new StationaryRandomAimTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t100,\n\t\t\t250,\n\t\t\tobstacleCanvas,\n\t\t\tsuperAmmo5,\n\t\t\taudioManager\n\t\t);\n\n\t\tthis.gameCanvas.addEnemyTank(aiTank1);\n\t\tthis.gameCanvas.addEnemyTank(aiTank2);\n\t\tthis.gameCanvas.addEnemyTank(aiTank3);\n\t\tthis.gameCanvas.addEnemyTank(aiTank4);\n\t\tthis.gameCanvas.addEnemyTank(aiTank5);\n\n\t\tconst playerTank = new DefaultPlayerTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t100,\n\t\t\t430,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addPlayerTank(playerTank);\n\t}\n}\n","import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\nimport './css/style.css';\n\nimport { LevelSelector } from './ui/LevelSelector';\n\nconst levelSelector: LevelSelector = new LevelSelector(8);\n","import * as d3 from 'd3';\nimport packageJson from '../../package.json';\nimport { AudioManager } from '../game/AudioManager';\nimport { Level, Level1, Level2, Level3, Level4, Level5, Level6, Level7, Level8 } from '../game/Level';\n\nexport class LevelSelector {\n\tprivate numLevels: number;\n\tprivate activeLevelNumber: number;\n\tprivate activeLevel: Level;\n\tprivate sliderWidth: number = Math.min(window.innerWidth * 0.8, 600); // Responsive width\n\tprivate audioManager: AudioManager;\n\n\tconstructor(levels: number) {\n\t\tthis.numLevels = levels;\n\t\tthis.audioManager = new AudioManager();\n\t\tconst audioPromise: Promise<void[]> = this.audioManager.loadAllAudio();\n\t\taudioPromise.then((): void => {\n\t\t\tthis.audioManager.playBackgroundMusic();\n\t\t});\n\t\tthis.activeLevelNumber = 1;\n\t\tthis.activeLevel = new Level1(this.audioManager);\n\t\tthis.setHeader();\n\t\tthis.createSlider();\n\t\tthis.createJumbotron();\n\t}\n\n\tpublic setHeader() {\n\t\tconst header: HTMLElement | null = document.getElementById('main-header');\n\t\tif (header) {\n\t\t\theader.textContent = `Treads V${packageJson.version}`;\n\t\t}\n\t}\n\n\tpublic startActiveLevel() {\n\t\tthis.activeLevel.stop();\n\t\tswitch (this.activeLevelNumber) {\n\t\t\tcase 1:\n\t\t\t\tthis.activeLevel = new Level1(this.audioManager);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.activeLevel = new Level2(this.audioManager);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.activeLevel = new Level3(this.audioManager);\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tthis.activeLevel = new Level4(this.audioManager);\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tthis.activeLevel = new Level5(this.audioManager);\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tthis.activeLevel = new Level6(this.audioManager);\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\tthis.activeLevel = new Level7(this.audioManager);\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\tthis.activeLevel = new Level8(this.audioManager);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.activeLevel = new Level1(this.audioManager);\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.activeLevel.start();\n\t}\n\n\tprivate createSlider(): void {\n\t\tconst margin: { top: number; right: number; bottom: number; left: number } = {\n\t\t\ttop: 10,\n\t\t\tright: 10,\n\t\t\tbottom: 20,\n\t\t\tleft: 10,\n\t\t};\n\t\tconst effectiveWidth: number = this.sliderWidth - margin.left - margin.right;\n\n\t\tconst scale: d3.ScaleLinear<number, number, never> = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([1, this.numLevels])\n\t\t\t.range([0, effectiveWidth])\n\t\t\t.clamp(true);\n\n\t\tconst svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any> = d3\n\t\t\t.select('#slider')\n\t\t\t.append('svg')\n\t\t\t.attr('width', this.sliderWidth)\n\t\t\t.attr('height', 50);\n\n\t\tconst sliderGroup: d3.Selection<SVGGElement, unknown, HTMLElement, any> = svg\n\t\t\t.append('g')\n\t\t\t.attr('transform', `translate(${margin.left}, 30)`);\n\n\t\tsliderGroup.append('g').call(d3.axisBottom(scale).ticks(this.numLevels).tickFormat(d3.format('1')));\n\n\t\tconst handle: d3.Selection<SVGCircleElement, unknown, HTMLElement, any> = sliderGroup\n\t\t\t.append('circle')\n\t\t\t.attr('cx', scale(this.activeLevelNumber))\n\t\t\t.attr('cy', -10)\n\t\t\t.attr('r', 10)\n\t\t\t.style('fill', 'red')\n\t\t\t.style('cursor', 'ew-resize');\n\t\tconst dragHandler: d3.DragBehavior<SVGCircleElement, unknown, unknown> = d3\n\t\t\t.drag<SVGCircleElement, unknown>()\n\t\t\t.on('drag', (event) => {\n\t\t\t\tconst x = event.x - margin.left; // Adjusting for the left margin\n\t\t\t\tconst level = Math.round(scale.invert(x));\n\t\t\t\thandle.attr('cx', scale(level));\n\t\t\t\tthis.updateActiveLevel(level);\n\t\t\t});\n\n\t\thandle.call(dragHandler);\n\t}\n\n\tprivate createJumbotron(): void {\n\t\tconst jumbotron: d3.Selection<d3.BaseType, unknown, HTMLElement, any> = d3.select('#jumbotron');\n\t\tconst colorScale = d3.scaleLinear<string>().domain([1, this.numLevels]).range(['lightblue', 'lightcoral']);\n\t\tfor (let i = 1; i <= this.numLevels; i++) {\n\t\t\tconst box: d3.Selection<HTMLDivElement, unknown, HTMLElement, any> = jumbotron\n\t\t\t\t.append('div')\n\t\t\t\t.attr('class', 'jumbotron-box inactive')\n\t\t\t\t.on('click', () => this.updateActiveLevel(i));\n\n\t\t\t// Example of how you can append an SVG to a jumbotron box.\n\t\t\tconst svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any> = box\n\t\t\t\t.append('svg')\n\t\t\t\t.attr('width', '100%')\n\t\t\t\t.attr('height', '100%');\n\n\t\t\tsvg\n\t\t\t\t.append('rect') // Placeholder for actual SVG content.\n\t\t\t\t.attr('width', '100%')\n\t\t\t\t.attr('height', '100%')\n\t\t\t\t.attr('fill', colorScale(i));\n\t\t\tsvg\n\t\t\t\t.append('text')\n\t\t\t\t.attr('x', '50%')\n\t\t\t\t.attr('y', '50%')\n\t\t\t\t.attr('dominant-baseline', 'middle')\n\t\t\t\t.attr('text-anchor', 'middle')\n\t\t\t\t.text(`Level ${i}`);\n\t\t}\n\t\tthis.updateActiveLevel(this.activeLevelNumber);\n\t}\n\n\tprivate updateActiveLevel(level: number): void {\n\t\tthis.activeLevelNumber = level;\n\t\td3.selectAll('.jumbotron-box')\n\t\t\t.classed('active', (_, i) => i + 1 === level)\n\t\t\t.classed('inactive', (_, i) => i + 1 !== level);\n\t\td3.select('circle').attr(\n\t\t\t'cx',\n\t\t\td3\n\t\t\t\t.scaleLinear()\n\t\t\t\t.domain([1, this.numLevels])\n\t\t\t\t.range([0, this.sliderWidth - 20])(level)\n\t\t);\n\t\tthis.startActiveLevel();\n\t}\n}\n"],"names":["AudioFile","Direction","this","audioContext","window","AudioContext","webkitAudioContext","audioBuffers","Map","backgroundMusicSource","loadAllAudio","promises","loadAudio","TANK_FIRE","TANK_DESTROY","BOMB_EXPLODE","BACKGROUND_MUSIC","Promise","all","audioFile","url","fetch","then","response","arrayBuffer","decodeAudioData","audioBuffer","set","catch","error","console","play","buffer","get","source","createBufferSource","connect","destination","start","warn","getAudioContext","playBackgroundMusic","stopBackgroundMusic","loop","stop","disconnect","startX","startY","theta","speed","maxBounces","canvasWidth","canvasHeight","isDestroyed","audioManager","radius","xPosition","yPosition","xVelocity","Math","cos","yVelocity","sin","bounces","updatePosition","obstacleCanvas","obstacles","forEach","obstacle","xLeft","xRight","yTop","yBottom","fromLeft","abs","fromRight","fromTop","fromBottom","minDistance","min","checkEnemyHit","enemyTanks","enemyTank","destroy","log","checkPlayerHit","playerTank","checkAmmunitionCollision","ammunitions","ammunition","dx","dy","sqrt","checkBombCollision","bombs","bomb","reload","draw","context","beginPath","arc","PI","fillStyle","fill","lineWidth","strokeStyle","stroke","closePath","willHitPlayerTank","predictedXPosition","predictedYPosition","predictedXVelocity","predictedYVelocity","predictedBounces","Ammunition","x","y","color","velocityX","velocityY","life","fragmentRadius","fragmentColor","blastRadius","update","fragmentColorScale","domain","range","blastDelayMS","fuseStartTime","shouldFlashRed","isExploding","fragments","createFragments","setTimeout","isPointInsideBlastRadius","tankMidpoint","setFuse","performance","now","animateFuse","updateExplosion","particle","filter","fractionElapsed","some","threshold","requestAnimationFrame","i","angle","random","fragment","BombFragment","push","Bomb","save","translate","scale","moveTo","bezierCurveTo","restore","canvas","playerWin","enemyWin","getContext","Error","initializeCanvas","width","height","renderLevelOverScreen","message","font","textWidth","measureText","fontSize","clearRect","strokeText","fillText","render","progress","every","tank","allAmmunition","flatMap","allBombs","aim","aimXPos","aimYPos","shoot","plantBomb","reticule","canvasSelector","animationFrameID","gameRenderer","GameRenderer","document","querySelector","lastRenderTime","addEventListener","resizeCanvas","bind","gameLoop","cancelAnimationFrame","timeStamp","addEnemyTank","addPlayerTank","g","h","f","walkable","parent","gameCanvas","stationary","grid","gridCellWidth","path","gridXLength","gridYLength","floor","Node","gridXLeft","gridXRight","gridYTop","gridYBottom","obs","reset","getNodeFromTank","xGridCoordinate","size","yGridCoordinate","max","getRandomNodeInRadiusOfTarget","target","candidateNodes","node","distance","pow","length","aStar","openSet","closedSet","Set","current","sort","a","b","unshift","splice","indexOf","add","getWalkableNeighbors","neighbor","has","tentativeG","SQRT2","includes","round","neighbors","rect","obstacleCanvasSelector","clearObstacles","BABY_BLUE","LAVENDER_BLUSH","PALE_YELLOW","PEACH_PUFF","BLUSH_PINK","LIGHT_AQUA","LIGHT_PINK","LIGHT_CORAL_PINK","MINT_CREAM","PALE_LAVENDER","CORAL_ORANGE","SOFT_PEACH","LIGHT_SALMON_PINK","LIGHT_ROSE","SOFT_ORANGE","SOFT_TEAL","PALE_MINT","LIGHT_SAGE","PALE_GREEN","MINT_GREEN","SOFT_PEACH_PINK","PALE_PEACH","PALE_GRAY","PALE_AQUA","SOFT_CYAN","dashPattern","renderReticule","tankSize","reticuleWidth","tankXPos","tankYPos","mouseXPos","mouseYpos","setLineDash","lineTo","Reticule","maxReticuleLength","tankXPosition","tankYPosition","mouseXPosition","mouseYPosition","xDist","yDist","distanceToMaxDistanceRatio","dashLength","spaceLength","gunBarrellWidth","twoPi","lastDirectionMoved","UNKNOWN","wasLastMoveBlocked","consecutiveDirectionMoves","maxAmmunition","maxBombs","canvasRect","getBoundingClientRect","xOffset","left","yOffset","top","atan2","aimAngle","gunBarrellEndX","gunBarrellEndY","xLength","fillRect","lineJoin","strokeRect","grayValue","alphaValue","moveInLastDirectionMoved","moveInCardinalDirection","getRandomDirection","enumValues","Object","keys","map","n","Number","parseInt","isNaN","direction","NORTH","moveNorth","SOUTH","moveSouth","EAST","moveEast","WEST","moveWest","NORTHEAST","moveNorthEast","NORTHWEST","moveNorthWest","SOUTHEAST","moveSouthEast","SOUTHWEST","moveSouthWest","values","value","randomIndex","blocked","blockedNorth","blockedEast","blockedWest","blockedSouth","aggressionFactor","navigationGrid","pathRecaculationInterval","drawNavigationGrid","currentNode","j","index","array","startNode","targetNode","destinationNode","randomDirection","randomNumber","Tank","bomberTankColor","PastelColorPalette","NoReticule","minTimeBetweenShotsMS","timeBetweenShotsIsElapsed","minTimeBetweenBombPlantsMS","timeBetweenPlantsIsElapsed","availableBombIndex","findIndex","availableAmmunitionIndex","EnemyTank","xPos","yPos","defaultPlayerTankColor","PlayerAmmunition","PlayerBomb","viewportWidth","innerWidth","distanceFromLeft","distanceFromRight","right","AdjustingCustomColorReticule","keyStates","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","w","s","d","W","A","S","D","event","hasOwnProperty","key","code","clientX","clientY","contains","up","down","simpleMovingTankColor","fastTankColor","NavigationGrid","aimAngleChangeAmount","getAngleChangeAmount","stationaryTankColor","BasicAIAmmunition","superBomberMovingTankColor","GameCanvas","Obstacle","ObstacleCanvas","stationaryTank","StationaryTank","DefaultPlayerTank","Level","stationaryTank1","stationaryTank2","stationaryTank3","superAmmo","SuperAIAmmunition","aiTank","StationaryRandomAimTank","obs2","basicAmmo","SimpleMovingTank","obs3","aiTank3","aiTank2","basicBombs","BasicBomb","basicBombs2","basicBombs3","navigationGrid2","navigationGrid3","BomberTank","basicAmmo2","basicAmmo3","LoveBomb","SuperBomberMovingTank","obs1","obs4","superAmmo1","aiTank1","superAmmo2","superAmmo3","superAmmo4","aiTank4","superAmmo5","aiTank5","levels","sliderWidth","numLevels","AudioManager","activeLevelNumber","activeLevel","Level1","setHeader","createSlider","createJumbotron","header","getElementById","textContent","startActiveLevel","Level2","Level3","Level4","Level5","Level6","Level7","Level8","margin","effectiveWidth","clamp","sliderGroup","append","attr","call","ticks","tickFormat","handle","style","dragHandler","on","level","invert","updateActiveLevel","jumbotron","colorScale","svg","text","classed","_"],"sourceRoot":""}