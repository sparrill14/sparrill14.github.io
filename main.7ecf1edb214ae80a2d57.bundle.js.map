{"version":3,"file":"main.7ecf1edb214ae80a2d57.bundle.js","mappings":"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","sources":["webpack://treads/./src/assets/computer.ico","webpack://treads/./src/game/AudioManager.ts","webpack://treads/./src/game/tanks/Tank.ts","webpack://treads/./src/game/Ammunition.ts","webpack://treads/./src/game/Bomb.ts","webpack://treads/./src/game/GameRenderer.ts","webpack://treads/./src/game/GameCanvas.ts","webpack://treads/./src/game/NavigationGrid.ts","webpack://treads/./src/game/Obstacle.ts","webpack://treads/./src/game/ObstacleCanvas.ts","webpack://treads/./src/game/Reticule.ts","webpack://treads/./src/game/tanks/EnemyTank.ts","webpack://treads/./src/game/tanks/BomberTank.ts","webpack://treads/./src/game/tanks/PlayerTank.ts","webpack://treads/./src/game/tanks/SimpleMovingTank.ts","webpack://treads/./src/game/tanks/StationaryRandomAimTank.ts","webpack://treads/./src/game/tanks/StationaryTank.ts","webpack://treads/./src/game/tanks/SuperBomberMovingTank.ts","webpack://treads/./src/game/Level.ts","webpack://treads/./src/index.ts","webpack://treads/./src/ui/LevelSelector.ts"],"sourcesContent":["export default __webpack_public_path__ + \"assets/computer.ico\";","import backgroundMusic from '../assets/audio/backgroundMusic.mp3';\nimport bombExplode from '../assets/audio/bombExplode.mp3';\nimport tankDestroy from '../assets/audio/tankDestroy.mp3';\nimport tankFire from '../assets/audio/tankFire.mp3';\n\nexport enum AudioFile {\n\tTANK_FIRE = 1,\n\tTANK_DESTROY = 2,\n\tBOMB_EXPLODE = 3,\n\tBACKGROUND_MUSIC = 4,\n}\n\nexport class AudioManager {\n\tprivate audioContext: AudioContext;\n\tprivate audioBuffers: Map<AudioFile, AudioBuffer>;\n\tprivate backgroundMusicSource: AudioBufferSourceNode | null;\n\n\tconstructor() {\n\t\tthis.audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n\t\tthis.audioBuffers = new Map();\n\t\tthis.backgroundMusicSource = null;\n\t}\n\n\tloadAllAudio(): Promise<void[]> {\n\t\tconst promises = [\n\t\t\tthis.loadAudio(AudioFile.TANK_FIRE, tankFire),\n\t\t\tthis.loadAudio(AudioFile.TANK_DESTROY, tankDestroy),\n\t\t\tthis.loadAudio(AudioFile.BOMB_EXPLODE, bombExplode),\n\t\t\tthis.loadAudio(AudioFile.BACKGROUND_MUSIC, backgroundMusic),\n\t\t];\n\t\treturn Promise.all(promises);\n\t}\n\n\tloadAudio(audioFile: AudioFile, url: string): Promise<void> {\n\t\treturn fetch(url)\n\t\t\t.then((response) => response.arrayBuffer())\n\t\t\t.then((arrayBuffer) => this.audioContext.decodeAudioData(arrayBuffer))\n\t\t\t.then((audioBuffer) => {\n\t\t\t\tthis.audioBuffers.set(audioFile, audioBuffer);\n\t\t\t})\n\t\t\t.catch((error) => console.error(`Error loading audio file: ${url}`, error));\n\t}\n\n\tplay(audioFile: AudioFile): void {\n\t\tconst buffer = this.audioBuffers.get(audioFile);\n\t\tif (buffer) {\n\t\t\tconst source = this.audioContext.createBufferSource();\n\t\t\tsource.buffer = buffer;\n\t\t\tsource.connect(this.audioContext.destination);\n\t\t\tsource.start(0);\n\t\t} else {\n\t\t\tconsole.warn(`Audio buffer for ${audioFile} not found`);\n\t\t}\n\t}\n\n\tgetAudioContext(): AudioContext {\n\t\treturn this.audioContext;\n\t}\n\n\tplayBackgroundMusic(): void {\n\t\tconst buffer = this.audioBuffers.get(AudioFile.BACKGROUND_MUSIC);\n\t\tif (buffer) {\n\t\t\tthis.stopBackgroundMusic();\n\t\t\tthis.backgroundMusicSource = this.audioContext.createBufferSource();\n\t\t\tthis.backgroundMusicSource.buffer = buffer;\n\t\t\tthis.backgroundMusicSource.loop = true;\n\t\t\tthis.backgroundMusicSource.connect(this.audioContext.destination);\n\t\t\tthis.backgroundMusicSource.start(0);\n\t\t} else {\n\t\t\tconsole.warn(`Background music buffer not found`);\n\t\t}\n\t}\n\n\tstopBackgroundMusic(): void {\n\t\tif (this.backgroundMusicSource) {\n\t\t\tthis.backgroundMusicSource.stop(0);\n\t\t\tthis.backgroundMusicSource.disconnect();\n\t\t\tthis.backgroundMusicSource = null;\n\t\t}\n\t}\n}\n","import { Ammunition } from '../Ammunition';\nimport { AudioManager } from '../AudioManager';\nimport { Bomb } from '../Bomb';\nimport { ObstacleCanvas } from '../ObstacleCanvas';\nimport { Reticule } from '../Reticule';\n\nexport enum Direction {\n\tNORTH = 1,\n\tSOUTH = 2,\n\tEAST = 3,\n\tWEST = 4,\n\tNORTHEAST = 5,\n\tNORTHWEST = 6,\n\tSOUTHEAST = 7,\n\tSOUTHWEST = 8,\n\tUNKNOWN = 9,\n}\n\nexport class Tank {\n\tpublic xPos: number;\n\tpublic yPos: number;\n\tpublic xLeft: number;\n\tpublic xRight: number;\n\tpublic yTop: number;\n\tpublic yBottom: number;\n\tpublic speed: number;\n\tpublic size: number;\n\tpublic tankMidpoint: number;\n\tpublic color: string;\n\tpublic reticule: Reticule;\n\tpublic gunBarrellWidth = 7;\n\tpublic isDestroyed = false;\n\tpublic obstacleCanvas: ObstacleCanvas;\n\tpublic twoPi: number = 2 * Math.PI;\n\tpublic lastDirectionMoved: Direction = Direction.UNKNOWN;\n\tpublic wasLastMoveBlocked = false;\n\tpublic consecutiveDirectionMoves = 0;\n\tpublic audioManager: AudioManager;\n\tpublic aimAngle: number;\n\tpublic aimXPos: number;\n\tpublic aimYPos: number;\n\tpublic xOffset: number;\n\tpublic yOffset: number;\n\tpublic ammunition: Ammunition[] = [];\n\tpublic maxAmmunition: number;\n\tpublic bombs: Bomb[] = [];\n\tpublic maxBombs: number;\n\tpublic canvasWidth: number;\n\tpublic canvasHeight: number;\n\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\treticule: Reticule,\n\t\txPos: number,\n\t\tyPos: number,\n\t\tspeed: number,\n\t\tsize: number,\n\t\tcolor: string,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\tammunition: Ammunition[],\n\t\tbombs: Bomb[],\n\t\taudioManager: AudioManager\n\t) {\n\t\tthis.reticule = reticule;\n\t\tthis.xPos = xPos;\n\t\tthis.yPos = yPos;\n\t\tthis.xLeft = xPos;\n\t\tthis.xRight = xPos + size;\n\t\tthis.yTop = yPos;\n\t\tthis.yBottom = yPos + size;\n\t\tthis.speed = speed;\n\t\tthis.size = size;\n\t\tthis.color = color;\n\t\tthis.canvasWidth = canvas.width;\n\t\tthis.canvasHeight = canvas.height;\n\t\tthis.obstacleCanvas = obstacleCanvas;\n\t\tthis.tankMidpoint = this.size / 2;\n\t\tthis.ammunition = ammunition;\n\t\tthis.maxAmmunition = ammunition.length;\n\t\tthis.bombs = bombs;\n\t\tthis.maxBombs = bombs.length;\n\t\tthis.audioManager = audioManager;\n\n\t\tthis.aimAngle = 90;\n\t\tconst canvasRect: DOMRect = canvas.getBoundingClientRect();\n\t\tthis.xOffset = canvasRect.left;\n\t\tthis.yOffset = canvasRect.top;\n\t\t// Set the initital X and Y aim position to the center of the canvas\n\t\tthis.aimXPos = canvas.width / 2;\n\t\tthis.aimYPos = canvas.height / 2;\n\t}\n\n\tpublic draw(context: CanvasRenderingContext2D): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontext.fillStyle = this.color;\n\t\tcontext.fillRect(this.xPos, this.yPos, this.size, this.size);\n\n\t\tcontext.setLineDash([]);\n\t\tcontext.lineJoin = 'bevel';\n\t\tcontext.strokeStyle = 'black';\n\t\tcontext.lineWidth = 2;\n\t\tcontext.strokeRect(this.xPos, this.yPos, this.size, this.size);\n\n\t\tcontext.beginPath();\n\t\tcontext.arc(this.xPos + this.tankMidpoint, this.yPos + this.tankMidpoint, this.size / 3, 0, this.twoPi);\n\t\tcontext.stroke();\n\n\t\tconst endX = this.xPos + this.tankMidpoint + Math.cos(this.aimAngle) * this.size;\n\t\tconst endY = this.yPos + this.tankMidpoint + Math.sin(this.aimAngle) * this.size;\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(this.xPos + this.tankMidpoint, this.yPos + this.tankMidpoint);\n\t\tcontext.lineTo(endX, endY);\n\t\tcontext.lineWidth = this.gunBarrellWidth;\n\t\tcontext.stroke();\n\t}\n\n\tpublic updatePosition(playerTank: Tank): void {\n\t\treturn;\n\t}\n\n\tpublic aim(mouseXPos: number, mouseYpos: number, playerTank: Tank): void {\n\t\treturn;\n\t}\n\n\tpublic shoot(playerTank: Tank): void {\n\t\treturn;\n\t}\n\n\tpublic plantBomb(playerTank: Tank): void {\n\t\treturn;\n\t}\n\n\tpublic moveInLastDirectionMoved(): void {\n\t\tthis.moveInCardinalDirection(this.lastDirectionMoved);\n\t}\n\n\tpublic getRandomDirection<Direction>(): Direction[keyof Direction] {\n\t\tconst enumValues = Object.keys(Direction)\n\t\t\t.map((n) => Number.parseInt(n))\n\t\t\t.filter((n) => !Number.isNaN(n)) as unknown as Direction[keyof Direction][];\n\t\tconst randomIndex = Math.floor(Math.random() * enumValues.length);\n\t\tconst randomEnumValue = enumValues[randomIndex];\n\t\treturn randomEnumValue;\n\t}\n\n\tpublic moveInCardinalDirection(direction: Direction): void {\n\t\tswitch (direction) {\n\t\t\tcase Direction.NORTH: {\n\t\t\t\tthis.moveNorth();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Direction.SOUTH: {\n\t\t\t\tthis.moveSouth();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Direction.EAST: {\n\t\t\t\tthis.moveEast();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Direction.WEST: {\n\t\t\t\tthis.moveWest();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Direction.NORTHEAST: {\n\t\t\t\tthis.moveNorthEast();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Direction.NORTHWEST: {\n\t\t\t\tthis.moveNorthWest();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Direction.SOUTHEAST: {\n\t\t\t\tthis.moveSouthEast();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Direction.SOUTHWEST: {\n\t\t\t\tthis.moveSouthWest();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tconst enumValues = Object.values(Direction).filter((value) => typeof value === 'number') as Direction[];\n\t\t\t\tconst randomIndex = Math.floor(Math.random() * enumValues.length);\n\t\t\t\tthis.moveInCardinalDirection(enumValues[randomIndex]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic moveNorth(): void {\n\t\tif (this.lastDirectionMoved == Direction.NORTH) {\n\t\t\tthis.consecutiveDirectionMoves += 1;\n\t\t} else {\n\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t}\n\t\tthis.lastDirectionMoved = Direction.NORTH;\n\t\tlet blocked = false;\n\t\tfor (const obstacle of this.obstacleCanvas.obstacles) {\n\t\t\tif (\n\t\t\t\tthis.yPos - this.speed < obstacle.yTop + obstacle.height &&\n\t\t\t\tthis.yPos > obstacle.yTop &&\n\t\t\t\tobstacle.xLeft < this.xPos + this.size &&\n\t\t\t\tthis.xPos < obstacle.xRight\n\t\t\t) {\n\t\t\t\tthis.yPos = obstacle.yBottom;\n\t\t\t\tblocked = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!blocked) {\n\t\t\tthis.yPos = Math.max(this.yPos - this.speed, 0);\n\t\t} else {\n\t\t\tthis.wasLastMoveBlocked = true;\n\t\t}\n\t}\n\n\tpublic moveSouth(): void {\n\t\tif (this.lastDirectionMoved == Direction.SOUTH) {\n\t\t\tthis.consecutiveDirectionMoves += 1;\n\t\t} else {\n\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t}\n\t\tthis.lastDirectionMoved = Direction.SOUTH;\n\t\tlet blocked = false;\n\t\tfor (const obstacle of this.obstacleCanvas.obstacles) {\n\t\t\tif (\n\t\t\t\tthis.yPos + this.speed + this.size > obstacle.yTop &&\n\t\t\t\tthis.yPos < obstacle.yTop + obstacle.height &&\n\t\t\t\tobstacle.xLeft < this.xPos + this.size &&\n\t\t\t\tthis.xPos < obstacle.xRight\n\t\t\t) {\n\t\t\t\tthis.yPos = obstacle.yTop - this.size;\n\t\t\t\tblocked = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!blocked) {\n\t\t\tthis.yPos = Math.min(this.yPos + this.speed, this.canvasHeight - this.size);\n\t\t} else {\n\t\t\tthis.wasLastMoveBlocked = true;\n\t\t}\n\t}\n\n\tpublic moveWest(): void {\n\t\tif (this.lastDirectionMoved == Direction.WEST) {\n\t\t\tthis.consecutiveDirectionMoves += 1;\n\t\t} else {\n\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t}\n\t\tthis.lastDirectionMoved = Direction.WEST;\n\t\tlet blocked = false;\n\t\tfor (const obstacle of this.obstacleCanvas.obstacles) {\n\t\t\tif (\n\t\t\t\tthis.xPos - this.speed < obstacle.xRight &&\n\t\t\t\tthis.xPos > obstacle.xLeft &&\n\t\t\t\tobstacle.yTop < this.yPos + this.size &&\n\t\t\t\tthis.yPos < obstacle.yBottom\n\t\t\t) {\n\t\t\t\tthis.xPos = obstacle.xRight;\n\t\t\t\tblocked = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!blocked) {\n\t\t\tthis.xPos = Math.max(this.xPos - this.speed, 0);\n\t\t} else {\n\t\t\tthis.wasLastMoveBlocked = true;\n\t\t}\n\t}\n\n\tpublic moveEast(): void {\n\t\tif (this.lastDirectionMoved == Direction.EAST) {\n\t\t\tthis.consecutiveDirectionMoves += 1;\n\t\t} else {\n\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t}\n\t\tthis.lastDirectionMoved = Direction.EAST;\n\t\tlet blocked = false;\n\t\tfor (const obstacle of this.obstacleCanvas.obstacles) {\n\t\t\tif (\n\t\t\t\tthis.xPos + this.speed + this.size > obstacle.xLeft &&\n\t\t\t\tthis.xPos < obstacle.xLeft + obstacle.width &&\n\t\t\t\tobstacle.yTop < this.yPos + this.size &&\n\t\t\t\tthis.yPos < obstacle.yBottom\n\t\t\t) {\n\t\t\t\tthis.xPos = obstacle.xLeft - this.size;\n\t\t\t\tblocked = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!blocked) {\n\t\t\tthis.xPos = Math.min(this.xPos + this.speed, this.canvasWidth - this.size);\n\t\t} else {\n\t\t\tthis.wasLastMoveBlocked = true;\n\t\t}\n\t}\n\n\tpublic moveNorthEast(): void {\n\t\tif (this.lastDirectionMoved == Direction.NORTHEAST) {\n\t\t\tthis.consecutiveDirectionMoves += 1;\n\t\t} else {\n\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t}\n\t\tthis.lastDirectionMoved = Direction.NORTHEAST;\n\t\tlet blockedNorth = false;\n\t\tlet blockedEast = false;\n\t\tfor (const obstacle of this.obstacleCanvas.obstacles) {\n\t\t\tif (\n\t\t\t\t!blockedNorth &&\n\t\t\t\tthis.yPos - this.speed < obstacle.yTop + obstacle.height &&\n\t\t\t\tthis.yPos > obstacle.yTop &&\n\t\t\t\tobstacle.xLeft < this.xPos + this.size &&\n\t\t\t\tthis.xPos < obstacle.xRight\n\t\t\t) {\n\t\t\t\tthis.yPos = obstacle.yBottom;\n\t\t\t\tblockedNorth = true;\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!blockedEast &&\n\t\t\t\tthis.xPos + this.speed + this.size > obstacle.xLeft &&\n\t\t\t\tthis.xPos < obstacle.xLeft + obstacle.width &&\n\t\t\t\tobstacle.yTop < this.yPos + this.size &&\n\t\t\t\tthis.yPos < obstacle.yBottom\n\t\t\t) {\n\t\t\t\tthis.xPos = obstacle.xLeft - this.size;\n\t\t\t\tblockedEast = true;\n\t\t\t}\n\t\t}\n\t\tif (blockedNorth && blockedEast) {\n\t\t\tthis.wasLastMoveBlocked = true;\n\t\t}\n\t\tif (!blockedNorth) {\n\t\t\tthis.yPos = Math.max(this.yPos - this.speed, 0);\n\t\t}\n\t\tif (!blockedEast) {\n\t\t\tthis.xPos = Math.min(this.xPos + this.speed, this.canvasWidth - this.size);\n\t\t}\n\t}\n\n\tpublic moveNorthWest(): void {\n\t\tif (this.lastDirectionMoved == Direction.NORTHWEST) {\n\t\t\tthis.consecutiveDirectionMoves += 1;\n\t\t} else {\n\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t}\n\t\tthis.lastDirectionMoved = Direction.NORTHWEST;\n\t\tlet blockedNorth = false;\n\t\tlet blockedWest = false;\n\t\tfor (const obstacle of this.obstacleCanvas.obstacles) {\n\t\t\tif (\n\t\t\t\t!blockedNorth &&\n\t\t\t\tthis.yPos - this.speed < obstacle.yTop + obstacle.height &&\n\t\t\t\tthis.yPos > obstacle.yTop &&\n\t\t\t\tobstacle.xLeft < this.xPos + this.size &&\n\t\t\t\tthis.xPos < obstacle.xRight\n\t\t\t) {\n\t\t\t\tthis.yPos = obstacle.yBottom;\n\t\t\t\tblockedNorth = true;\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!blockedWest &&\n\t\t\t\tthis.xPos - this.speed < obstacle.xRight &&\n\t\t\t\tthis.xPos > obstacle.xLeft &&\n\t\t\t\tobstacle.yTop < this.yPos + this.size &&\n\t\t\t\tthis.yPos < obstacle.yBottom\n\t\t\t) {\n\t\t\t\tthis.xPos = obstacle.xRight;\n\t\t\t\tblockedWest = true;\n\t\t\t}\n\t\t}\n\t\tif (blockedNorth && blockedWest) {\n\t\t\tthis.wasLastMoveBlocked = true;\n\t\t}\n\t\tif (!blockedNorth) {\n\t\t\tthis.yPos = Math.max(this.yPos - this.speed, 0);\n\t\t}\n\t\tif (!blockedWest) {\n\t\t\tthis.xPos = Math.max(this.xPos - this.speed, 0);\n\t\t}\n\t}\n\n\tpublic moveSouthEast(): void {\n\t\tif (this.lastDirectionMoved == Direction.SOUTHEAST) {\n\t\t\tthis.consecutiveDirectionMoves += 1;\n\t\t} else {\n\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t}\n\t\tthis.lastDirectionMoved = Direction.SOUTHEAST;\n\t\tlet blockedSouth = false;\n\t\tlet blockedEast = false;\n\t\tfor (const obstacle of this.obstacleCanvas.obstacles) {\n\t\t\tif (\n\t\t\t\t!blockedSouth &&\n\t\t\t\tthis.yPos + this.speed + this.size > obstacle.yTop &&\n\t\t\t\tthis.yPos < obstacle.yTop + obstacle.height &&\n\t\t\t\tobstacle.xLeft < this.xPos + this.size &&\n\t\t\t\tthis.xPos < obstacle.xRight\n\t\t\t) {\n\t\t\t\tthis.yPos = obstacle.yTop - this.size;\n\t\t\t\tblockedSouth = true;\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!blockedEast &&\n\t\t\t\tthis.xPos + this.speed + this.size > obstacle.xLeft &&\n\t\t\t\tthis.xPos < obstacle.xLeft + obstacle.width &&\n\t\t\t\tobstacle.yTop < this.yPos + this.size &&\n\t\t\t\tthis.yPos < obstacle.yBottom\n\t\t\t) {\n\t\t\t\tthis.xPos = obstacle.xLeft - this.size;\n\t\t\t\tblockedEast = true;\n\t\t\t}\n\t\t}\n\t\tif (blockedSouth && blockedEast) {\n\t\t\tthis.wasLastMoveBlocked = true;\n\t\t}\n\t\tif (!blockedSouth) {\n\t\t\tthis.yPos = Math.min(this.yPos + this.speed, this.canvasHeight - this.size);\n\t\t}\n\t\tif (!blockedEast) {\n\t\t\tthis.xPos = Math.min(this.xPos + this.speed, this.canvasWidth - this.size);\n\t\t}\n\t}\n\n\tpublic moveSouthWest(): void {\n\t\tif (this.lastDirectionMoved == Direction.SOUTHWEST) {\n\t\t\tthis.consecutiveDirectionMoves += 1;\n\t\t} else {\n\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t}\n\t\tthis.lastDirectionMoved = Direction.SOUTHWEST;\n\t\tlet blockedSouth = false;\n\t\tlet blockedWest = false;\n\t\tfor (const obstacle of this.obstacleCanvas.obstacles) {\n\t\t\tif (\n\t\t\t\t!blockedSouth &&\n\t\t\t\tthis.yPos + this.speed + this.size > obstacle.yTop &&\n\t\t\t\tthis.yPos < obstacle.yTop + obstacle.height &&\n\t\t\t\tobstacle.xLeft < this.xPos + this.size &&\n\t\t\t\tthis.xPos < obstacle.xRight\n\t\t\t) {\n\t\t\t\tthis.yPos = obstacle.yTop - this.size;\n\t\t\t\tblockedSouth = true;\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!blockedWest &&\n\t\t\t\tthis.xPos - this.speed < obstacle.xRight &&\n\t\t\t\tthis.xPos > obstacle.xLeft &&\n\t\t\t\tobstacle.yTop < this.yPos + this.size &&\n\t\t\t\tthis.yPos < obstacle.yBottom\n\t\t\t) {\n\t\t\t\tthis.xPos = obstacle.xRight;\n\t\t\t\tblockedWest = true;\n\t\t\t}\n\t\t}\n\t\tif (blockedSouth && blockedWest) {\n\t\t\tthis.wasLastMoveBlocked = true;\n\t\t}\n\t\tif (!blockedSouth) {\n\t\t\tthis.yPos = Math.min(this.yPos + this.speed, this.canvasHeight - this.size);\n\t\t}\n\t\tif (!blockedWest) {\n\t\t\tthis.xPos = Math.max(this.xPos - this.speed, 0);\n\t\t}\n\t}\n}\n","import { AudioFile, AudioManager } from './AudioManager';\nimport { ObstacleCanvas } from './ObstacleCanvas';\nimport { Tank } from './tanks/Tank';\n\nexport class Ammunition {\n\tpublic xPos: number;\n\tpublic yPos: number;\n\tpublic xVelocity: number;\n\tpublic yVelocity: number;\n\tpublic theta: number;\n\tpublic bounces: number;\n\tpublic maxBounces: number;\n\tpublic speed: number;\n\tpublic canvasWidth: number;\n\tpublic canvasHeight: number;\n\tpublic isDestroyed: boolean;\n\tpublic audioManager: AudioManager;\n\n\tconstructor(\n\t\tstartX: number,\n\t\tstartY: number,\n\t\ttheta: number,\n\t\tspeed: number,\n\t\tmaxBounces: number,\n\t\tcanvasWidth: number,\n\t\tcanvasHeight: number,\n\t\tisDestroyed: boolean,\n\t\taudioManager: AudioManager\n\t) {\n\t\tthis.xPos = startX;\n\t\tthis.yPos = startY;\n\t\tthis.theta = theta;\n\t\tthis.speed = speed;\n\t\tthis.xVelocity = Math.cos(this.theta) * this.speed;\n\t\tthis.yVelocity = Math.sin(this.theta) * this.speed;\n\t\tthis.bounces = 0;\n\t\tthis.maxBounces = maxBounces;\n\t\tthis.canvasWidth = canvasWidth;\n\t\tthis.canvasHeight = canvasHeight;\n\t\tthis.isDestroyed = isDestroyed;\n\t\tthis.audioManager = audioManager;\n\t}\n\n\tupdatePosition(obstacleCanvas: ObstacleCanvas): void {\n\t\tthis.xPos += this.xVelocity;\n\t\tthis.yPos += this.yVelocity;\n\n\t\tif (this.xPos <= 0 || this.xPos > this.canvasWidth) {\n\t\t\tthis.xVelocity = -this.xVelocity;\n\t\t\tthis.bounces++;\n\t\t}\n\n\t\tif (this.yPos <= 0 || this.yPos > this.canvasHeight) {\n\t\t\tthis.yVelocity = -this.yVelocity;\n\t\t\tthis.bounces++;\n\t\t}\n\n\t\tobstacleCanvas.obstacles.forEach((obstacle) => {\n\t\t\tif (\n\t\t\t\tthis.xPos > obstacle.xLeft &&\n\t\t\t\tthis.xPos < obstacle.xRight &&\n\t\t\t\tthis.yPos > obstacle.yTop &&\n\t\t\t\tthis.yPos < obstacle.yBottom\n\t\t\t) {\n\t\t\t\tthis.bounces++;\n\t\t\t\tconst fromLeft = Math.abs(this.xPos - obstacle.xLeft);\n\t\t\t\tconst fromRight = Math.abs(this.xPos - obstacle.xRight);\n\t\t\t\tconst fromTop = Math.abs(this.yPos - obstacle.yTop);\n\t\t\t\tconst fromBottom = Math.abs(this.yPos - obstacle.yBottom);\n\t\t\t\tconst minDistance = Math.min(fromLeft, fromRight, fromTop, fromBottom);\n\n\t\t\t\tif (minDistance === fromTop) {\n\t\t\t\t\tthis.yPos = obstacle.yTop - 1;\n\t\t\t\t\tthis.yVelocity = -this.yVelocity;\n\t\t\t\t} else if (minDistance === fromBottom) {\n\t\t\t\t\tthis.yPos = obstacle.yBottom + 1;\n\t\t\t\t\tthis.yVelocity = -this.yVelocity;\n\t\t\t\t} else if (minDistance === fromLeft) {\n\t\t\t\t\tthis.xPos = obstacle.xLeft - 1;\n\t\t\t\t\tthis.xVelocity = -this.xVelocity;\n\t\t\t\t} else if (minDistance === fromRight) {\n\t\t\t\t\tthis.xPos = obstacle.xRight + 1;\n\t\t\t\t\tthis.xVelocity = -this.xVelocity;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (this.bounces > this.maxBounces) {\n\t\t\tthis.isDestroyed = true;\n\t\t}\n\t}\n\n\tcheckEnemyHit(enemyTanks: Tank[]): void {\n\t\tenemyTanks.forEach((enemyTank) => {\n\t\t\tif (enemyTank.isDestroyed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tthis.xPos > enemyTank.xLeft &&\n\t\t\t\tthis.xPos < enemyTank.xRight &&\n\t\t\t\tthis.yPos > enemyTank.yTop &&\n\t\t\t\tthis.yPos < enemyTank.yBottom\n\t\t\t) {\n\t\t\t\tthis.isDestroyed = true;\n\t\t\t\tenemyTank.isDestroyed = true;\n\t\t\t\tthis.audioManager.play(AudioFile.TANK_DESTROY);\n\t\t\t\tconsole.log('Enemy hit!!!');\n\t\t\t}\n\t\t});\n\t}\n\n\tcheckPlayerHit(playerTank: Tank): void {\n\t\tif (playerTank.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\tthis.xPos > playerTank.xLeft &&\n\t\t\tthis.xPos < playerTank.xRight &&\n\t\t\tthis.yPos > playerTank.yTop &&\n\t\t\tthis.yPos < playerTank.yBottom\n\t\t) {\n\t\t\tplayerTank.isDestroyed = true;\n\t\t\tplayerTank.isDestroyed = true;\n\t\t\tthis.isDestroyed = true;\n\t\t\tconsole.log('Player Hit!!!');\n\t\t}\n\t}\n\n\treload(\n\t\tstartX: number,\n\t\tstartY: number,\n\t\ttheta: number,\n\t\tisDestroyed: boolean,\n\t\tcanvasWidth: number,\n\t\tcanvasHeight: number\n\t) {\n\t\tthis.xPos = startX;\n\t\tthis.yPos = startY;\n\t\tthis.theta = theta;\n\t\tthis.isDestroyed = isDestroyed;\n\t\tthis.xVelocity = Math.cos(this.theta) * this.speed;\n\t\tthis.yVelocity = Math.sin(this.theta) * this.speed;\n\t\tthis.canvasWidth = canvasWidth;\n\t\tthis.canvasHeight = canvasHeight;\n\t\tthis.bounces = 0;\n\t}\n\n\tdraw(context: CanvasRenderingContext2D): void {\n\t\tcontext.beginPath();\n\t\tcontext.arc(this.xPos, this.yPos, 4, 0, 2 * Math.PI);\n\t\tcontext.fillStyle = 'white';\n\t\tcontext.fill();\n\t\tcontext.lineWidth = 2;\n\t\tcontext.strokeStyle = 'black';\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\t}\n\n\twillHitPlayerTank(obstacleCanvas: ObstacleCanvas, playerTank: Tank): boolean {\n\t\tlet predictedXPosition: number = this.xPos;\n\t\tlet predictedYPosition: number = this.yPos;\n\t\tlet predictedXVelocity: number = this.xVelocity;\n\t\tlet predictedYVelocity: number = this.yVelocity;\n\t\tlet predictedBounces = 0;\n\t\twhile (predictedBounces <= this.maxBounces) {\n\t\t\tpredictedXPosition += predictedXVelocity;\n\t\t\tpredictedYPosition += predictedYVelocity;\n\t\t\tif (predictedXPosition <= 0 || predictedXPosition > this.canvasWidth) {\n\t\t\t\tpredictedXVelocity = -predictedXVelocity;\n\t\t\t\tpredictedBounces++;\n\t\t\t}\n\t\t\tif (predictedYPosition <= 0 || predictedYPosition > this.canvasHeight) {\n\t\t\t\tpredictedYVelocity = -predictedYVelocity;\n\t\t\t\tpredictedBounces++;\n\t\t\t}\n\t\t\tobstacleCanvas.obstacles.forEach((obstacle) => {\n\t\t\t\tif (\n\t\t\t\t\tpredictedXPosition > obstacle.xLeft &&\n\t\t\t\t\tpredictedXPosition < obstacle.xRight &&\n\t\t\t\t\tpredictedYPosition > obstacle.yTop &&\n\t\t\t\t\tpredictedYPosition < obstacle.yBottom\n\t\t\t\t) {\n\t\t\t\t\tpredictedBounces++;\n\t\t\t\t\tpredictedXVelocity = -predictedXVelocity;\n\t\t\t\t\tpredictedYVelocity = -predictedYVelocity;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (\n\t\t\t\tpredictedXPosition > playerTank.xLeft &&\n\t\t\t\tpredictedXPosition < playerTank.xRight &&\n\t\t\t\tpredictedYPosition > playerTank.yTop &&\n\t\t\t\tpredictedYPosition < playerTank.yBottom\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class PlayerAmmunition extends Ammunition {\n\tconstructor(\n\t\tstartX: number,\n\t\tstartY: number,\n\t\ttheta: number,\n\t\tcanvasWidth: number,\n\t\tcanvasHeight: number,\n\t\tisDestroyed: boolean,\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst playerAmmunitionMaxBounces = 1;\n\t\tconst playerAmmunitionSpeed = 4;\n\t\tsuper(\n\t\t\tstartX,\n\t\t\tstartY,\n\t\t\ttheta,\n\t\t\tplayerAmmunitionSpeed,\n\t\t\tplayerAmmunitionMaxBounces,\n\t\t\tcanvasWidth,\n\t\t\tcanvasHeight,\n\t\t\tisDestroyed,\n\t\t\taudioManager\n\t\t);\n\t}\n}\n\nexport class BasicAIAmmunition extends Ammunition {\n\tconstructor(\n\t\tstartX: number,\n\t\tstartY: number,\n\t\ttheta: number,\n\t\tcanvasWidth: number,\n\t\tcanvasHeight: number,\n\t\tisDestroyed: boolean,\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst BasicAIAmmunitionMaxBounces = 0;\n\t\tconst BasicAIAmmunitionSpeed = 4;\n\t\tsuper(\n\t\t\tstartX,\n\t\t\tstartY,\n\t\t\ttheta,\n\t\t\tBasicAIAmmunitionSpeed,\n\t\t\tBasicAIAmmunitionMaxBounces,\n\t\t\tcanvasWidth,\n\t\t\tcanvasHeight,\n\t\t\tisDestroyed,\n\t\t\taudioManager\n\t\t);\n\t}\n}\n\nexport class SuperAIAmmunition extends Ammunition {\n\tconstructor(\n\t\tstartX: number,\n\t\tstartY: number,\n\t\ttheta: number,\n\t\tcanvasWidth: number,\n\t\tcanvasHeight: number,\n\t\tisDestroyed: boolean,\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst superAIAmmunitionMaxBounces = 2;\n\t\tconst superAIAmmunitionSpeed = 6;\n\t\tsuper(\n\t\t\tstartX,\n\t\t\tstartY,\n\t\t\ttheta,\n\t\t\tsuperAIAmmunitionSpeed,\n\t\t\tsuperAIAmmunitionMaxBounces,\n\t\t\tcanvasWidth,\n\t\t\tcanvasHeight,\n\t\t\tisDestroyed,\n\t\t\taudioManager\n\t\t);\n\t}\n}\n","import { AudioFile, AudioManager } from './AudioManager';\nimport { Tank } from './tanks/Tank';\n\nclass BombFragment {\n\tpublic x: number;\n\tpublic y: number;\n\tpublic fragmentRadius: number;\n\tpublic fragmentColor: string;\n\tpublic velocityX: number;\n\tpublic velocityY: number;\n\tpublic blastRadius: number;\n\tpublic life: number;\n\n\tconstructor(x: number, y: number, radius: number, color: string, velocityX: number, velocityY: number, life: number) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.fragmentRadius = radius;\n\t\tthis.fragmentColor = color;\n\t\tthis.velocityX = velocityX;\n\t\tthis.velocityY = velocityY;\n\t\tthis.blastRadius = life;\n\t\tthis.life = life;\n\t}\n\n\tupdate(): void {\n\t\tthis.x += this.velocityX;\n\t\tthis.y += this.velocityY;\n\t\tthis.life -= 1;\n\t}\n\n\tdraw(context: CanvasRenderingContext2D): void {\n\t\tcontext.beginPath();\n\t\tcontext.arc(this.x, this.y, this.fragmentRadius * (this.life / this.blastRadius), 0, Math.PI * 2, false);\n\t\tcontext.fillStyle = this.fragmentColor;\n\t\tcontext.fill();\n\t\tcontext.closePath();\n\t}\n}\n\nexport class Bomb {\n\tpublic xPos: number;\n\tpublic yPos: number;\n\tpublic blastRadius: number;\n\tpublic blastDelayMS: number;\n\tpublic isDestroyed: boolean;\n\tpublic isExploding: boolean;\n\tpublic fuseStartTime: number;\n\tpublic shouldFlashRed: boolean;\n\tpublic audioManager: AudioManager;\n\n\tprivate fragments: BombFragment[];\n\n\tconstructor(startX: number, startY: number, blastRadius: number, isDestroyed: boolean, audioManager: AudioManager) {\n\t\tthis.xPos = startX;\n\t\tthis.yPos = startY;\n\t\tthis.blastRadius = blastRadius;\n\t\tthis.isDestroyed = isDestroyed;\n\t\tthis.audioManager = audioManager;\n\t\tthis.blastDelayMS = 5000;\n\t\tthis.fuseStartTime = 0;\n\t\tthis.shouldFlashRed = false;\n\t\tthis.isExploding = false;\n\t\tthis.fragments = [];\n\t}\n\n\tcheckEnemyHit(enemyTanks: Tank[]): void {\n\t\tenemyTanks.forEach((enemyTank) => {\n\t\t\tif (enemyTank.isDestroyed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.isExploding) {\n\t\t\t\tif (\n\t\t\t\t\tthis.isExploding &&\n\t\t\t\t\tthis.isPointInsideBlastRadius(\n\t\t\t\t\t\tenemyTank.xPos + enemyTank.tankMidpoint,\n\t\t\t\t\t\tenemyTank.yPos + enemyTank.tankMidpoint\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tenemyTank.isDestroyed = true;\n\t\t\t\t\tconsole.log('Enemy hit with bomb!!!');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tcheckPlayerHit(playerTank: Tank): void {\n\t\tif (playerTank.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\tthis.isExploding &&\n\t\t\t(this.isPointInsideBlastRadius(playerTank.xLeft, playerTank.yTop) ||\n\t\t\t\tthis.isPointInsideBlastRadius(playerTank.xRight, playerTank.yTop) ||\n\t\t\t\tthis.isPointInsideBlastRadius(playerTank.xLeft, playerTank.yBottom) ||\n\t\t\t\tthis.isPointInsideBlastRadius(playerTank.xRight, playerTank.yBottom) ||\n\t\t\t\tthis.isPointInsideBlastRadius(playerTank.xPos, playerTank.yPos))\n\t\t) {\n\t\t\tplayerTank.isDestroyed = true;\n\t\t\tconsole.log('Player Hit with bomb!!!');\n\t\t}\n\t}\n\n\tsetFuse(): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tthis.fuseStartTime = performance.now();\n\t\tthis.animateFuse();\n\t\tsetTimeout((): void => {\n\t\t\tthis.createFragments();\n\t\t\tthis.audioManager.play(AudioFile.BOMB_EXPLODE);\n\t\t\tthis.isExploding = true;\n\t\t\tsetTimeout((): void => {\n\t\t\t\tthis.isExploding = false;\n\t\t\t\tthis.isDestroyed = true;\n\t\t\t}, 1000);\n\t\t}, this.blastDelayMS);\n\t}\n\n\tprivate animateFuse(): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tconst elapsedTime = performance.now() - this.fuseStartTime;\n\t\tconst remainingTime = this.blastDelayMS - elapsedTime;\n\t\tif (remainingTime <= 0) {\n\t\t\tthis.isDestroyed = true;\n\t\t\treturn;\n\t\t}\n\t\tconst fractionElapsed = elapsedTime / this.blastDelayMS;\n\t\tconst flashThresholds = [0.25, 0.5, 0.625, 0.75, 0.8125, 0.875, 0.90625, 0.9375, 0.96875, 0.984375];\n\t\tthis.shouldFlashRed = flashThresholds.some(\n\t\t\t(threshold) => fractionElapsed > threshold && fractionElapsed < threshold + 0.01\n\t\t);\n\t\trequestAnimationFrame(() => this.animateFuse());\n\t}\n\n\tisPointInsideBlastRadius(x: number, y: number): boolean {\n\t\tconst dx = x - this.xPos;\n\t\tconst dy = y - this.yPos;\n\t\treturn Math.sqrt(dx * dx + dy * dy) <= this.blastRadius;\n\t}\n\n\tcreateFragments(): void {\n\t\tconst fragmentCount = 50;\n\t\tfor (let i = 0; i < fragmentCount; i++) {\n\t\t\tconst angle = Math.random() * 2 * Math.PI;\n\t\t\tconst speed = Math.random() * 5 + 2;\n\t\t\tconst velocityX = Math.cos(angle) * speed;\n\t\t\tconst velocityY = Math.sin(angle) * speed;\n\t\t\tconst fragment = new BombFragment(\n\t\t\t\tthis.xPos,\n\t\t\t\tthis.yPos,\n\t\t\t\tMath.random() * 2 + 1,\n\t\t\t\t'rgba(255, 69, 0, 1)',\n\t\t\t\tvelocityX,\n\t\t\t\tvelocityY,\n\t\t\t\tthis.blastRadius\n\t\t\t);\n\t\t\tthis.fragments.push(fragment);\n\t\t}\n\t}\n\n\tdraw(context: CanvasRenderingContext2D): void {\n\t\tif (this.isExploding) {\n\t\t\tthis.drawExplosion(context);\n\t\t\treturn;\n\t\t}\n\n\t\tcontext.beginPath();\n\t\tcontext.arc(this.xPos, this.yPos, 15, 0, 2 * Math.PI);\n\t\tcontext.fillStyle = this.shouldFlashRed ? 'red' : 'yellow';\n\t\tcontext.fill();\n\t\tcontext.lineWidth = 3;\n\t\tcontext.strokeStyle = 'black';\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\n\t\tcontext.beginPath();\n\t\tcontext.arc(this.xPos, this.yPos, 10, 0, 2 * Math.PI);\n\t\tcontext.lineWidth = 1.5;\n\t\tcontext.strokeStyle = 'black';\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\t}\n\n\tdrawExplosion(context: CanvasRenderingContext2D): void {\n\t\tthis.fragments.forEach((particle) => {\n\t\t\tparticle.update();\n\t\t\tparticle.draw(context);\n\t\t});\n\n\t\tthis.fragments = this.fragments.filter((particle) => particle.life > 0);\n\t}\n}\n\nexport class PlayerBomb extends Bomb {\n\tconstructor(startX: number, startY: number, isDestroyed: boolean, audioManager: AudioManager) {\n\t\tconst playerBombBlastRadius = 50;\n\t\tsuper(startX, startY, playerBombBlastRadius, isDestroyed, audioManager);\n\t}\n}\n\nexport class BasicBomb extends Bomb {\n\tconstructor(startX: number, startY: number, isDestroyed: boolean, audioManager: AudioManager) {\n\t\tconst basicBombBlastRadius = 80;\n\t\tsuper(startX, startY, basicBombBlastRadius, isDestroyed, audioManager);\n\t}\n}\n\nexport class SuperBomb extends Bomb {\n\tconstructor(startX: number, startY: number, isDestroyed: boolean, audioManager: AudioManager) {\n\t\tconst superBombBlastRadius = 20;\n\t\tsuper(startX, startY, superBombBlastRadius, isDestroyed, audioManager);\n\t}\n}\n\nexport class LoveBomb extends Bomb {\n\tconstructor(startX: number, startY: number, isDestroyed: boolean, audioManager: AudioManager) {\n\t\tconst loveBombBlastRadius = 100;\n\t\tsuper(startX, startY, loveBombBlastRadius, isDestroyed, audioManager);\n\t}\n\n\toverride draw(context: CanvasRenderingContext2D): void {\n\t\tif (this.isExploding) {\n\t\t\tthis.drawExplosion(context);\n\t\t\treturn;\n\t\t}\n\t\tcontext.save();\n\t\tcontext.translate(this.xPos, this.yPos);\n\t\tcontext.scale(1, 1.3);\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(0, 0);\n\t\tcontext.bezierCurveTo(12, -12, 24, 0, 0, 24);\n\t\tcontext.bezierCurveTo(-24, 0, -12, -12, 0, 0);\n\t\tcontext.fillStyle = this.shouldFlashRed ? 'red' : '#FFC2D1';\n\t\tcontext.fill();\n\t\tcontext.lineWidth = 3;\n\t\tcontext.strokeStyle = 'black';\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\t\tcontext.restore();\n\t}\n}\n","import { Tank } from './tanks/Tank';\n\nexport class GameRenderer {\n\tpublic playerWin = false;\n\tpublic enemyWin = false;\n\n\tprivate context: CanvasRenderingContext2D | null;\n\n\tconstructor(public canvas: HTMLCanvasElement) {\n\t\tconst context = this.canvas.getContext('2d');\n\t\tif (!context) {\n\t\t\tthrow new Error('2d context not supported or canvas element not found.');\n\t\t}\n\t\tthis.context = context;\n\t}\n\n\tpublic initializeCanvas(width: number, height: number): void {\n\t\tthis.canvas.width = width;\n\t\tthis.canvas.height = height;\n\t}\n\n\trenderLevelOverScreen() {\n\t\tif (!this.context) {\n\t\t\tthrow new Error('2d context not supported or canvas element not found.');\n\t\t}\n\n\t\tconst message = this.playerWin ? 'Win' : this.enemyWin ? 'Lose' : '';\n\t\tif (message === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst fontSize = 100;\n\t\tthis.context.font = `${fontSize}px Arial`;\n\t\tthis.context.lineWidth = 5;\n\t\tthis.context.strokeStyle = this.playerWin ? 'green' : 'red';\n\t\tthis.context.fillStyle = this.playerWin ? 'green' : 'red';\n\n\t\tconst textWidth = this.context.measureText(message).width;\n\t\tconst x = (this.canvas.width - textWidth) / 2;\n\t\tconst y = this.canvas.height / 2 + fontSize / 2;\n\n\t\tthis.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t\tthis.context.strokeText(message, x, y);\n\t\tthis.context.fillText(message, x, y);\n\t}\n\n\trender(progress: number, playerTank: Tank, enemyTanks: Tank[]): void {\n\t\tif (!this.context) {\n\t\t\tthrow new Error('2d context not supported or canvas element not found.');\n\t\t}\n\t\tthis.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n\t\tif (playerTank.isDestroyed) {\n\t\t\tthis.enemyWin = true;\n\t\t} else if (enemyTanks.every((tank) => tank.isDestroyed)) {\n\t\t\tthis.playerWin = true;\n\t\t} else {\n\t\t\tplayerTank.updatePosition(playerTank);\n\t\t\tplayerTank.aim(playerTank.aimXPos, playerTank.aimYPos, playerTank);\n\n\t\t\tenemyTanks.forEach((enemyTank) => {\n\t\t\t\tenemyTank.updatePosition(playerTank);\n\t\t\t\tenemyTank.aim(enemyTank.aimXPos, enemyTank.aimYPos, playerTank);\n\t\t\t\tenemyTank.shoot(playerTank);\n\t\t\t\tenemyTank.plantBomb(playerTank);\n\t\t\t});\n\n\t\t\tenemyTanks.forEach((enemyTank) => {\n\t\t\t\tenemyTank.draw(this.context as CanvasRenderingContext2D);\n\t\t\t\tenemyTank.reticule.draw(\n\t\t\t\t\tthis.context as CanvasRenderingContext2D,\n\t\t\t\t\tenemyTank.xPos,\n\t\t\t\t\tenemyTank.yPos,\n\t\t\t\t\tenemyTank.aimXPos,\n\t\t\t\t\tenemyTank.aimYPos\n\t\t\t\t);\n\t\t\t\tenemyTank.ammunition.forEach((ammunition) => {\n\t\t\t\t\tif (ammunition.isDestroyed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tammunition.updatePosition(enemyTank.obstacleCanvas);\n\t\t\t\t\tammunition.checkPlayerHit(playerTank);\n\t\t\t\t\tammunition.draw(this.context as CanvasRenderingContext2D);\n\t\t\t\t});\n\t\t\t\tenemyTank.bombs.forEach((bomb) => {\n\t\t\t\t\tif (bomb.isDestroyed && !bomb.isExploding) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tbomb.checkPlayerHit(playerTank);\n\t\t\t\t\tbomb.draw(this.context as CanvasRenderingContext2D);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tplayerTank.draw(this.context as CanvasRenderingContext2D);\n\t\t\tplayerTank.reticule.draw(\n\t\t\t\tthis.context as CanvasRenderingContext2D,\n\t\t\t\tplayerTank.xPos,\n\t\t\t\tplayerTank.yPos,\n\t\t\t\tplayerTank.aimXPos,\n\t\t\t\tplayerTank.aimYPos\n\t\t\t);\n\t\t\tplayerTank.ammunition.forEach((ammunition) => {\n\t\t\t\tif (ammunition.isDestroyed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tammunition.updatePosition(playerTank.obstacleCanvas);\n\t\t\t\tammunition.checkEnemyHit(enemyTanks);\n\t\t\t\tammunition.draw(this.context as CanvasRenderingContext2D);\n\t\t\t});\n\t\t\tplayerTank.bombs.forEach((bomb) => {\n\t\t\t\tif (bomb.isDestroyed && !bomb.isExploding) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbomb.checkEnemyHit(enemyTanks);\n\t\t\t\tbomb.draw(this.context as CanvasRenderingContext2D);\n\t\t\t});\n\t\t}\n\t}\n}\n","import { GameRenderer } from './GameRenderer';\nimport { ObstacleCanvas } from './ObstacleCanvas';\nimport { Tank } from './tanks/Tank';\n\nexport class GameCanvas {\n\tpublic gameRenderer: GameRenderer;\n\tprivate playerTank: Tank | null = null;\n\tprivate enemyTanks: Tank[] = [];\n\tprivate lastRenderTime: number;\n\tpublic obstacleCanvas: ObstacleCanvas;\n\tpublic width: number;\n\tpublic height: number;\n\tpublic animationFrameID: number | null = null;\n\n\tconstructor(canvasSelector: string, width: number, height: number, obstacleCanvas: ObstacleCanvas) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.obstacleCanvas = obstacleCanvas;\n\t\tthis.animationFrameID = null;\n\t\tthis.gameRenderer = new GameRenderer(document.querySelector(canvasSelector) as HTMLCanvasElement);\n\t\tthis.gameRenderer.initializeCanvas(this.width, this.height);\n\t\tthis.lastRenderTime = 0;\n\t\twindow.addEventListener('resize', this.resizeCanvas.bind(this));\n\t}\n\n\tpublic start() {\n\t\tif (!this.animationFrameID) {\n\t\t\tthis.animationFrameID = requestAnimationFrame(this.gameLoop.bind(this));\n\t\t}\n\t}\n\n\tpublic stop() {\n\t\tif (this.animationFrameID) {\n\t\t\tcancelAnimationFrame(this.animationFrameID);\n\t\t\tthis.animationFrameID = null;\n\t\t}\n\t}\n\n\tprivate resizeCanvas(): void {}\n\n\tprivate gameLoop(timeStamp: number): void {\n\t\tif (this.playerTank != null) {\n\t\t\tconst progress = timeStamp - this.lastRenderTime;\n\t\t\tthis.gameRenderer.render(progress, this.playerTank, this.enemyTanks);\n\t\t\tif (this.gameRenderer.enemyWin || this.gameRenderer.playerWin) {\n\t\t\t\tthis.stop();\n\t\t\t\tthis.obstacleCanvas.clearObstacles();\n\t\t\t\tthis.gameRenderer.renderLevelOverScreen();\n\t\t\t}\n\t\t\tthis.lastRenderTime = timeStamp;\n\t\t\tthis.animationFrameID = requestAnimationFrame(this.gameLoop.bind(this));\n\t\t}\n\t}\n\n\tpublic addEnemyTank(tank: Tank): void {\n\t\tthis.enemyTanks.push(tank);\n\t}\n\n\tpublic addPlayerTank(tank: Tank): void {\n\t\tthis.playerTank = tank;\n\t}\n}\n","import { GameCanvas } from './GameCanvas';\nimport { ObstacleCanvas } from './ObstacleCanvas';\nimport { Tank } from './tanks/Tank';\n\nexport class Node {\n\tpublic x: number;\n\tpublic y: number;\n\tpublic g = 0;\n\tpublic h = 0;\n\tpublic f = 0;\n\tpublic walkable = true;\n\tpublic parent: Node | null = null;\n\n\tconstructor(x: number, y: number) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n}\n\nexport class NavigationGrid {\n\tpublic grid: Node[][] = [];\n\tpublic gridCellWidth = 30;\n\tpublic gridXLength: number;\n\tpublic gridYLength: number;\n\tpublic path: Node[] = [];\n\tpublic stationary: boolean;\n\n\tconstructor(gameCanvas?: GameCanvas, obstacleCanvas?: ObstacleCanvas, stationary: boolean = true) {\n\t\tif (!gameCanvas || !obstacleCanvas || stationary) {\n\t\t\tthis.gridXLength = 0;\n\t\t\tthis.gridYLength = 0;\n\t\t\tthis.stationary = true;\n\t\t\treturn;\n\t\t}\n\t\tthis.stationary = false;\n\t\tthis.gridXLength = Math.floor(gameCanvas.width / this.gridCellWidth);\n\t\tthis.gridYLength = Math.floor(gameCanvas.height / this.gridCellWidth);\n\t\tfor (let x = 0; x < this.gridXLength; x++) {\n\t\t\tthis.grid[x] = [];\n\t\t\tfor (let y = 0; y < this.gridYLength; y++) {\n\t\t\t\tthis.grid[x][y] = new Node(x, y);\n\t\t\t\tconst gridXLeft = x * this.gridCellWidth;\n\t\t\t\tconst gridXRight = gridXLeft + this.gridCellWidth;\n\t\t\t\tconst gridYTop = y * this.gridCellWidth;\n\t\t\t\tconst gridYBottom = gridYTop + this.gridCellWidth;\n\t\t\t\tthis.grid[x][y].walkable = !obstacleCanvas.obstacles.some(\n\t\t\t\t\t(obs) => gridXRight > obs.xLeft && gridXLeft < obs.xRight && gridYBottom > obs.yTop && gridYTop < obs.yBottom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treset(): void {\n\t\tfor (let x = 0; x < this.gridXLength; x++) {\n\t\t\tfor (let y = 0; y < this.gridYLength; y++) {\n\t\t\t\tthis.grid[x][y].f = 0;\n\t\t\t\tthis.grid[x][y].g = 0;\n\t\t\t\tthis.grid[x][y].h = 0;\n\t\t\t\tthis.grid[x][y].parent = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetNodeFromTank(tank: Tank): Node {\n\t\tif (this.stationary) {\n\t\t\treturn new Node(0, 0);\n\t\t}\n\t\tlet xGridCoordinate: number = Math.floor((tank.xPos + tank.size / 2) / this.gridCellWidth);\n\t\tlet yGridCoordinate: number = Math.floor((tank.yPos + tank.size / 2) / this.gridCellWidth);\n\n\t\txGridCoordinate = Math.max(0, Math.min(xGridCoordinate, this.gridXLength - 1));\n\t\tyGridCoordinate = Math.max(0, Math.min(yGridCoordinate, this.gridYLength - 1));\n\t\treturn this.grid[xGridCoordinate][yGridCoordinate];\n\t}\n\n\tgetRandomNodeInRadiusOfTarget(target: Node, radius: number): Node {\n\t\tconst candidateNodes: Node[] = [];\n\t\tfor (let x = 0; x < this.gridXLength; x++) {\n\t\t\tfor (let y = 0; y < this.gridYLength; y++) {\n\t\t\t\tconst node = this.grid[x][y];\n\t\t\t\tconst distance = Math.sqrt(Math.pow(node.x - target.x, 2) + Math.pow(node.y - target.y, 2));\n\t\t\t\tif (distance <= radius + 1 && distance >= radius - 1 && node.walkable) {\n\t\t\t\t\tcandidateNodes.push(node);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst randomIndex = Math.floor(Math.random() * candidateNodes.length);\n\t\treturn candidateNodes[randomIndex];\n\t}\n\n\taStar(start: Node, target: Node): Node[] | null {\n\t\tconst openSet: Node[] = [start];\n\t\tconst closedSet = new Set<Node>();\n\n\t\twhile (openSet.length > 0) {\n\t\t\tlet current: Node | null = openSet.sort((a, b) => a.f - b.f)[0];\n\n\t\t\tif (current.x === target.x && current.y === target.y) {\n\t\t\t\tconst path = [];\n\t\t\t\twhile (current !== null) {\n\t\t\t\t\tpath.unshift(current);\n\t\t\t\t\tcurrent = current.parent;\n\t\t\t\t}\n\t\t\t\treturn path;\n\t\t\t}\n\n\t\t\topenSet.splice(openSet.indexOf(current), 1);\n\t\t\tclosedSet.add(current);\n\n\t\t\tconst neighbors = this.getWalkableNeighbors(current);\n\n\t\t\tfor (const neighbor of neighbors) {\n\t\t\t\tif (closedSet.has(neighbor)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst tentativeG = current.g + (neighbor.x - current.x === 0 || neighbor.y - current.y === 0 ? 1 : Math.SQRT2);\n\t\t\t\tif (!openSet.includes(neighbor)) {\n\t\t\t\t\topenSet.push(neighbor);\n\t\t\t\t} else if (tentativeG >= neighbor.g) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tneighbor.parent = current;\n\t\t\t\tneighbor.g = tentativeG;\n\t\t\t\tneighbor.h = Math.round(Math.sqrt(Math.pow(neighbor.x - target.x, 2) + Math.pow(neighbor.y - target.y, 2)));\n\t\t\t\tneighbor.f = neighbor.g + neighbor.h;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetWalkableNeighbors(node: Node): Node[] {\n\t\t// Get the 8 nodes surrounding the current only if its walkable\n\t\tconst neighbors: Node[] = [];\n\t\tfor (let dx = -1; dx <= 1; dx++) {\n\t\t\tfor (let dy = -1; dy <= 1; dy++) {\n\t\t\t\tif (dx === 0 && dy === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst x = node.x + dx;\n\t\t\t\tconst y = node.y + dy;\n\n\t\t\t\tif (x >= 0 && y >= 0 && x < this.gridXLength && y < this.gridYLength && this.grid[x][y].walkable) {\n\t\t\t\t\tneighbors.push(this.grid[x][y]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn neighbors;\n\t}\n}\n","export class Obstacle {\n\tpublic xLeft: number;\n\tpublic xRight: number;\n\tpublic yTop: number;\n\tpublic yBottom: number;\n\tpublic width: number;\n\tpublic height: number;\n\n\tconstructor(startX: number, startY: number, width: number, height: number) {\n\t\tthis.xLeft = startX;\n\t\tthis.yTop = startY;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.yBottom = this.yTop + this.height;\n\t\tthis.xRight = this.xLeft + this.width;\n\t}\n\n\tdraw(context: CanvasRenderingContext2D): void {\n\t\tcontext.beginPath();\n\t\tcontext.rect(this.xLeft, this.yTop, this.width, this.height);\n\t\tcontext.fillStyle = 'black';\n\t\tcontext.fill();\n\t}\n}\n","import { Obstacle } from './Obstacle';\n\nexport class ObstacleCanvas {\n\tprivate obstacleCanvas: HTMLCanvasElement;\n\tpublic obstacles: Obstacle[] = [];\n\tpublic width: number;\n\tpublic height: number;\n\n\tconstructor(obstacleCanvasSelector: string, width: number, height: number, obstacles: Obstacle[]) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.obstacles = obstacles;\n\t\twindow.addEventListener('resize', this.resizeCanvas.bind(this));\n\t\tthis.obstacleCanvas = document.querySelector(obstacleCanvasSelector) as HTMLCanvasElement;\n\t\tthis.obstacleCanvas.width = width;\n\t\tthis.obstacleCanvas.height = height;\n\t\tobstacles.forEach((obstacle) => {\n\t\t\tobstacle.draw(this.obstacleCanvas.getContext('2d') as CanvasRenderingContext2D);\n\t\t});\n\t}\n\n\tpublic clearObstacles(): void {\n\t\tconst context = this.obstacleCanvas.getContext('2d');\n\t\tif (context) {\n\t\t\tcontext.clearRect(0, 0, this.obstacleCanvas.width, this.obstacleCanvas.height);\n\t\t}\n\t\tthis.obstacles = [];\n\t}\n\n\tprivate resizeCanvas(): void {}\n}\n","export class Reticule {\n\tprotected color: string;\n\tprotected dashPattern: [number, number]; // [dashLengthInPixels, spaceLengthInPixels]\n\tprotected renderReticule: boolean;\n\tprotected tankSize: number;\n\tprotected reticuleWidth = 5;\n\n\tconstructor(dashPattern: [number, number], color: string, renderReticule: boolean, tankSize: number) {\n\t\tthis.color = color;\n\t\tthis.dashPattern = dashPattern;\n\t\tthis.renderReticule = renderReticule;\n\t\tthis.tankSize = tankSize;\n\t}\n\n\tpublic draw(\n\t\tcontext: CanvasRenderingContext2D,\n\t\ttankXPos: number,\n\t\ttankYPos: number,\n\t\tmouseXPos: number,\n\t\tmouseYpos: number\n\t): void {\n\t\tif (this.renderReticule) {\n\t\t\tcontext.strokeStyle = this.color;\n\t\t\tcontext.setLineDash(this.dashPattern);\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(tankXPos + this.tankSize / 2, tankYPos + this.tankSize / 2);\n\t\t\tcontext.lineTo(mouseXPos, mouseYpos);\n\t\t\tcontext.lineWidth = this.reticuleWidth;\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n}\n\nexport class NoReticule extends Reticule {\n\tconstructor() {\n\t\tsuper([0, 0], 'blue', false, 0);\n\t}\n}\n\nexport class SimplePlayerReticule extends Reticule {\n\tconstructor(tankSize: number) {\n\t\tsuper([5, 5], 'blue', true, tankSize);\n\t}\n}\n\nexport class CustomColorReticule extends Reticule {\n\tconstructor(tankSize: number, color: string) {\n\t\tsuper([4, 1], color, true, tankSize);\n\t}\n}\n\nexport class AdjustingCustomColorReticule extends Reticule {\n\tprivate maxReticuleLength: number;\n\n\tconstructor(tankSize: number, color: string, maxReticuleLength: number) {\n\t\tsuper([1, 1], color, true, tankSize);\n\t\tthis.maxReticuleLength = maxReticuleLength;\n\t}\n\n\toverride draw(\n\t\tcontext: CanvasRenderingContext2D,\n\t\ttankXPosition: number,\n\t\ttankYPosition: number,\n\t\tmouseXPosition: number,\n\t\tmouseYPosition: number\n\t): void {\n\t\tconst xDist = mouseXPosition - tankXPosition;\n\t\tconst yDist = mouseYPosition - tankYPosition;\n\t\tconst distance = Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));\n\t\tconst distanceToMaxDistanceRatio = distance / this.maxReticuleLength;\n\t\tconst distanceToMaxDistanceRatioInverse = 1 - distanceToMaxDistanceRatio;\n\t\tconst dashLength = distanceToMaxDistanceRatio * 10 + 2;\n\t\tconst spaceLength = distanceToMaxDistanceRatioInverse * 10 + 5;\n\n\t\tif (this.renderReticule) {\n\t\t\tcontext.strokeStyle = this.color;\n\t\t\tcontext.setLineDash([dashLength, spaceLength]);\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(tankXPosition + this.tankSize / 2, tankYPosition + this.tankSize / 2);\n\t\t\tcontext.lineTo(mouseXPosition, mouseYPosition);\n\t\t\tcontext.lineWidth = this.reticuleWidth;\n\t\t\tcontext.stroke();\n\n\t\t\tcontext.setLineDash([]);\n\t\t\tconst xLength = 10;\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(mouseXPosition - xLength, mouseYPosition - xLength);\n\t\t\tcontext.lineTo(mouseXPosition + xLength, mouseYPosition + xLength);\n\t\t\tcontext.stroke();\n\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(mouseXPosition - xLength, mouseYPosition + xLength);\n\t\t\tcontext.lineTo(mouseXPosition + xLength, mouseYPosition - xLength);\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n}\n","import { Ammunition } from '../Ammunition';\nimport { AudioManager } from '../AudioManager';\nimport { Bomb } from '../Bomb';\nimport { NavigationGrid, Node } from '../NavigationGrid';\nimport { ObstacleCanvas } from '../ObstacleCanvas';\nimport { Reticule } from '../Reticule';\nimport { Direction, Tank } from './Tank';\n\nexport class EnemyTank extends Tank {\n\tpublic navigationGrid: NavigationGrid;\n\tpublic aggressionFactor = 15; // Distance tank should maintain from its target\n\tpublic currentNode: Node;\n\tpublic path: Node[] | null = [];\n\tpublic pathRecaculationInterval = 60;\n\tpublic drawNavigationGrid = false;\n\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\treticule: Reticule,\n\t\txPos: number,\n\t\tyPos: number,\n\t\tspeed: number,\n\t\tsize: number,\n\t\taggressionFactor: number,\n\t\tcolor: string,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\tammunition: Ammunition[],\n\t\tbombs: Bomb[],\n\t\tnavigationGrid: NavigationGrid,\n\t\taudioManager: AudioManager\n\t) {\n\t\tsuper(canvas, reticule, xPos, yPos, speed, size, color, obstacleCanvas, ammunition, bombs, audioManager);\n\t\tthis.aggressionFactor = aggressionFactor;\n\t\tthis.navigationGrid = navigationGrid;\n\t\tthis.currentNode = this.navigationGrid.getNodeFromTank(this);\n\t}\n\n\tpublic override draw(context: CanvasRenderingContext2D): void {\n\t\tif (this.drawNavigationGrid) {\n\t\t\tcontext.lineWidth = 1;\n\t\t\tfor (let i = 0; i <= this.navigationGrid.gridYLength; i++) {\n\t\t\t\tcontext.fillStyle = 'blue';\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(0, i * this.navigationGrid.gridCellWidth);\n\t\t\t\tcontext.lineTo(\n\t\t\t\t\tthis.navigationGrid.gridXLength * this.navigationGrid.gridCellWidth,\n\t\t\t\t\ti * this.navigationGrid.gridCellWidth\n\t\t\t\t);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t\tfor (let j = 0; j <= this.navigationGrid.gridXLength; j++) {\n\t\t\t\tcontext.fillStyle = 'blue';\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(j * this.navigationGrid.gridCellWidth, 0);\n\t\t\t\tcontext.lineTo(\n\t\t\t\t\tj * this.navigationGrid.gridCellWidth,\n\t\t\t\t\tthis.navigationGrid.gridXLength * this.navigationGrid.gridCellWidth\n\t\t\t\t);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t\tcontext.fillStyle = this.color;\n\t\t\tthis.path?.forEach((value: Node, index: number, array: Node[]) => {\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.arc(\n\t\t\t\t\tvalue.x * this.navigationGrid.gridCellWidth + this.navigationGrid.gridCellWidth / 2,\n\t\t\t\t\tvalue.y * this.navigationGrid.gridCellWidth + this.navigationGrid.gridCellWidth / 2,\n\t\t\t\t\t5,\n\t\t\t\t\t0,\n\t\t\t\t\t2 * Math.PI\n\t\t\t\t);\n\t\t\t\tcontext.fill();\n\t\t\t});\n\t\t}\n\t\tsuper.draw(context);\n\t}\n\n\tpublic override updatePosition(playerTank: Tank): void {\n\t\tthis.pathRecaculationInterval -= 1;\n\t\tif (this.path == null || this.path.length == 0 || this.pathRecaculationInterval == 0) {\n\t\t\tthis.navigationGrid.reset();\n\t\t\tconst startNode: Node = this.navigationGrid.getNodeFromTank(this);\n\t\t\tconst targetNode: Node = this.navigationGrid.getNodeFromTank(playerTank);\n\t\t\tconst destinationNode: Node = this.navigationGrid.getRandomNodeInRadiusOfTarget(\n\t\t\t\ttargetNode,\n\t\t\t\tthis.aggressionFactor\n\t\t\t);\n\t\t\tthis.path = this.navigationGrid.aStar(startNode, destinationNode);\n\t\t\tthis.pathRecaculationInterval = 60;\n\t\t\tif (this.path == null) {\n\t\t\t\tconsole.log(`Path is null`);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.currentNode = this.navigationGrid.getNodeFromTank(this);\n\t\t\tconst dx = this.path[0].x - this.currentNode.x;\n\t\t\tconst dy = this.path[0].y - this.currentNode.y;\n\n\t\t\tif (this.wasLastMoveBlocked && this.consecutiveDirectionMoves > 2) {\n\t\t\t\tconst randomDirection: Direction = this.getRandomDirection();\n\t\t\t\tthis.moveInCardinalDirection(randomDirection);\n\t\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t\t\tconst randomNumber: number = Math.random();\n\t\t\t\tif (dx === 1 && dy === 0) {\n\t\t\t\t\tif (randomNumber < 0.5) {\n\t\t\t\t\t\tthis.moveSouthEast();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.moveNorthEast();\n\t\t\t\t\t}\n\t\t\t\t} else if (dx === -1 && dy === 0) {\n\t\t\t\t\tif (randomNumber < 0.5) {\n\t\t\t\t\t\tthis.moveNorthWest();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.moveSouthWest();\n\t\t\t\t\t}\n\t\t\t\t} else if (dx === 0 && dy === 1) {\n\t\t\t\t\tif (randomNumber < 0.5) {\n\t\t\t\t\t\tthis.moveSouthEast();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.moveSouthWest();\n\t\t\t\t\t}\n\t\t\t\t} else if (dx === 0 && dy === -1) {\n\t\t\t\t\tif (randomNumber < 0.5) {\n\t\t\t\t\t\tthis.moveNorthWest();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.moveNorthEast();\n\t\t\t\t\t}\n\t\t\t\t} else if (dx === 1 && dy === 1) {\n\t\t\t\t\tif (randomNumber < 0.5) {\n\t\t\t\t\t\tthis.moveSouth();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.moveEast();\n\t\t\t\t\t}\n\t\t\t\t} else if (dx === 1 && dy === -1) {\n\t\t\t\t\tif (randomNumber < 0.5) {\n\t\t\t\t\t\tthis.moveNorth();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.moveEast();\n\t\t\t\t\t}\n\t\t\t\t} else if (dx === -1 && dy === 1) {\n\t\t\t\t\tif (randomNumber < 0.5) {\n\t\t\t\t\t\tthis.moveSouth();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.moveWest();\n\t\t\t\t\t}\n\t\t\t\t} else if (dx === -1 && dy === -1) {\n\t\t\t\t\tif (randomNumber < 0.5) {\n\t\t\t\t\t\tthis.moveNorth();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.moveWest();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (dx === 1 && dy === 0) {\n\t\t\t\t\tthis.moveEast();\n\t\t\t\t} else if (dx === -1 && dy === 0) {\n\t\t\t\t\tthis.moveWest();\n\t\t\t\t} else if (dx === 0 && dy === 1) {\n\t\t\t\t\tthis.moveSouth();\n\t\t\t\t} else if (dx === 0 && dy === -1) {\n\t\t\t\t\tthis.moveNorth();\n\t\t\t\t} else if (dx === 1 && dy === 1) {\n\t\t\t\t\tthis.moveSouthEast();\n\t\t\t\t} else if (dx === 1 && dy === -1) {\n\t\t\t\t\tthis.moveNorthEast();\n\t\t\t\t} else if (dx === -1 && dy === 1) {\n\t\t\t\t\tthis.moveSouthWest();\n\t\t\t\t} else if (dx === -1 && dy === -1) {\n\t\t\t\t\tthis.moveNorthWest();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.path[0].x == this.currentNode.x && this.path[0].y == this.currentNode.y) {\n\t\t\t\tthis.path.splice(0, 1);\n\t\t\t}\n\t\t}\n\n\t\tthis.xLeft = this.xPos;\n\t\tthis.xRight = this.xPos + this.size;\n\t\tthis.yTop = this.yPos;\n\t\tthis.yBottom = this.yPos + this.size;\n\t}\n}\n","import { Ammunition } from '../Ammunition';\nimport { AudioManager } from '../AudioManager';\nimport { Bomb } from '../Bomb';\nimport { NavigationGrid } from '../NavigationGrid';\nimport { ObstacleCanvas } from '../ObstacleCanvas';\nimport { NoReticule } from '../Reticule';\nimport { EnemyTank } from './EnemyTank';\nimport { Tank } from './Tank';\n\nexport class BomberTank extends EnemyTank {\n\tpublic minTimeBetweenShotsMS = 20000;\n\tpublic timeBetweenShotsIsElapsed = true;\n\tpublic minTimeBetweenBombPlantsMS = 1000;\n\tpublic timeBetweenPlantsIsElapsed = true;\n\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\txPos: number,\n\t\tyPos: number,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\tammunition: Ammunition[],\n\t\tbombs: Bomb[],\n\t\tnavigationGrid: NavigationGrid,\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst bomberTankSpeed = 2;\n\t\tconst bomberTankSize = 30;\n\t\tconst bomberTankAggressionFactor = 4;\n\t\tconst bomberTankColor = 'yellow';\n\t\tsuper(\n\t\t\tcanvas,\n\t\t\tnew NoReticule(),\n\t\t\txPos,\n\t\t\tyPos,\n\t\t\tbomberTankSpeed,\n\t\t\tbomberTankSize,\n\t\t\tbomberTankAggressionFactor,\n\t\t\tbomberTankColor,\n\t\t\tobstacleCanvas,\n\t\t\tammunition,\n\t\t\tbombs,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t}\n\n\tpublic override plantBomb(playerTank: Tank): void {\n\t\tif (this.timeBetweenPlantsIsElapsed && !this.isDestroyed) {\n\t\t\tconst availableBombIndex = this.bombs.findIndex((bomb) => bomb.isDestroyed);\n\t\t\tif (availableBombIndex !== -1) {\n\t\t\t\tthis.bombs[availableBombIndex].xPos = this.xPos + this.size / 2;\n\t\t\t\tthis.bombs[availableBombIndex].yPos = this.yPos + this.size / 2;\n\t\t\t\tconst willHitPlayerTank: boolean = this.bombs[availableBombIndex].isPointInsideBlastRadius(\n\t\t\t\t\tplayerTank.xPos + playerTank.tankMidpoint,\n\t\t\t\t\tplayerTank.yPos + playerTank.tankMidpoint\n\t\t\t\t);\n\t\t\t\tif (willHitPlayerTank) {\n\t\t\t\t\tthis.bombs[availableBombIndex].isDestroyed = false;\n\t\t\t\t\tthis.bombs[availableBombIndex].setFuse();\n\t\t\t\t\tthis.timeBetweenPlantsIsElapsed = false;\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.timeBetweenPlantsIsElapsed = true;\n\t\t\t\t\t}, this.minTimeBetweenBombPlantsMS);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic override shoot(playerTank: Tank): void {\n\t\tif (this.timeBetweenShotsIsElapsed && !this.isDestroyed) {\n\t\t\tconst availableAmmunitionIndex = this.ammunition.findIndex((ammunition) => ammunition.isDestroyed);\n\t\t\tif (availableAmmunitionIndex !== -1) {\n\t\t\t\tthis.ammunition[availableAmmunitionIndex].reload(\n\t\t\t\t\tthis.xPos + this.size / 2,\n\t\t\t\t\tthis.yPos + this.size / 2,\n\t\t\t\t\tthis.aimAngle,\n\t\t\t\t\ttrue,\n\t\t\t\t\tthis.canvasWidth,\n\t\t\t\t\tthis.canvasHeight\n\t\t\t\t);\n\t\t\t\tconst willHitPlayerTank: boolean = this.ammunition[availableAmmunitionIndex].willHitPlayerTank(\n\t\t\t\t\tthis.obstacleCanvas,\n\t\t\t\t\tplayerTank\n\t\t\t\t);\n\t\t\t\tif (willHitPlayerTank) {\n\t\t\t\t\tthis.ammunition[availableAmmunitionIndex].isDestroyed = false;\n\t\t\t\t\tthis.timeBetweenShotsIsElapsed = false;\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.timeBetweenShotsIsElapsed = true;\n\t\t\t\t\t}, this.minTimeBetweenShotsMS);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic override aim(mouseXPos: number, mouseYpos: number, playerTank: Tank): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dx: number = playerTank.xPos + playerTank.size / 2 - this.xPos - this.tankMidpoint;\n\t\tconst dy: number = playerTank.yPos + playerTank.size / 2 - this.yPos - this.tankMidpoint;\n\t\tlet theta = Math.atan2(dy, dx);\n\t\tif (theta < 0) {\n\t\t\ttheta += 2 * Math.PI;\n\t\t}\n\t\tthis.aimAngle = theta;\n\t}\n}\n","import { KeyStates } from '../../utils/KeyStates';\nimport { Ammunition, PlayerAmmunition } from '../Ammunition';\nimport { AudioFile, AudioManager } from '../AudioManager';\nimport { Bomb, PlayerBomb } from '../Bomb';\nimport { ObstacleCanvas } from '../ObstacleCanvas';\nimport { AdjustingCustomColorReticule, Reticule } from '../Reticule';\nimport { Tank } from './Tank';\n\nexport class PlayerTank extends Tank {\n\tpublic keyStates: KeyStates = {\n\t\tArrowUp: false,\n\t\tArrowDown: false,\n\t\tArrowLeft: false,\n\t\tArrowRight: false,\n\t\tw: false,\n\t\ta: false,\n\t\ts: false,\n\t\td: false,\n\t\tW: false,\n\t\tA: false,\n\t\tS: false,\n\t\tD: false,\n\t};\n\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\treticule: Reticule,\n\t\txPos: number,\n\t\tyPos: number,\n\t\tspeed: number,\n\t\tsize: number,\n\t\tcolor: string,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\tammunition: Ammunition[],\n\t\tbombs: Bomb[],\n\t\taudioManager: AudioManager\n\t) {\n\t\tsuper(canvas, reticule, xPos, yPos, speed, size, color, obstacleCanvas, ammunition, bombs, audioManager);\n\n\t\tdocument.addEventListener('keydown', (event: KeyboardEvent) => {\n\t\t\tif (this.keyStates.hasOwnProperty(event.key)) {\n\t\t\t\tthis.keyStates[event.key] = true;\n\t\t\t}\n\t\t});\n\n\t\tdocument.addEventListener('keydown', (event: KeyboardEvent) => {\n\t\t\tif (event.code === 'Space') {\n\t\t\t\tthis.plantBomb(this);\n\t\t\t}\n\t\t});\n\n\t\tdocument.addEventListener('keyup', (event: KeyboardEvent) => {\n\t\t\tif (this.keyStates.hasOwnProperty(event.key)) {\n\t\t\t\tthis.keyStates[event.key] = false;\n\t\t\t}\n\t\t});\n\n\t\tcanvas.addEventListener('mousemove', (event: MouseEvent) => {\n\t\t\tthis.aimXPos = event.clientX - this.xOffset;\n\t\t\tthis.aimYPos = event.clientY - this.yOffset;\n\t\t});\n\n\t\tcanvas.addEventListener('click', (event: MouseEvent) => {\n\t\t\tthis.shoot(this);\n\t\t});\n\t}\n\n\tpublic override updatePosition(playerTank: Tank): void {\n\t\t// Move the tank\n\t\tif (this.up() && this.right()) {\n\t\t\tthis.moveNorthEast();\n\t\t} else if (this.up() && this.left()) {\n\t\t\tthis.moveNorthWest();\n\t\t} else if (this.down() && this.right()) {\n\t\t\tthis.moveSouthEast();\n\t\t} else if (this.down() && this.left()) {\n\t\t\tthis.moveSouthWest();\n\t\t} else if (this.up()) {\n\t\t\tthis.moveNorth();\n\t\t} else if (this.down()) {\n\t\t\tthis.moveSouth();\n\t\t} else if (this.left()) {\n\t\t\tthis.moveWest();\n\t\t} else if (this.right()) {\n\t\t\tthis.moveEast();\n\t\t}\n\n\t\tthis.xLeft = this.xPos;\n\t\tthis.xRight = this.xPos + this.size;\n\t\tthis.yTop = this.yPos;\n\t\tthis.yBottom = this.yPos + this.size;\n\t}\n\n\tpublic override plantBomb(playerTank: Tank): void {\n\t\tif (!this.isDestroyed) {\n\t\t\tconst availableBombIndex = this.bombs.findIndex((bomb) => bomb.isDestroyed);\n\t\t\tif (availableBombIndex !== -1) {\n\t\t\t\tthis.bombs[availableBombIndex].xPos = this.xPos + this.size / 2;\n\t\t\t\tthis.bombs[availableBombIndex].yPos = this.yPos + this.size / 2;\n\t\t\t\tthis.bombs[availableBombIndex].isDestroyed = false;\n\t\t\t\tthis.bombs[availableBombIndex].setFuse();\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic override aim(mouseXPos: number, mouseYpos: number, playerTank: Tank): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tconst dx: number = mouseXPos - this.xPos - this.tankMidpoint;\n\t\tconst dy: number = mouseYpos - this.yPos - this.tankMidpoint;\n\t\tlet theta = Math.atan2(dy, dx);\n\t\tif (theta < 0) {\n\t\t\ttheta += 2 * Math.PI;\n\t\t}\n\t\tthis.aimAngle = theta;\n\t}\n\n\tpublic override shoot(playerTank: Tank): void {\n\t\tif (!this.isDestroyed) {\n\t\t\tconst availableAmmunitionIndex = this.ammunition.findIndex((ammunition) => ammunition.isDestroyed);\n\t\t\tif (availableAmmunitionIndex !== -1) {\n\t\t\t\tthis.audioManager.play(AudioFile.TANK_FIRE);\n\t\t\t\tthis.ammunition[availableAmmunitionIndex] = new PlayerAmmunition(\n\t\t\t\t\tthis.xPos + this.size / 2,\n\t\t\t\t\tthis.yPos + this.size / 2,\n\t\t\t\t\tthis.aimAngle,\n\t\t\t\t\tthis.canvasWidth,\n\t\t\t\t\tthis.canvasHeight,\n\t\t\t\t\tfalse,\n\t\t\t\t\tthis.audioManager\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic up(): boolean {\n\t\treturn this.keyStates.ArrowUp || this.keyStates.w || this.keyStates.W;\n\t}\n\n\tpublic down(): boolean {\n\t\treturn this.keyStates.ArrowDown || this.keyStates.s || this.keyStates.S;\n\t}\n\n\tpublic left(): boolean {\n\t\treturn this.keyStates.ArrowLeft || this.keyStates.a || this.keyStates.A;\n\t}\n\n\tpublic right(): boolean {\n\t\treturn this.keyStates.ArrowRight || this.keyStates.d || this.keyStates.D;\n\t}\n}\n\nexport class DefaultPlayerTank extends PlayerTank {\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\txPos: number,\n\t\tyPos: number,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst defaultPlayerTankSpeed = 2;\n\t\tconst defaultPlayerTankSize = 30;\n\t\tconst defaultPlayerTankColor = '#6384a1';\n\t\tconst ammunition: Ammunition[] = [\n\t\t\tnew PlayerAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew PlayerAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew PlayerAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew PlayerAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew PlayerAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t];\n\t\tconst bombs: Bomb[] = [new PlayerBomb(0, 0, true, audioManager), new PlayerBomb(0, 0, true, audioManager)];\n\t\tsuper(\n\t\t\tcanvas,\n\t\t\tnew AdjustingCustomColorReticule(defaultPlayerTankSize, defaultPlayerTankColor, canvas.width),\n\t\t\txPos,\n\t\t\tyPos,\n\t\t\tdefaultPlayerTankSpeed,\n\t\t\tdefaultPlayerTankSize,\n\t\t\tdefaultPlayerTankColor,\n\t\t\tobstacleCanvas,\n\t\t\tammunition,\n\t\t\tbombs,\n\t\t\taudioManager\n\t\t);\n\t}\n}\n","import { Ammunition } from '../Ammunition';\nimport { AudioManager } from '../AudioManager';\nimport { Bomb } from '../Bomb';\nimport { NavigationGrid } from '../NavigationGrid';\nimport { ObstacleCanvas } from '../ObstacleCanvas';\nimport { NoReticule } from '../Reticule';\nimport { EnemyTank } from './EnemyTank';\nimport { Tank } from './Tank';\n\nexport class SimpleMovingTank extends EnemyTank {\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\txPos: number,\n\t\tyPos: number,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\tammunition: Ammunition[],\n\t\tbombs: Bomb[],\n\t\tnavigationGrid: NavigationGrid,\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst simpleMovingTankSpeed = 1.2;\n\t\tconst simpleMovingTankSize = 30;\n\t\tconst simpleMovingTankAggressionFactor = 15;\n\t\tconst simpleMovingTankColor = '#fd8a8a';\n\t\tsuper(\n\t\t\tcanvas,\n\t\t\tnew NoReticule(),\n\t\t\txPos,\n\t\t\tyPos,\n\t\t\tsimpleMovingTankSpeed,\n\t\t\tsimpleMovingTankSize,\n\t\t\tsimpleMovingTankAggressionFactor,\n\t\t\tsimpleMovingTankColor,\n\t\t\tobstacleCanvas,\n\t\t\tammunition,\n\t\t\tbombs,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t}\n\n\tpublic override shoot(playerTank: Tank): void {\n\t\tconst availableAmmunitionIndex = this.ammunition.findIndex((ammunition) => ammunition.isDestroyed);\n\t\tif (availableAmmunitionIndex !== -1) {\n\t\t\tthis.ammunition[availableAmmunitionIndex].reload(\n\t\t\t\tthis.xPos + this.size / 2,\n\t\t\t\tthis.yPos + this.size / 2,\n\t\t\t\tthis.aimAngle,\n\t\t\t\ttrue,\n\t\t\t\tthis.canvasWidth,\n\t\t\t\tthis.canvasHeight\n\t\t\t);\n\t\t\tconst willHitPlayerTank: boolean = this.ammunition[availableAmmunitionIndex].willHitPlayerTank(\n\t\t\t\tthis.obstacleCanvas,\n\t\t\t\tplayerTank\n\t\t\t);\n\t\t\tif (willHitPlayerTank) {\n\t\t\t\tthis.ammunition[availableAmmunitionIndex].isDestroyed = false;\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic override aim(mouseXPos: number, mouseYpos: number, playerTank: Tank): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dx: number = playerTank.xPos + playerTank.size / 2 - this.xPos - this.tankMidpoint;\n\t\tconst dy: number = playerTank.yPos + playerTank.size / 2 - this.yPos - this.tankMidpoint;\n\t\tlet theta = Math.atan2(dy, dx);\n\t\tif (theta < 0) {\n\t\t\ttheta += 2 * Math.PI;\n\t\t}\n\t\tthis.aimAngle = theta;\n\t}\n}\n","import { Ammunition } from '../Ammunition';\nimport { AudioManager } from '../AudioManager';\nimport { Bomb } from '../Bomb';\nimport { NavigationGrid } from '../NavigationGrid';\nimport { ObstacleCanvas } from '../ObstacleCanvas';\nimport { NoReticule } from '../Reticule';\nimport { EnemyTank } from './EnemyTank';\nimport { Tank } from './Tank';\n\nexport class StationaryRandomAimTank extends EnemyTank {\n\tpublic aimAngleChangeAmount = 0;\n\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\txPos: number,\n\t\tyPos: number,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\tammunition: Ammunition[],\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst stationaryRandomAimTankSpeed = 0;\n\t\tconst stationaryRandomAimTankSize = 30;\n\t\tconst stationaryRandomAimTankAggressionFactor = 0;\n\t\tconst fastTankColor = '#ebe1b9';\n\t\tconst bombs: Bomb[] = [];\n\t\tconst navigationGrid: NavigationGrid = new NavigationGrid();\n\t\tsuper(\n\t\t\tcanvas,\n\t\t\tnew NoReticule(),\n\t\t\txPos,\n\t\t\tyPos,\n\t\t\tstationaryRandomAimTankSpeed,\n\t\t\tstationaryRandomAimTankSize,\n\t\t\tstationaryRandomAimTankAggressionFactor,\n\t\t\tfastTankColor,\n\t\t\tobstacleCanvas,\n\t\t\tammunition,\n\t\t\tbombs,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t}\n\n\tprivate getAngleChangeAmount(): number {\n\t\tconst max = 360;\n\t\tconst min = -360;\n\t\tconst randomAmount: number = Math.floor(Math.random() * (max - min + 1)) + min;\n\t\treturn randomAmount;\n\t}\n\n\tpublic override updatePosition(playerTank: Tank): void {\n\t\treturn;\n\t}\n\n\tpublic override shoot(playerTank: Tank): void {\n\t\tconst availableAmmunitionIndex = this.ammunition.findIndex((ammunition) => ammunition.isDestroyed);\n\t\tif (availableAmmunitionIndex !== -1) {\n\t\t\tthis.ammunition[availableAmmunitionIndex].reload(\n\t\t\t\tthis.xPos + this.size / 2,\n\t\t\t\tthis.yPos + this.size / 2,\n\t\t\t\tthis.aimAngle,\n\t\t\t\ttrue,\n\t\t\t\tthis.canvasWidth,\n\t\t\t\tthis.canvasHeight\n\t\t\t);\n\t\t\tconst willHitPlayerTank: boolean = this.ammunition[availableAmmunitionIndex].willHitPlayerTank(\n\t\t\t\tthis.obstacleCanvas,\n\t\t\t\tplayerTank\n\t\t\t);\n\t\t\tif (willHitPlayerTank) {\n\t\t\t\tthis.ammunition[availableAmmunitionIndex].isDestroyed = false;\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic override aim(mouseXPos: number, mouseYpos: number, playerTank: Tank): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.aimAngleChangeAmount > 0) {\n\t\t\tthis.aimAngle += 0.01;\n\t\t\tthis.aimAngleChangeAmount -= 1;\n\t\t} else if (this.aimAngleChangeAmount < 0) {\n\t\t\tthis.aimAngle -= 0.01;\n\t\t\tthis.aimAngleChangeAmount += 1;\n\t\t} else {\n\t\t\tthis.aimAngleChangeAmount = this.getAngleChangeAmount();\n\t\t}\n\t}\n}\n","import { Ammunition, BasicAIAmmunition } from '../Ammunition';\nimport { AudioManager } from '../AudioManager';\nimport { Bomb } from '../Bomb';\nimport { NavigationGrid } from '../NavigationGrid';\nimport { ObstacleCanvas } from '../ObstacleCanvas';\nimport { NoReticule } from '../Reticule';\nimport { EnemyTank } from './EnemyTank';\nimport { Tank } from './Tank';\n\nexport class StationaryTank extends EnemyTank {\n\tminTimeBetweenShotsMS = 5000;\n\tcanTakeShot = true;\n\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\txPos: number,\n\t\tyPos: number,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst stationaryTankSpeed = 0;\n\t\tconst stationaryTankSize = 30;\n\t\tconst stationaryTankAggressionFactor = 0;\n\t\tconst stationaryTankColor = '#5784ba';\n\t\tconst ammunition: Ammunition[] = [new BasicAIAmmunition(0, 0, 0, 0, 0, true, audioManager)];\n\t\tconst bombs: Bomb[] = [];\n\t\tconst navigationGrid: NavigationGrid = new NavigationGrid();\n\t\tsuper(\n\t\t\tcanvas,\n\t\t\tnew NoReticule(),\n\t\t\txPos,\n\t\t\tyPos,\n\t\t\tstationaryTankSpeed,\n\t\t\tstationaryTankSize,\n\t\t\tstationaryTankAggressionFactor,\n\t\t\tstationaryTankColor,\n\t\t\tobstacleCanvas,\n\t\t\tammunition,\n\t\t\tbombs,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t}\n\n\tpublic override updatePosition(playerTank: Tank): void {\n\t\treturn;\n\t}\n\n\tpublic override shoot(): void {\n\t\tif (!this.canTakeShot || this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tconst availableAmmunitionIndex = this.ammunition.findIndex((ammunition) => ammunition.isDestroyed);\n\t\tif (availableAmmunitionIndex !== -1) {\n\t\t\tthis.ammunition[availableAmmunitionIndex] = new BasicAIAmmunition(\n\t\t\t\tthis.xPos + this.size / 2,\n\t\t\t\tthis.yPos + this.size / 2,\n\t\t\t\tthis.aimAngle,\n\t\t\t\tthis.canvasWidth,\n\t\t\t\tthis.canvasHeight,\n\t\t\t\tfalse,\n\t\t\t\tthis.audioManager\n\t\t\t);\n\t\t\tthis.canTakeShot = false;\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.canTakeShot = true;\n\t\t\t}, this.minTimeBetweenShotsMS);\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic override aim(mouseXPos: number, mouseYpos: number, playerTank: Tank): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dx: number = playerTank.xPos + playerTank.size / 2 - this.xPos - this.tankMidpoint;\n\t\tconst dy: number = playerTank.yPos + playerTank.size / 2 - this.yPos - this.tankMidpoint;\n\t\tlet theta = Math.atan2(dy, dx);\n\t\tif (theta < 0) {\n\t\t\ttheta += 2 * Math.PI;\n\t\t}\n\t\tthis.aimAngle = theta;\n\t}\n}\n","import { Ammunition } from '../Ammunition';\nimport { AudioManager } from '../AudioManager';\nimport { Bomb } from '../Bomb';\nimport { NavigationGrid } from '../NavigationGrid';\nimport { ObstacleCanvas } from '../ObstacleCanvas';\nimport { NoReticule } from '../Reticule';\nimport { EnemyTank } from './EnemyTank';\nimport { Tank } from './Tank';\n\nexport class SuperBomberMovingTank extends EnemyTank {\n\tpublic minTimeBetweenShotsMS = 1000;\n\tpublic timeBetweenShotsIsElapsed = true;\n\tpublic minTimeBetweenBombPlantsMS = 1000;\n\tpublic timeBetweenPlantsIsElapsed = true;\n\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\txPos: number,\n\t\tyPos: number,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\tammunition: Ammunition[],\n\t\tbombs: Bomb[],\n\t\tnavigationGrid: NavigationGrid,\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst superBomberMovingTankSpeed = 2.2;\n\t\tconst superBomberMovingTankSize = 30;\n\t\tconst superBomberMovingTankAggressionFactor = 5;\n\t\tconst superBomberMovingTankColor = 'pink';\n\t\tsuper(\n\t\t\tcanvas,\n\t\t\tnew NoReticule(),\n\t\t\txPos,\n\t\t\tyPos,\n\t\t\tsuperBomberMovingTankSpeed,\n\t\t\tsuperBomberMovingTankSize,\n\t\t\tsuperBomberMovingTankAggressionFactor,\n\t\t\tsuperBomberMovingTankColor,\n\t\t\tobstacleCanvas,\n\t\t\tammunition,\n\t\t\tbombs,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t}\n\n\tpublic override plantBomb(playerTank: Tank): void {\n\t\tif (this.timeBetweenPlantsIsElapsed && !this.isDestroyed) {\n\t\t\tconst availableBombIndex = this.bombs.findIndex((bomb) => bomb.isDestroyed);\n\t\t\tif (availableBombIndex !== -1) {\n\t\t\t\tthis.bombs[availableBombIndex].xPos = this.xPos + this.size / 2;\n\t\t\t\tthis.bombs[availableBombIndex].yPos = this.yPos + this.size / 2;\n\t\t\t\tconst willHitPlayerTank: boolean = this.bombs[availableBombIndex].isPointInsideBlastRadius(\n\t\t\t\t\tplayerTank.xPos + playerTank.tankMidpoint,\n\t\t\t\t\tplayerTank.yPos + playerTank.tankMidpoint\n\t\t\t\t);\n\t\t\t\tif (willHitPlayerTank) {\n\t\t\t\t\tthis.bombs[availableBombIndex].isDestroyed = false;\n\t\t\t\t\tthis.bombs[availableBombIndex].setFuse();\n\t\t\t\t\tthis.timeBetweenPlantsIsElapsed = false;\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.timeBetweenPlantsIsElapsed = true;\n\t\t\t\t\t}, this.minTimeBetweenBombPlantsMS);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic override shoot(playerTank: Tank): void {\n\t\tif (this.timeBetweenShotsIsElapsed && !this.isDestroyed) {\n\t\t\tconst availableAmmunitionIndex = this.ammunition.findIndex((ammunition) => ammunition.isDestroyed);\n\t\t\tif (availableAmmunitionIndex !== -1) {\n\t\t\t\tthis.ammunition[availableAmmunitionIndex].reload(\n\t\t\t\t\tthis.xPos + this.size / 2,\n\t\t\t\t\tthis.yPos + this.size / 2,\n\t\t\t\t\tthis.aimAngle,\n\t\t\t\t\ttrue,\n\t\t\t\t\tthis.canvasWidth,\n\t\t\t\t\tthis.canvasHeight\n\t\t\t\t);\n\t\t\t\tconst willHitPlayerTank: boolean = this.ammunition[availableAmmunitionIndex].willHitPlayerTank(\n\t\t\t\t\tthis.obstacleCanvas,\n\t\t\t\t\tplayerTank\n\t\t\t\t);\n\t\t\t\tif (willHitPlayerTank) {\n\t\t\t\t\tthis.ammunition[availableAmmunitionIndex].isDestroyed = false;\n\t\t\t\t\tthis.timeBetweenShotsIsElapsed = false;\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.timeBetweenShotsIsElapsed = true;\n\t\t\t\t\t}, this.minTimeBetweenShotsMS);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic override aim(mouseXPos: number, mouseYpos: number, playerTank: Tank): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dx: number = playerTank.xPos + playerTank.size / 2 - this.xPos - this.tankMidpoint;\n\t\tconst dy: number = playerTank.yPos + playerTank.size / 2 - this.yPos - this.tankMidpoint;\n\t\tlet theta = Math.atan2(dy, dx);\n\t\tif (theta < 0) {\n\t\t\ttheta += 2 * Math.PI;\n\t\t}\n\t\tthis.aimAngle = theta;\n\t}\n}\n","import { Ammunition, BasicAIAmmunition, SuperAIAmmunition } from './Ammunition';\nimport { AudioManager } from './AudioManager';\nimport { BasicBomb, Bomb, LoveBomb } from './Bomb';\nimport { GameCanvas } from './GameCanvas';\nimport { NavigationGrid } from './NavigationGrid';\nimport { Obstacle } from './Obstacle';\nimport { ObstacleCanvas } from './ObstacleCanvas';\nimport { BomberTank } from './tanks/BomberTank';\nimport { DefaultPlayerTank } from './tanks/PlayerTank';\nimport { SimpleMovingTank } from './tanks/SimpleMovingTank';\nimport { StationaryRandomAimTank } from './tanks/StationaryRandomAimTank';\nimport { StationaryTank } from './tanks/StationaryTank';\nimport { SuperBomberMovingTank } from './tanks/SuperBomberMovingTank';\n\nexport class Level {\n\tpublic gameCanvas: GameCanvas;\n\tpublic obstacleCanvas: ObstacleCanvas;\n\tpublic canvasWidth = 1000;\n\tpublic canvasHeight = 500;\n\tpublic audioManager: AudioManager;\n\n\tconstructor(obstacleCanvas: ObstacleCanvas, audioManager: AudioManager) {\n\t\tthis.obstacleCanvas = obstacleCanvas;\n\t\tthis.gameCanvas = new GameCanvas('#game-canvas', this.canvasWidth, this.canvasHeight, obstacleCanvas);\n\t\tthis.audioManager = audioManager;\n\t}\n\n\tpublic stop() {\n\t\tthis.gameCanvas.stop();\n\t}\n\n\tpublic start() {\n\t\tthis.gameCanvas.start();\n\t}\n}\n\nexport class Level1 extends Level {\n\tconstructor(audioManager: AudioManager) {\n\t\tconst obs: Obstacle = new Obstacle(300, 200, 40, 100);\n\t\tconst obstacleCanvas = new ObstacleCanvas('#obstacle-canvas', 1000, 500, [obs]);\n\t\tsuper(obstacleCanvas, audioManager);\n\t\tconst stationaryTank = new StationaryTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t900,\n\t\t\t240,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addEnemyTank(stationaryTank);\n\n\t\tconst playerTank = new DefaultPlayerTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t100,\n\t\t\t250,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addPlayerTank(playerTank);\n\t}\n}\n\nexport class Level2 extends Level {\n\tconstructor(audioManager: AudioManager) {\n\t\tconst obs: Obstacle = new Obstacle(300, 200, 40, 100);\n\t\tconst obstacleCanvas = new ObstacleCanvas('#obstacle-canvas', 1000, 500, [obs]);\n\t\tsuper(obstacleCanvas, audioManager);\n\n\t\tconst stationaryTank1 = new StationaryTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t100,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tconst stationaryTank2 = new StationaryTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t900,\n\t\t\t240,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tconst stationaryTank3 = new StationaryTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t400,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addEnemyTank(stationaryTank1);\n\t\tthis.gameCanvas.addEnemyTank(stationaryTank2);\n\t\tthis.gameCanvas.addEnemyTank(stationaryTank3);\n\n\t\tconst playerTank = new DefaultPlayerTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t100,\n\t\t\t250,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addPlayerTank(playerTank);\n\t}\n}\n\nexport class Level3 extends Level {\n\tconstructor(audioManager: AudioManager) {\n\t\tconst obs: Obstacle = new Obstacle(100, 100, 200, 100);\n\t\tconst obs2: Obstacle = new Obstacle(550, 200, 30, 200);\n\t\tconst obstacleCanvas = new ObstacleCanvas('#obstacle-canvas', 1000, 500, [obs, obs2]);\n\t\tsuper(obstacleCanvas, audioManager);\n\t\tconst superAmmo: Ammunition[] = [new SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager)];\n\t\tconst aiTank = new StationaryRandomAimTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t300,\n\t\t\tobstacleCanvas,\n\t\t\tsuperAmmo,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addEnemyTank(aiTank);\n\n\t\tconst playerTank = new DefaultPlayerTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t200,\n\t\t\t250,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addPlayerTank(playerTank);\n\t}\n}\n\nexport class Level4 extends Level {\n\tconstructor(audioManager: AudioManager) {\n\t\tconst obs: Obstacle = new Obstacle(250, 100, 600, 40);\n\t\tconst obs2: Obstacle = new Obstacle(100, 350, 600, 40);\n\t\tconst obstacleCanvas = new ObstacleCanvas('#obstacle-canvas', 1000, 500, [obs, obs2]);\n\t\tsuper(obstacleCanvas, audioManager);\n\t\tconst basicAmmo: Ammunition[] = [new BasicAIAmmunition(0, 0, 0, 0, 0, true, audioManager)];\n\t\tconst basicBomb: Bomb[] = [];\n\t\tconst navigationGrid: NavigationGrid = new NavigationGrid(this.gameCanvas, this.obstacleCanvas, false);\n\t\tconst aiTank = new SimpleMovingTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t900,\n\t\t\t50,\n\t\t\tobstacleCanvas,\n\t\t\tbasicAmmo,\n\t\t\tbasicBomb,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addEnemyTank(aiTank);\n\n\t\tconst playerTank = new DefaultPlayerTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t50,\n\t\t\t450,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addPlayerTank(playerTank);\n\t}\n}\n\nexport class Level5 extends Level {\n\tconstructor(audioManager: AudioManager) {\n\t\tconst obs: Obstacle = new Obstacle(100, 100, 200, 100);\n\t\tconst obs2: Obstacle = new Obstacle(700, 100, 30, 100);\n\t\tconst obs3: Obstacle = new Obstacle(700, 350, 30, 100);\n\t\tconst obstacleCanvas = new ObstacleCanvas('#obstacle-canvas', 1000, 500, [obs, obs2, obs3]);\n\t\tsuper(obstacleCanvas, audioManager);\n\t\tconst basicAmmo: Ammunition[] = [new BasicAIAmmunition(0, 0, 0, 0, 0, true, audioManager)];\n\t\tconst superAmmo: Ammunition[] = [new SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager)];\n\t\tconst basicBomb: Bomb[] = [];\n\t\tconst navigationGrid: NavigationGrid = new NavigationGrid(this.gameCanvas, this.obstacleCanvas, false);\n\t\tconst aiTank3 = new SimpleMovingTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t300,\n\t\t\tobstacleCanvas,\n\t\t\tbasicAmmo,\n\t\t\tbasicBomb,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t\tconst aiTank = new StationaryRandomAimTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t100,\n\t\t\tobstacleCanvas,\n\t\t\tsuperAmmo,\n\t\t\taudioManager\n\t\t);\n\t\tconst aiTank2 = new StationaryTank(this.gameCanvas.gameRenderer.canvas, 800, 200, obstacleCanvas, audioManager);\n\t\tthis.gameCanvas.addEnemyTank(aiTank3);\n\t\tthis.gameCanvas.addEnemyTank(aiTank);\n\t\tthis.gameCanvas.addEnemyTank(aiTank2);\n\n\t\tconst playerTank = new DefaultPlayerTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t200,\n\t\t\t250,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addPlayerTank(playerTank);\n\t}\n}\n\nexport class Level6 extends Level {\n\tconstructor(audioManager: AudioManager) {\n\t\tconst obs: Obstacle = new Obstacle(100, 100, 200, 100);\n\t\tconst obs2: Obstacle = new Obstacle(700, 100, 30, 300);\n\t\tconst obstacleCanvas = new ObstacleCanvas('#obstacle-canvas', 1000, 500, [obs, obs2]);\n\t\tsuper(obstacleCanvas, audioManager);\n\n\t\tconst basicBombs: Bomb[] = [\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t];\n\t\tconst basicBombs2: Bomb[] = [\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t];\n\t\tconst basicBombs3: Bomb[] = [\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t];\n\n\t\tconst navigationGrid: NavigationGrid = new NavigationGrid(this.gameCanvas, this.obstacleCanvas, false);\n\t\tconst navigationGrid2: NavigationGrid = new NavigationGrid(this.gameCanvas, this.obstacleCanvas, false);\n\t\tconst navigationGrid3: NavigationGrid = new NavigationGrid(this.gameCanvas, this.obstacleCanvas, false);\n\t\tconst aiTank = new BomberTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t100,\n\t\t\tobstacleCanvas,\n\t\t\t[new BasicAIAmmunition(0, 0, 0, 0, 0, true, audioManager)],\n\t\t\tbasicBombs,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t\tconst aiTank2 = new BomberTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t200,\n\t\t\tobstacleCanvas,\n\t\t\t[new BasicAIAmmunition(0, 0, 0, 0, 0, true, audioManager)],\n\t\t\tbasicBombs2,\n\t\t\tnavigationGrid2,\n\t\t\taudioManager\n\t\t);\n\t\tconst aiTank3 = new BomberTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t300,\n\t\t\tobstacleCanvas,\n\t\t\t[new BasicAIAmmunition(0, 0, 0, 0, 0, true, audioManager)],\n\t\t\tbasicBombs3,\n\t\t\tnavigationGrid3,\n\t\t\taudioManager\n\t\t);\n\n\t\tthis.gameCanvas.addEnemyTank(aiTank);\n\t\tthis.gameCanvas.addEnemyTank(aiTank2);\n\t\tthis.gameCanvas.addEnemyTank(aiTank3);\n\n\t\tconst playerTank = new DefaultPlayerTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t200,\n\t\t\t250,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addPlayerTank(playerTank);\n\t}\n}\n\nexport class Level7 extends Level {\n\tconstructor(audioManager: AudioManager) {\n\t\tconst obs: Obstacle = new Obstacle(700, 100, 30, 300);\n\t\tconst obstacleCanvas = new ObstacleCanvas('#obstacle-canvas', 1000, 500, [obs]);\n\t\tsuper(obstacleCanvas, audioManager);\n\t\tconst basicAmmo: Ammunition[] = [\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t];\n\t\tconst basicAmmo2: Ammunition[] = [\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t];\n\t\tconst basicAmmo3: Ammunition[] = [\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t];\n\n\t\tconst basicBombs: Bomb[] = [\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t];\n\t\tconst basicBombs2: Bomb[] = [\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t];\n\t\tconst basicBombs3: Bomb[] = [\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t];\n\n\t\tconst navigationGrid: NavigationGrid = new NavigationGrid(this.gameCanvas, this.obstacleCanvas, false);\n\t\tconst navigationGrid2: NavigationGrid = new NavigationGrid(this.gameCanvas, this.obstacleCanvas, false);\n\t\tconst navigationGrid3: NavigationGrid = new NavigationGrid(this.gameCanvas, this.obstacleCanvas, false);\n\t\tconst aiTank = new SuperBomberMovingTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t100,\n\t\t\tobstacleCanvas,\n\t\t\tbasicAmmo,\n\t\t\tbasicBombs,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t\tconst aiTank2 = new SuperBomberMovingTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t200,\n\t\t\tobstacleCanvas,\n\t\t\tbasicAmmo2,\n\t\t\tbasicBombs2,\n\t\t\tnavigationGrid2,\n\t\t\taudioManager\n\t\t);\n\t\tconst aiTank3 = new SuperBomberMovingTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t300,\n\t\t\tobstacleCanvas,\n\t\t\tbasicAmmo3,\n\t\t\tbasicBombs3,\n\t\t\tnavigationGrid3,\n\t\t\taudioManager\n\t\t);\n\n\t\tthis.gameCanvas.addEnemyTank(aiTank);\n\t\tthis.gameCanvas.addEnemyTank(aiTank2);\n\t\tthis.gameCanvas.addEnemyTank(aiTank3);\n\n\t\tconst playerTank = new DefaultPlayerTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t200,\n\t\t\t250,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addPlayerTank(playerTank);\n\t}\n}\n","import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\nimport './assets/computer.ico';\nimport './css/style.css';\n\nimport { LevelSelector } from './ui/LevelSelector';\n\nconst levelSelector: LevelSelector = new LevelSelector(7);\n\nlevelSelector.startActiveLevel();\n","import * as d3 from 'd3';\nimport packageJson from '../../package.json';\nimport { AudioManager } from '../game/AudioManager';\nimport { Level, Level1, Level2, Level3, Level4, Level5, Level6, Level7 } from '../game/Level';\n\nexport class LevelSelector {\n\tprivate levels: number;\n\tprivate activeLevelNumber: number;\n\tprivate activeLevel: Level;\n\tprivate sliderWidth: number = Math.min(window.innerWidth * 0.8, 600); // Responsive width\n\tprivate audioManager: AudioManager;\n\n\tconstructor(levels: number) {\n\t\tthis.levels = levels;\n\t\tthis.audioManager = new AudioManager();\n\t\tconst audioPromise: Promise<void[]> = this.audioManager.loadAllAudio();\n\t\taudioPromise.then((): void => {\n\t\t\tthis.audioManager.playBackgroundMusic();\n\t\t});\n\t\tthis.activeLevelNumber = 1;\n\t\tthis.activeLevel = new Level1(this.audioManager);\n\t\tthis.setHeader();\n\t\tthis.createSlider();\n\t\tthis.createJumbotron();\n\t}\n\n\tpublic setHeader() {\n\t\tconst header: HTMLElement | null = document.getElementById('main-header');\n\t\tif (header) {\n\t\t\theader.textContent = `Treads V${packageJson.version}`;\n\t\t}\n\t}\n\n\tpublic startActiveLevel() {\n\t\tthis.activeLevel.stop();\n\t\tswitch (this.activeLevelNumber) {\n\t\t\tcase 1:\n\t\t\t\tthis.activeLevel = new Level1(this.audioManager);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.activeLevel = new Level2(this.audioManager);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.activeLevel = new Level3(this.audioManager);\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tthis.activeLevel = new Level4(this.audioManager);\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tthis.activeLevel = new Level5(this.audioManager);\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tthis.activeLevel = new Level6(this.audioManager);\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\tthis.activeLevel = new Level7(this.audioManager);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.activeLevel = new Level1(this.audioManager);\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.activeLevel.start();\n\t}\n\n\tprivate createSlider(): void {\n\t\tconst margin: { top: number; right: number; bottom: number; left: number } = {\n\t\t\ttop: 10,\n\t\t\tright: 10,\n\t\t\tbottom: 20,\n\t\t\tleft: 10,\n\t\t};\n\t\tconst effectiveWidth: number = this.sliderWidth - margin.left - margin.right;\n\n\t\tconst scale: d3.ScaleLinear<number, number, never> = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([1, this.levels])\n\t\t\t.range([0, effectiveWidth])\n\t\t\t.clamp(true);\n\n\t\tconst svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any> = d3\n\t\t\t.select('#slider')\n\t\t\t.append('svg')\n\t\t\t.attr('width', this.sliderWidth)\n\t\t\t.attr('height', 50);\n\n\t\tconst sliderGroup: d3.Selection<SVGGElement, unknown, HTMLElement, any> = svg\n\t\t\t.append('g')\n\t\t\t.attr('transform', `translate(${margin.left}, 30)`);\n\n\t\tsliderGroup.append('g').call(d3.axisBottom(scale).ticks(this.levels).tickFormat(d3.format('1')));\n\n\t\tconst handle: d3.Selection<SVGCircleElement, unknown, HTMLElement, any> = sliderGroup\n\t\t\t.append('circle')\n\t\t\t.attr('cx', scale(this.activeLevelNumber))\n\t\t\t.attr('cy', -10)\n\t\t\t.attr('r', 10)\n\t\t\t.style('fill', 'red')\n\t\t\t.style('cursor', 'ew-resize');\n\t\tconst dragHandler: d3.DragBehavior<SVGCircleElement, unknown, unknown> = d3\n\t\t\t.drag<SVGCircleElement, unknown>()\n\t\t\t.on('drag', (event) => {\n\t\t\t\tconst x = event.x - margin.left; // Adjusting for the left margin\n\t\t\t\tconst level = Math.round(scale.invert(x));\n\t\t\t\thandle.attr('cx', scale(level));\n\t\t\t\tthis.updateActiveLevel(level);\n\t\t\t});\n\n\t\thandle.call(dragHandler);\n\t}\n\n\tprivate createJumbotron(): void {\n\t\tconst jumbotron: d3.Selection<d3.BaseType, unknown, HTMLElement, any> = d3.select('#jumbotron');\n\t\tconst colorScale = d3.scaleLinear<string>().domain([1, this.levels]).range(['lightblue', 'lightcoral']);\n\t\tfor (let i = 1; i <= this.levels; i++) {\n\t\t\tconst box: d3.Selection<HTMLDivElement, unknown, HTMLElement, any> = jumbotron\n\t\t\t\t.append('div')\n\t\t\t\t.attr('class', 'jumbotron-box inactive')\n\t\t\t\t.on('click', () => this.updateActiveLevel(i));\n\n\t\t\t// Example of how you can append an SVG to a jumbotron box.\n\t\t\tconst svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any> = box\n\t\t\t\t.append('svg')\n\t\t\t\t.attr('width', '100%')\n\t\t\t\t.attr('height', '100%');\n\n\t\t\tsvg\n\t\t\t\t.append('rect') // Placeholder for actual SVG content.\n\t\t\t\t.attr('width', '100%')\n\t\t\t\t.attr('height', '100%')\n\t\t\t\t.attr('fill', colorScale(i));\n\t\t\tsvg\n\t\t\t\t.append('text')\n\t\t\t\t.attr('x', '50%')\n\t\t\t\t.attr('y', '50%')\n\t\t\t\t.attr('dominant-baseline', 'middle')\n\t\t\t\t.attr('text-anchor', 'middle')\n\t\t\t\t.text(`Level ${i}`);\n\t\t}\n\n\t\tthis.updateActiveLevel(this.activeLevelNumber);\n\t}\n\n\tprivate updateActiveLevel(level: number): void {\n\t\tthis.activeLevelNumber = level;\n\t\td3.selectAll('.jumbotron-box')\n\t\t\t.classed('active', (_, i) => i + 1 === level)\n\t\t\t.classed('inactive', (_, i) => i + 1 !== level);\n\t\td3.select('circle').attr(\n\t\t\t'cx',\n\t\t\td3\n\t\t\t\t.scaleLinear()\n\t\t\t\t.domain([1, this.levels])\n\t\t\t\t.range([0, this.sliderWidth - 20])(level)\n\t\t);\n\t\tthis.startActiveLevel();\n\t}\n}\n"],"names":["AudioFile","Direction","this","audioContext","window","AudioContext","webkitAudioContext","audioBuffers","Map","backgroundMusicSource","loadAllAudio","promises","loadAudio","TANK_FIRE","TANK_DESTROY","BOMB_EXPLODE","BACKGROUND_MUSIC","Promise","all","audioFile","url","fetch","then","response","arrayBuffer","decodeAudioData","audioBuffer","set","catch","error","console","play","buffer","get","source","createBufferSource","connect","destination","start","warn","getAudioContext","playBackgroundMusic","stopBackgroundMusic","loop","stop","disconnect","startX","startY","theta","speed","maxBounces","canvasWidth","canvasHeight","isDestroyed","audioManager","xPos","yPos","xVelocity","Math","cos","yVelocity","sin","bounces","updatePosition","obstacleCanvas","obstacles","forEach","obstacle","xLeft","xRight","yTop","yBottom","fromLeft","abs","fromRight","fromTop","fromBottom","minDistance","min","checkEnemyHit","enemyTanks","enemyTank","log","checkPlayerHit","playerTank","reload","draw","context","beginPath","arc","PI","fillStyle","fill","lineWidth","strokeStyle","stroke","closePath","willHitPlayerTank","predictedXPosition","predictedYPosition","predictedXVelocity","predictedYVelocity","predictedBounces","Ammunition","x","y","radius","color","velocityX","velocityY","life","fragmentRadius","fragmentColor","blastRadius","update","blastDelayMS","fuseStartTime","shouldFlashRed","isExploding","fragments","isPointInsideBlastRadius","tankMidpoint","setFuse","performance","now","animateFuse","setTimeout","createFragments","elapsedTime","fractionElapsed","some","threshold","requestAnimationFrame","dx","dy","sqrt","i","angle","random","fragment","BombFragment","push","drawExplosion","particle","filter","Bomb","save","translate","scale","moveTo","bezierCurveTo","restore","canvas","playerWin","enemyWin","getContext","Error","initializeCanvas","width","height","renderLevelOverScreen","message","font","textWidth","measureText","fontSize","clearRect","strokeText","fillText","render","progress","every","tank","aim","aimXPos","aimYPos","shoot","plantBomb","reticule","ammunition","bombs","bomb","canvasSelector","animationFrameID","gameRenderer","GameRenderer","document","querySelector","lastRenderTime","addEventListener","resizeCanvas","bind","gameLoop","cancelAnimationFrame","timeStamp","clearObstacles","addEnemyTank","addPlayerTank","g","h","f","walkable","parent","gameCanvas","stationary","grid","gridCellWidth","path","gridXLength","gridYLength","floor","Node","gridXLeft","gridXRight","gridYTop","gridYBottom","obs","reset","getNodeFromTank","xGridCoordinate","size","yGridCoordinate","max","getRandomNodeInRadiusOfTarget","target","candidateNodes","node","distance","pow","length","aStar","openSet","closedSet","Set","current","sort","a","b","unshift","splice","indexOf","add","getWalkableNeighbors","neighbor","has","tentativeG","SQRT2","includes","round","neighbors","rect","obstacleCanvasSelector","dashPattern","renderReticule","tankSize","reticuleWidth","tankXPos","tankYPos","mouseXPos","mouseYpos","setLineDash","lineTo","Reticule","maxReticuleLength","tankXPosition","tankYPosition","mouseXPosition","mouseYPosition","xDist","yDist","distanceToMaxDistanceRatio","dashLength","spaceLength","xLength","gunBarrellWidth","twoPi","lastDirectionMoved","UNKNOWN","wasLastMoveBlocked","consecutiveDirectionMoves","maxAmmunition","maxBombs","aimAngle","canvasRect","getBoundingClientRect","xOffset","left","yOffset","top","fillRect","lineJoin","strokeRect","endX","endY","moveInLastDirectionMoved","moveInCardinalDirection","getRandomDirection","enumValues","Object","keys","map","n","Number","parseInt","isNaN","direction","NORTH","moveNorth","SOUTH","moveSouth","EAST","moveEast","WEST","moveWest","NORTHEAST","moveNorthEast","NORTHWEST","moveNorthWest","SOUTHEAST","moveSouthEast","SOUTHWEST","moveSouthWest","values","value","randomIndex","blocked","blockedNorth","blockedEast","blockedWest","blockedSouth","aggressionFactor","navigationGrid","pathRecaculationInterval","drawNavigationGrid","currentNode","j","index","array","startNode","targetNode","destinationNode","randomDirection","randomNumber","Tank","NoReticule","minTimeBetweenShotsMS","timeBetweenShotsIsElapsed","minTimeBetweenBombPlantsMS","timeBetweenPlantsIsElapsed","availableBombIndex","findIndex","availableAmmunitionIndex","atan2","EnemyTank","defaultPlayerTankColor","PlayerAmmunition","PlayerBomb","AdjustingCustomColorReticule","keyStates","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","w","s","d","W","A","S","D","event","hasOwnProperty","key","code","clientX","clientY","up","right","down","NavigationGrid","aimAngleChangeAmount","getAngleChangeAmount","BasicAIAmmunition","canTakeShot","GameCanvas","Obstacle","ObstacleCanvas","stationaryTank","StationaryTank","DefaultPlayerTank","Level","stationaryTank1","stationaryTank2","stationaryTank3","obs2","superAmmo","SuperAIAmmunition","aiTank","StationaryRandomAimTank","basicAmmo","SimpleMovingTank","obs3","aiTank3","aiTank2","basicBombs","BasicBomb","basicBombs2","basicBombs3","navigationGrid2","navigationGrid3","BomberTank","basicAmmo2","basicAmmo3","LoveBomb","SuperBomberMovingTank","levels","sliderWidth","innerWidth","AudioManager","activeLevelNumber","activeLevel","Level1","setHeader","createSlider","createJumbotron","header","getElementById","textContent","startActiveLevel","Level2","Level3","Level4","Level5","Level6","Level7","margin","effectiveWidth","domain","range","clamp","sliderGroup","append","attr","call","ticks","tickFormat","handle","style","dragHandler","on","level","invert","updateActiveLevel","jumbotron","colorScale","svg","text","classed","_"],"sourceRoot":""}