{"version":3,"file":"main.fdf0e9dd77b195b60d08.bundle.js","mappings":"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","sources":["webpack://treads/./src/assets/computer.ico","webpack://treads/./src/game/AudioManager.ts","webpack://treads/./src/game/tanks/Tank.ts","webpack://treads/./src/game/Ammunition.ts","webpack://treads/./src/game/BombFragment.ts","webpack://treads/./src/game/Bomb.ts","webpack://treads/./src/game/GameRenderer.ts","webpack://treads/./src/game/GameCanvas.ts","webpack://treads/./src/game/NavigationGrid.ts","webpack://treads/./src/game/Obstacle.ts","webpack://treads/./src/game/ObstacleCanvas.ts","webpack://treads/./src/game/Reticule.ts","webpack://treads/./src/game/tanks/EnemyTank.ts","webpack://treads/./src/game/tanks/BomberTank.ts","webpack://treads/./src/game/tanks/PlayerTank.ts","webpack://treads/./src/game/tanks/SimpleMovingTank.ts","webpack://treads/./src/game/tanks/StationaryRandomAimTank.ts","webpack://treads/./src/game/tanks/StationaryTank.ts","webpack://treads/./src/game/tanks/SuperBomberMovingTank.ts","webpack://treads/./src/game/Level.ts","webpack://treads/./src/index.ts","webpack://treads/./src/ui/LevelSelector.ts"],"sourcesContent":["export default __webpack_public_path__ + \"assets/computer.ico\";","import backgroundMusic from '../assets/audio/backgroundMusic.mp3';\nimport bombExplode from '../assets/audio/bombExplode.mp3';\nimport tankDestroy from '../assets/audio/tankDestroy.mp3';\nimport tankFire from '../assets/audio/tankFire.mp3';\n\nexport enum AudioFile {\n\tTANK_FIRE = 1,\n\tTANK_DESTROY = 2,\n\tBOMB_EXPLODE = 3,\n\tBACKGROUND_MUSIC = 4,\n}\n\nexport class AudioManager {\n\tprivate audioContext: AudioContext;\n\tprivate audioBuffers: Map<AudioFile, AudioBuffer>;\n\tprivate backgroundMusicSource: AudioBufferSourceNode | null;\n\n\tconstructor() {\n\t\tthis.audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n\t\tthis.audioBuffers = new Map();\n\t\tthis.backgroundMusicSource = null;\n\t}\n\n\tloadAllAudio(): Promise<void[]> {\n\t\tconst promises = [\n\t\t\tthis.loadAudio(AudioFile.TANK_FIRE, tankFire),\n\t\t\tthis.loadAudio(AudioFile.TANK_DESTROY, tankDestroy),\n\t\t\tthis.loadAudio(AudioFile.BOMB_EXPLODE, bombExplode),\n\t\t\tthis.loadAudio(AudioFile.BACKGROUND_MUSIC, backgroundMusic),\n\t\t];\n\t\treturn Promise.all(promises);\n\t}\n\n\tloadAudio(audioFile: AudioFile, url: string): Promise<void> {\n\t\treturn fetch(url)\n\t\t\t.then((response) => response.arrayBuffer())\n\t\t\t.then((arrayBuffer) => this.audioContext.decodeAudioData(arrayBuffer))\n\t\t\t.then((audioBuffer) => {\n\t\t\t\tthis.audioBuffers.set(audioFile, audioBuffer);\n\t\t\t})\n\t\t\t.catch((error) => console.error(`Error loading audio file: ${url}`, error));\n\t}\n\n\tplay(audioFile: AudioFile): void {\n\t\tconst buffer = this.audioBuffers.get(audioFile);\n\t\tif (buffer) {\n\t\t\tconst source = this.audioContext.createBufferSource();\n\t\t\tsource.buffer = buffer;\n\t\t\tsource.connect(this.audioContext.destination);\n\t\t\tsource.start(0);\n\t\t} else {\n\t\t\tconsole.warn(`Audio buffer for ${audioFile} not found`);\n\t\t}\n\t}\n\n\tgetAudioContext(): AudioContext {\n\t\treturn this.audioContext;\n\t}\n\n\tplayBackgroundMusic(): void {\n\t\tconst buffer = this.audioBuffers.get(AudioFile.BACKGROUND_MUSIC);\n\t\tif (buffer) {\n\t\t\tthis.stopBackgroundMusic();\n\t\t\tthis.backgroundMusicSource = this.audioContext.createBufferSource();\n\t\t\tthis.backgroundMusicSource.buffer = buffer;\n\t\t\tthis.backgroundMusicSource.loop = true;\n\t\t\tthis.backgroundMusicSource.connect(this.audioContext.destination);\n\t\t\tthis.backgroundMusicSource.start(0);\n\t\t} else {\n\t\t\tconsole.warn(`Background music buffer not found`);\n\t\t}\n\t}\n\n\tstopBackgroundMusic(): void {\n\t\tif (this.backgroundMusicSource) {\n\t\t\tthis.backgroundMusicSource.stop(0);\n\t\t\tthis.backgroundMusicSource.disconnect();\n\t\t\tthis.backgroundMusicSource = null;\n\t\t}\n\t}\n}\n","import { Ammunition } from '../Ammunition';\nimport { AudioManager } from '../AudioManager';\nimport { Bomb } from '../Bomb';\nimport { BombFragment } from '../BombFragment';\nimport { ObstacleCanvas } from '../ObstacleCanvas';\nimport { Reticule } from '../Reticule';\n\nexport enum Direction {\n\tNORTH = 1,\n\tSOUTH = 2,\n\tEAST = 3,\n\tWEST = 4,\n\tNORTHEAST = 5,\n\tNORTHWEST = 6,\n\tSOUTHEAST = 7,\n\tSOUTHWEST = 8,\n\tUNKNOWN = 9,\n}\n\nexport class Tank {\n\tpublic xPos: number;\n\tpublic yPos: number;\n\tpublic xLeft: number;\n\tpublic xRight: number;\n\tpublic yTop: number;\n\tpublic yBottom: number;\n\tpublic speed: number;\n\tpublic size: number;\n\tpublic tankMidpoint: number;\n\tpublic color: string;\n\tpublic reticule: Reticule;\n\tpublic gunBarrellWidth = 7;\n\tpublic isDestroyed = false;\n\tpublic isExploding = false;\n\tpublic obstacleCanvas: ObstacleCanvas;\n\tpublic twoPi: number = 2 * Math.PI;\n\tpublic lastDirectionMoved: Direction = Direction.UNKNOWN;\n\tpublic wasLastMoveBlocked = false;\n\tpublic consecutiveDirectionMoves = 0;\n\tpublic audioManager: AudioManager;\n\tpublic aimAngle: number;\n\tpublic aimXPos: number;\n\tpublic aimYPos: number;\n\tpublic xOffset: number;\n\tpublic yOffset: number;\n\tpublic ammunition: Ammunition[] = [];\n\tpublic maxAmmunition: number;\n\tpublic bombs: Bomb[] = [];\n\tpublic maxBombs: number;\n\tpublic canvasWidth: number;\n\tpublic canvasHeight: number;\n\tprivate fragments: BombFragment[];\n\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\treticule: Reticule,\n\t\txPos: number,\n\t\tyPos: number,\n\t\tspeed: number,\n\t\tsize: number,\n\t\tcolor: string,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\tammunition: Ammunition[],\n\t\tbombs: Bomb[],\n\t\taudioManager: AudioManager\n\t) {\n\t\tthis.reticule = reticule;\n\t\tthis.xPos = xPos;\n\t\tthis.yPos = yPos;\n\t\tthis.xLeft = xPos;\n\t\tthis.xRight = xPos + size;\n\t\tthis.yTop = yPos;\n\t\tthis.yBottom = yPos + size;\n\t\tthis.speed = speed;\n\t\tthis.size = size;\n\t\tthis.color = color;\n\t\tthis.canvasWidth = canvas.width;\n\t\tthis.canvasHeight = canvas.height;\n\t\tthis.obstacleCanvas = obstacleCanvas;\n\t\tthis.tankMidpoint = this.size / 2;\n\t\tthis.ammunition = ammunition;\n\t\tthis.maxAmmunition = ammunition.length;\n\t\tthis.bombs = bombs;\n\t\tthis.maxBombs = bombs.length;\n\t\tthis.audioManager = audioManager;\n\n\t\tthis.aimAngle = 90;\n\t\tconst canvasRect: DOMRect = canvas.getBoundingClientRect();\n\t\tthis.xOffset = canvasRect.left;\n\t\tthis.yOffset = canvasRect.top;\n\t\t// Set the initital X and Y aim position to the center of the canvas\n\t\tthis.aimXPos = canvas.width / 2;\n\t\tthis.aimYPos = canvas.height / 2;\n\n\t\tthis.fragments = [];\n\t}\n\n\tpublic draw(context: CanvasRenderingContext2D): void {\n\t\tif (this.isDestroyed) {\n\t\t\tif (this.isExploding) {\n\t\t\t\tthis.updateExplosion(context);\n\t\t\t}\n\t\t\tcontext.strokeStyle = this.color;\n\t\t\tcontext.lineWidth = 5;\n\t\t\tcontext.setLineDash([]);\n\t\t\tconst xLength = 10;\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(this.xPos + this.tankMidpoint - xLength, this.yPos + this.tankMidpoint - xLength);\n\t\t\tcontext.lineTo(this.xPos + this.tankMidpoint + xLength, this.yPos + this.tankMidpoint + xLength);\n\t\t\tcontext.stroke();\n\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(this.xPos + this.tankMidpoint - xLength, this.yPos + this.tankMidpoint + xLength);\n\t\t\tcontext.lineTo(this.xPos + this.tankMidpoint + xLength, this.yPos + this.tankMidpoint - xLength);\n\t\t\tcontext.stroke();\n\t\t} else {\n\t\t\tcontext.fillStyle = this.color;\n\t\t\tcontext.fillRect(this.xPos, this.yPos, this.size, this.size);\n\n\t\t\tcontext.setLineDash([]);\n\t\t\tcontext.lineJoin = 'bevel';\n\t\t\tcontext.strokeStyle = 'black';\n\t\t\tcontext.lineWidth = 2;\n\t\t\tcontext.strokeRect(this.xPos, this.yPos, this.size, this.size);\n\n\t\t\tcontext.beginPath();\n\t\t\tcontext.arc(this.xPos + this.tankMidpoint, this.yPos + this.tankMidpoint, this.size / 3, 0, this.twoPi);\n\t\t\tcontext.stroke();\n\n\t\t\tconst endX = this.xPos + this.tankMidpoint + Math.cos(this.aimAngle) * this.size;\n\t\t\tconst endY = this.yPos + this.tankMidpoint + Math.sin(this.aimAngle) * this.size;\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(this.xPos + this.tankMidpoint, this.yPos + this.tankMidpoint);\n\t\t\tcontext.lineTo(endX, endY);\n\t\t\tcontext.lineWidth = this.gunBarrellWidth;\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n\n\tpublic destroy(): void {\n\t\tthis.isDestroyed = true;\n\t\tthis.isExploding = true;\n\t\tthis.createFragments();\n\t\tsetTimeout((): void => {\n\t\t\tthis.isExploding = false;\n\t\t}, 1000);\n\t}\n\n\tcreateFragments(): void {\n\t\tconst fragmentCount = 50;\n\t\tfor (let i = 0; i < fragmentCount; i++) {\n\t\t\tconst angle = Math.random() * 2 * Math.PI;\n\t\t\tconst speed = Math.random() * 5 + 2;\n\t\t\tconst velocityX = Math.cos(angle) * speed;\n\t\t\tconst velocityY = Math.sin(angle) * speed;\n\t\t\tconst grayValue = Math.floor(Math.random() * 256);\n\t\t\tconst alphaValue = Math.random() * 0.5 + 0.5;\n\t\t\tconst fragmentColor = `rgba(${grayValue}, ${grayValue}, ${grayValue}, ${alphaValue})`;\n\t\t\tconst fragment = new BombFragment(\n\t\t\t\tthis.xPos + this.tankMidpoint,\n\t\t\t\tthis.yPos + this.tankMidpoint,\n\t\t\t\tMath.random() * 2 + 1,\n\t\t\t\tfragmentColor,\n\t\t\t\tvelocityX,\n\t\t\t\tvelocityY,\n\t\t\t\t10\n\t\t\t);\n\t\t\tthis.fragments.push(fragment);\n\t\t}\n\t}\n\n\tupdateExplosion(context: CanvasRenderingContext2D): void {\n\t\tthis.fragments.forEach((particle) => {\n\t\t\tparticle.update();\n\t\t\tparticle.draw(context);\n\t\t});\n\n\t\tthis.fragments = this.fragments.filter((particle) => particle.life > 0);\n\t}\n\n\tpublic updatePosition(playerTank: Tank): void {\n\t\treturn;\n\t}\n\n\tpublic aim(mouseXPos: number, mouseYpos: number, playerTank: Tank): void {\n\t\treturn;\n\t}\n\n\tpublic shoot(playerTank: Tank): void {\n\t\treturn;\n\t}\n\n\tpublic plantBomb(playerTank: Tank): void {\n\t\treturn;\n\t}\n\n\tpublic moveInLastDirectionMoved(): void {\n\t\tthis.moveInCardinalDirection(this.lastDirectionMoved);\n\t}\n\n\tpublic getRandomDirection<Direction>(): Direction[keyof Direction] {\n\t\tconst enumValues = Object.keys(Direction)\n\t\t\t.map((n) => Number.parseInt(n))\n\t\t\t.filter((n) => !Number.isNaN(n)) as unknown as Direction[keyof Direction][];\n\t\tconst randomIndex = Math.floor(Math.random() * enumValues.length);\n\t\tconst randomEnumValue = enumValues[randomIndex];\n\t\treturn randomEnumValue;\n\t}\n\n\tpublic moveInCardinalDirection(direction: Direction): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tswitch (direction) {\n\t\t\tcase Direction.NORTH: {\n\t\t\t\tthis.moveNorth();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Direction.SOUTH: {\n\t\t\t\tthis.moveSouth();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Direction.EAST: {\n\t\t\t\tthis.moveEast();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Direction.WEST: {\n\t\t\t\tthis.moveWest();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Direction.NORTHEAST: {\n\t\t\t\tthis.moveNorthEast();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Direction.NORTHWEST: {\n\t\t\t\tthis.moveNorthWest();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Direction.SOUTHEAST: {\n\t\t\t\tthis.moveSouthEast();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Direction.SOUTHWEST: {\n\t\t\t\tthis.moveSouthWest();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tconst enumValues = Object.values(Direction).filter((value) => typeof value === 'number') as Direction[];\n\t\t\t\tconst randomIndex = Math.floor(Math.random() * enumValues.length);\n\t\t\t\tthis.moveInCardinalDirection(enumValues[randomIndex]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic moveNorth(): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.lastDirectionMoved == Direction.NORTH) {\n\t\t\tthis.consecutiveDirectionMoves += 1;\n\t\t} else {\n\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t}\n\t\tthis.lastDirectionMoved = Direction.NORTH;\n\t\tlet blocked = false;\n\t\tfor (const obstacle of this.obstacleCanvas.obstacles) {\n\t\t\tif (\n\t\t\t\tthis.yPos - this.speed < obstacle.yTop + obstacle.height &&\n\t\t\t\tthis.yPos > obstacle.yTop &&\n\t\t\t\tobstacle.xLeft < this.xPos + this.size &&\n\t\t\t\tthis.xPos < obstacle.xRight\n\t\t\t) {\n\t\t\t\tthis.yPos = obstacle.yBottom;\n\t\t\t\tblocked = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!blocked) {\n\t\t\tthis.yPos = Math.max(this.yPos - this.speed, 0);\n\t\t} else {\n\t\t\tthis.wasLastMoveBlocked = true;\n\t\t}\n\t}\n\n\tpublic moveSouth(): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.lastDirectionMoved == Direction.SOUTH) {\n\t\t\tthis.consecutiveDirectionMoves += 1;\n\t\t} else {\n\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t}\n\t\tthis.lastDirectionMoved = Direction.SOUTH;\n\t\tlet blocked = false;\n\t\tfor (const obstacle of this.obstacleCanvas.obstacles) {\n\t\t\tif (\n\t\t\t\tthis.yPos + this.speed + this.size > obstacle.yTop &&\n\t\t\t\tthis.yPos < obstacle.yTop + obstacle.height &&\n\t\t\t\tobstacle.xLeft < this.xPos + this.size &&\n\t\t\t\tthis.xPos < obstacle.xRight\n\t\t\t) {\n\t\t\t\tthis.yPos = obstacle.yTop - this.size;\n\t\t\t\tblocked = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!blocked) {\n\t\t\tthis.yPos = Math.min(this.yPos + this.speed, this.canvasHeight - this.size);\n\t\t} else {\n\t\t\tthis.wasLastMoveBlocked = true;\n\t\t}\n\t}\n\n\tpublic moveWest(): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.lastDirectionMoved == Direction.WEST) {\n\t\t\tthis.consecutiveDirectionMoves += 1;\n\t\t} else {\n\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t}\n\t\tthis.lastDirectionMoved = Direction.WEST;\n\t\tlet blocked = false;\n\t\tfor (const obstacle of this.obstacleCanvas.obstacles) {\n\t\t\tif (\n\t\t\t\tthis.xPos - this.speed < obstacle.xRight &&\n\t\t\t\tthis.xPos > obstacle.xLeft &&\n\t\t\t\tobstacle.yTop < this.yPos + this.size &&\n\t\t\t\tthis.yPos < obstacle.yBottom\n\t\t\t) {\n\t\t\t\tthis.xPos = obstacle.xRight;\n\t\t\t\tblocked = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!blocked) {\n\t\t\tthis.xPos = Math.max(this.xPos - this.speed, 0);\n\t\t} else {\n\t\t\tthis.wasLastMoveBlocked = true;\n\t\t}\n\t}\n\n\tpublic moveEast(): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.lastDirectionMoved == Direction.EAST) {\n\t\t\tthis.consecutiveDirectionMoves += 1;\n\t\t} else {\n\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t}\n\t\tthis.lastDirectionMoved = Direction.EAST;\n\t\tlet blocked = false;\n\t\tfor (const obstacle of this.obstacleCanvas.obstacles) {\n\t\t\tif (\n\t\t\t\tthis.xPos + this.speed + this.size > obstacle.xLeft &&\n\t\t\t\tthis.xPos < obstacle.xLeft + obstacle.width &&\n\t\t\t\tobstacle.yTop < this.yPos + this.size &&\n\t\t\t\tthis.yPos < obstacle.yBottom\n\t\t\t) {\n\t\t\t\tthis.xPos = obstacle.xLeft - this.size;\n\t\t\t\tblocked = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!blocked) {\n\t\t\tthis.xPos = Math.min(this.xPos + this.speed, this.canvasWidth - this.size);\n\t\t} else {\n\t\t\tthis.wasLastMoveBlocked = true;\n\t\t}\n\t}\n\n\tpublic moveNorthEast(): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.lastDirectionMoved == Direction.NORTHEAST) {\n\t\t\tthis.consecutiveDirectionMoves += 1;\n\t\t} else {\n\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t}\n\t\tthis.lastDirectionMoved = Direction.NORTHEAST;\n\t\tlet blockedNorth = false;\n\t\tlet blockedEast = false;\n\t\tfor (const obstacle of this.obstacleCanvas.obstacles) {\n\t\t\tif (\n\t\t\t\t!blockedNorth &&\n\t\t\t\tthis.yPos - this.speed < obstacle.yTop + obstacle.height &&\n\t\t\t\tthis.yPos > obstacle.yTop &&\n\t\t\t\tobstacle.xLeft < this.xPos + this.size &&\n\t\t\t\tthis.xPos < obstacle.xRight\n\t\t\t) {\n\t\t\t\tthis.yPos = obstacle.yBottom;\n\t\t\t\tblockedNorth = true;\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!blockedEast &&\n\t\t\t\tthis.xPos + this.speed + this.size > obstacle.xLeft &&\n\t\t\t\tthis.xPos < obstacle.xLeft + obstacle.width &&\n\t\t\t\tobstacle.yTop < this.yPos + this.size &&\n\t\t\t\tthis.yPos < obstacle.yBottom\n\t\t\t) {\n\t\t\t\tthis.xPos = obstacle.xLeft - this.size;\n\t\t\t\tblockedEast = true;\n\t\t\t}\n\t\t}\n\t\tif (blockedNorth && blockedEast) {\n\t\t\tthis.wasLastMoveBlocked = true;\n\t\t}\n\t\tif (!blockedNorth) {\n\t\t\tthis.yPos = Math.max(this.yPos - this.speed, 0);\n\t\t}\n\t\tif (!blockedEast) {\n\t\t\tthis.xPos = Math.min(this.xPos + this.speed, this.canvasWidth - this.size);\n\t\t}\n\t}\n\n\tpublic moveNorthWest(): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.lastDirectionMoved == Direction.NORTHWEST) {\n\t\t\tthis.consecutiveDirectionMoves += 1;\n\t\t} else {\n\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t}\n\t\tthis.lastDirectionMoved = Direction.NORTHWEST;\n\t\tlet blockedNorth = false;\n\t\tlet blockedWest = false;\n\t\tfor (const obstacle of this.obstacleCanvas.obstacles) {\n\t\t\tif (\n\t\t\t\t!blockedNorth &&\n\t\t\t\tthis.yPos - this.speed < obstacle.yTop + obstacle.height &&\n\t\t\t\tthis.yPos > obstacle.yTop &&\n\t\t\t\tobstacle.xLeft < this.xPos + this.size &&\n\t\t\t\tthis.xPos < obstacle.xRight\n\t\t\t) {\n\t\t\t\tthis.yPos = obstacle.yBottom;\n\t\t\t\tblockedNorth = true;\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!blockedWest &&\n\t\t\t\tthis.xPos - this.speed < obstacle.xRight &&\n\t\t\t\tthis.xPos > obstacle.xLeft &&\n\t\t\t\tobstacle.yTop < this.yPos + this.size &&\n\t\t\t\tthis.yPos < obstacle.yBottom\n\t\t\t) {\n\t\t\t\tthis.xPos = obstacle.xRight;\n\t\t\t\tblockedWest = true;\n\t\t\t}\n\t\t}\n\t\tif (blockedNorth && blockedWest) {\n\t\t\tthis.wasLastMoveBlocked = true;\n\t\t}\n\t\tif (!blockedNorth) {\n\t\t\tthis.yPos = Math.max(this.yPos - this.speed, 0);\n\t\t}\n\t\tif (!blockedWest) {\n\t\t\tthis.xPos = Math.max(this.xPos - this.speed, 0);\n\t\t}\n\t}\n\n\tpublic moveSouthEast(): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.lastDirectionMoved == Direction.SOUTHEAST) {\n\t\t\tthis.consecutiveDirectionMoves += 1;\n\t\t} else {\n\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t}\n\t\tthis.lastDirectionMoved = Direction.SOUTHEAST;\n\t\tlet blockedSouth = false;\n\t\tlet blockedEast = false;\n\t\tfor (const obstacle of this.obstacleCanvas.obstacles) {\n\t\t\tif (\n\t\t\t\t!blockedSouth &&\n\t\t\t\tthis.yPos + this.speed + this.size > obstacle.yTop &&\n\t\t\t\tthis.yPos < obstacle.yTop + obstacle.height &&\n\t\t\t\tobstacle.xLeft < this.xPos + this.size &&\n\t\t\t\tthis.xPos < obstacle.xRight\n\t\t\t) {\n\t\t\t\tthis.yPos = obstacle.yTop - this.size;\n\t\t\t\tblockedSouth = true;\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!blockedEast &&\n\t\t\t\tthis.xPos + this.speed + this.size > obstacle.xLeft &&\n\t\t\t\tthis.xPos < obstacle.xLeft + obstacle.width &&\n\t\t\t\tobstacle.yTop < this.yPos + this.size &&\n\t\t\t\tthis.yPos < obstacle.yBottom\n\t\t\t) {\n\t\t\t\tthis.xPos = obstacle.xLeft - this.size;\n\t\t\t\tblockedEast = true;\n\t\t\t}\n\t\t}\n\t\tif (blockedSouth && blockedEast) {\n\t\t\tthis.wasLastMoveBlocked = true;\n\t\t}\n\t\tif (!blockedSouth) {\n\t\t\tthis.yPos = Math.min(this.yPos + this.speed, this.canvasHeight - this.size);\n\t\t}\n\t\tif (!blockedEast) {\n\t\t\tthis.xPos = Math.min(this.xPos + this.speed, this.canvasWidth - this.size);\n\t\t}\n\t}\n\n\tpublic moveSouthWest(): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.lastDirectionMoved == Direction.SOUTHWEST) {\n\t\t\tthis.consecutiveDirectionMoves += 1;\n\t\t} else {\n\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t}\n\t\tthis.lastDirectionMoved = Direction.SOUTHWEST;\n\t\tlet blockedSouth = false;\n\t\tlet blockedWest = false;\n\t\tfor (const obstacle of this.obstacleCanvas.obstacles) {\n\t\t\tif (\n\t\t\t\t!blockedSouth &&\n\t\t\t\tthis.yPos + this.speed + this.size > obstacle.yTop &&\n\t\t\t\tthis.yPos < obstacle.yTop + obstacle.height &&\n\t\t\t\tobstacle.xLeft < this.xPos + this.size &&\n\t\t\t\tthis.xPos < obstacle.xRight\n\t\t\t) {\n\t\t\t\tthis.yPos = obstacle.yTop - this.size;\n\t\t\t\tblockedSouth = true;\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!blockedWest &&\n\t\t\t\tthis.xPos - this.speed < obstacle.xRight &&\n\t\t\t\tthis.xPos > obstacle.xLeft &&\n\t\t\t\tobstacle.yTop < this.yPos + this.size &&\n\t\t\t\tthis.yPos < obstacle.yBottom\n\t\t\t) {\n\t\t\t\tthis.xPos = obstacle.xRight;\n\t\t\t\tblockedWest = true;\n\t\t\t}\n\t\t}\n\t\tif (blockedSouth && blockedWest) {\n\t\t\tthis.wasLastMoveBlocked = true;\n\t\t}\n\t\tif (!blockedSouth) {\n\t\t\tthis.yPos = Math.min(this.yPos + this.speed, this.canvasHeight - this.size);\n\t\t}\n\t\tif (!blockedWest) {\n\t\t\tthis.xPos = Math.max(this.xPos - this.speed, 0);\n\t\t}\n\t}\n}\n","import { AudioFile, AudioManager } from './AudioManager';\nimport { ObstacleCanvas } from './ObstacleCanvas';\nimport { Tank } from './tanks/Tank';\n\nexport class Ammunition {\n\tpublic xPos: number;\n\tpublic yPos: number;\n\tpublic xVelocity: number;\n\tpublic yVelocity: number;\n\tpublic theta: number;\n\tpublic bounces: number;\n\tpublic maxBounces: number;\n\tpublic speed: number;\n\tpublic canvasWidth: number;\n\tpublic canvasHeight: number;\n\tpublic isDestroyed: boolean;\n\tpublic audioManager: AudioManager;\n\n\tconstructor(\n\t\tstartX: number,\n\t\tstartY: number,\n\t\ttheta: number,\n\t\tspeed: number,\n\t\tmaxBounces: number,\n\t\tcanvasWidth: number,\n\t\tcanvasHeight: number,\n\t\tisDestroyed: boolean,\n\t\taudioManager: AudioManager\n\t) {\n\t\tthis.xPos = startX;\n\t\tthis.yPos = startY;\n\t\tthis.theta = theta;\n\t\tthis.speed = speed;\n\t\tthis.xVelocity = Math.cos(this.theta) * this.speed;\n\t\tthis.yVelocity = Math.sin(this.theta) * this.speed;\n\t\tthis.bounces = 0;\n\t\tthis.maxBounces = maxBounces;\n\t\tthis.canvasWidth = canvasWidth;\n\t\tthis.canvasHeight = canvasHeight;\n\t\tthis.isDestroyed = isDestroyed;\n\t\tthis.audioManager = audioManager;\n\t}\n\n\tupdatePosition(obstacleCanvas: ObstacleCanvas): void {\n\t\tthis.xPos += this.xVelocity;\n\t\tthis.yPos += this.yVelocity;\n\n\t\tif (this.xPos <= 0 || this.xPos > this.canvasWidth) {\n\t\t\tthis.xVelocity = -this.xVelocity;\n\t\t\tthis.bounces++;\n\t\t}\n\n\t\tif (this.yPos <= 0 || this.yPos > this.canvasHeight) {\n\t\t\tthis.yVelocity = -this.yVelocity;\n\t\t\tthis.bounces++;\n\t\t}\n\n\t\tobstacleCanvas.obstacles.forEach((obstacle) => {\n\t\t\tif (\n\t\t\t\tthis.xPos > obstacle.xLeft &&\n\t\t\t\tthis.xPos < obstacle.xRight &&\n\t\t\t\tthis.yPos > obstacle.yTop &&\n\t\t\t\tthis.yPos < obstacle.yBottom\n\t\t\t) {\n\t\t\t\tthis.bounces++;\n\t\t\t\tconst fromLeft = Math.abs(this.xPos - obstacle.xLeft);\n\t\t\t\tconst fromRight = Math.abs(this.xPos - obstacle.xRight);\n\t\t\t\tconst fromTop = Math.abs(this.yPos - obstacle.yTop);\n\t\t\t\tconst fromBottom = Math.abs(this.yPos - obstacle.yBottom);\n\t\t\t\tconst minDistance = Math.min(fromLeft, fromRight, fromTop, fromBottom);\n\n\t\t\t\tif (minDistance === fromTop) {\n\t\t\t\t\tthis.yPos = obstacle.yTop - 1;\n\t\t\t\t\tthis.yVelocity = -this.yVelocity;\n\t\t\t\t} else if (minDistance === fromBottom) {\n\t\t\t\t\tthis.yPos = obstacle.yBottom + 1;\n\t\t\t\t\tthis.yVelocity = -this.yVelocity;\n\t\t\t\t} else if (minDistance === fromLeft) {\n\t\t\t\t\tthis.xPos = obstacle.xLeft - 1;\n\t\t\t\t\tthis.xVelocity = -this.xVelocity;\n\t\t\t\t} else if (minDistance === fromRight) {\n\t\t\t\t\tthis.xPos = obstacle.xRight + 1;\n\t\t\t\t\tthis.xVelocity = -this.xVelocity;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (this.bounces > this.maxBounces) {\n\t\t\tthis.isDestroyed = true;\n\t\t}\n\t}\n\n\tcheckEnemyHit(enemyTanks: Tank[]): void {\n\t\tenemyTanks.forEach((enemyTank) => {\n\t\t\tif (enemyTank.isDestroyed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tthis.xPos > enemyTank.xLeft &&\n\t\t\t\tthis.xPos < enemyTank.xRight &&\n\t\t\t\tthis.yPos > enemyTank.yTop &&\n\t\t\t\tthis.yPos < enemyTank.yBottom\n\t\t\t) {\n\t\t\t\tthis.isDestroyed = true;\n\t\t\t\tenemyTank.destroy();\n\t\t\t\tthis.audioManager.play(AudioFile.TANK_DESTROY);\n\t\t\t\tconsole.log('Enemy hit!!!');\n\t\t\t}\n\t\t});\n\t}\n\n\tcheckPlayerHit(playerTank: Tank): void {\n\t\tif (playerTank.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\tthis.xPos > playerTank.xLeft &&\n\t\t\tthis.xPos < playerTank.xRight &&\n\t\t\tthis.yPos > playerTank.yTop &&\n\t\t\tthis.yPos < playerTank.yBottom\n\t\t) {\n\t\t\tplayerTank.destroy();\n\t\t\tthis.isDestroyed = true;\n\t\t\tconsole.log('Player Hit!!!');\n\t\t}\n\t}\n\n\treload(\n\t\tstartX: number,\n\t\tstartY: number,\n\t\ttheta: number,\n\t\tisDestroyed: boolean,\n\t\tcanvasWidth: number,\n\t\tcanvasHeight: number\n\t) {\n\t\tthis.xPos = startX;\n\t\tthis.yPos = startY;\n\t\tthis.theta = theta;\n\t\tthis.isDestroyed = isDestroyed;\n\t\tthis.xVelocity = Math.cos(this.theta) * this.speed;\n\t\tthis.yVelocity = Math.sin(this.theta) * this.speed;\n\t\tthis.canvasWidth = canvasWidth;\n\t\tthis.canvasHeight = canvasHeight;\n\t\tthis.bounces = 0;\n\t}\n\n\tdraw(context: CanvasRenderingContext2D): void {\n\t\tcontext.beginPath();\n\t\tcontext.arc(this.xPos, this.yPos, 4, 0, 2 * Math.PI);\n\t\tcontext.fillStyle = 'white';\n\t\tcontext.fill();\n\t\tcontext.lineWidth = 2;\n\t\tcontext.strokeStyle = 'black';\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\t}\n\n\twillHitPlayerTank(obstacleCanvas: ObstacleCanvas, playerTank: Tank): boolean {\n\t\tlet predictedXPosition: number = this.xPos;\n\t\tlet predictedYPosition: number = this.yPos;\n\t\tlet predictedXVelocity: number = this.xVelocity;\n\t\tlet predictedYVelocity: number = this.yVelocity;\n\t\tlet predictedBounces = 0;\n\t\twhile (predictedBounces <= this.maxBounces) {\n\t\t\tpredictedXPosition += predictedXVelocity;\n\t\t\tpredictedYPosition += predictedYVelocity;\n\t\t\tif (predictedXPosition <= 0 || predictedXPosition > this.canvasWidth) {\n\t\t\t\tpredictedXVelocity = -predictedXVelocity;\n\t\t\t\tpredictedBounces++;\n\t\t\t}\n\t\t\tif (predictedYPosition <= 0 || predictedYPosition > this.canvasHeight) {\n\t\t\t\tpredictedYVelocity = -predictedYVelocity;\n\t\t\t\tpredictedBounces++;\n\t\t\t}\n\t\t\tobstacleCanvas.obstacles.forEach((obstacle) => {\n\t\t\t\tif (\n\t\t\t\t\tpredictedXPosition > obstacle.xLeft &&\n\t\t\t\t\tpredictedXPosition < obstacle.xRight &&\n\t\t\t\t\tpredictedYPosition > obstacle.yTop &&\n\t\t\t\t\tpredictedYPosition < obstacle.yBottom\n\t\t\t\t) {\n\t\t\t\t\tpredictedBounces++;\n\t\t\t\t\tpredictedXVelocity = -predictedXVelocity;\n\t\t\t\t\tpredictedYVelocity = -predictedYVelocity;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (\n\t\t\t\tpredictedXPosition > playerTank.xLeft &&\n\t\t\t\tpredictedXPosition < playerTank.xRight &&\n\t\t\t\tpredictedYPosition > playerTank.yTop &&\n\t\t\t\tpredictedYPosition < playerTank.yBottom\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class PlayerAmmunition extends Ammunition {\n\tconstructor(\n\t\tstartX: number,\n\t\tstartY: number,\n\t\ttheta: number,\n\t\tcanvasWidth: number,\n\t\tcanvasHeight: number,\n\t\tisDestroyed: boolean,\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst playerAmmunitionMaxBounces = 1;\n\t\tconst playerAmmunitionSpeed = 4;\n\t\tsuper(\n\t\t\tstartX,\n\t\t\tstartY,\n\t\t\ttheta,\n\t\t\tplayerAmmunitionSpeed,\n\t\t\tplayerAmmunitionMaxBounces,\n\t\t\tcanvasWidth,\n\t\t\tcanvasHeight,\n\t\t\tisDestroyed,\n\t\t\taudioManager\n\t\t);\n\t}\n}\n\nexport class BasicAIAmmunition extends Ammunition {\n\tconstructor(\n\t\tstartX: number,\n\t\tstartY: number,\n\t\ttheta: number,\n\t\tcanvasWidth: number,\n\t\tcanvasHeight: number,\n\t\tisDestroyed: boolean,\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst BasicAIAmmunitionMaxBounces = 0;\n\t\tconst BasicAIAmmunitionSpeed = 4;\n\t\tsuper(\n\t\t\tstartX,\n\t\t\tstartY,\n\t\t\ttheta,\n\t\t\tBasicAIAmmunitionSpeed,\n\t\t\tBasicAIAmmunitionMaxBounces,\n\t\t\tcanvasWidth,\n\t\t\tcanvasHeight,\n\t\t\tisDestroyed,\n\t\t\taudioManager\n\t\t);\n\t}\n}\n\nexport class SuperAIAmmunition extends Ammunition {\n\tconstructor(\n\t\tstartX: number,\n\t\tstartY: number,\n\t\ttheta: number,\n\t\tcanvasWidth: number,\n\t\tcanvasHeight: number,\n\t\tisDestroyed: boolean,\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst superAIAmmunitionMaxBounces = 2;\n\t\tconst superAIAmmunitionSpeed = 6;\n\t\tsuper(\n\t\t\tstartX,\n\t\t\tstartY,\n\t\t\ttheta,\n\t\t\tsuperAIAmmunitionSpeed,\n\t\t\tsuperAIAmmunitionMaxBounces,\n\t\t\tcanvasWidth,\n\t\t\tcanvasHeight,\n\t\t\tisDestroyed,\n\t\t\taudioManager\n\t\t);\n\t}\n}\n","export class BombFragment {\n\tpublic x: number;\n\tpublic y: number;\n\tpublic fragmentRadius: number;\n\tpublic fragmentColor: string;\n\tpublic velocityX: number;\n\tpublic velocityY: number;\n\tpublic blastRadius: number;\n\tpublic life: number;\n\n\tconstructor(x: number, y: number, radius: number, color: string, velocityX: number, velocityY: number, life: number) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.fragmentRadius = radius;\n\t\tthis.fragmentColor = color;\n\t\tthis.velocityX = velocityX;\n\t\tthis.velocityY = velocityY;\n\t\tthis.blastRadius = life;\n\t\tthis.life = life;\n\t}\n\n\tupdate(): void {\n\t\tthis.x += this.velocityX;\n\t\tthis.y += this.velocityY;\n\t\tthis.life -= 1;\n\t}\n\n\tdraw(context: CanvasRenderingContext2D): void {\n\t\tcontext.beginPath();\n\t\tcontext.arc(this.x, this.y, this.fragmentRadius * (this.life / this.blastRadius), 0, Math.PI * 2, false);\n\t\tcontext.fillStyle = this.fragmentColor;\n\t\tcontext.fill();\n\t\tcontext.closePath();\n\t}\n}\n","import { AudioFile, AudioManager } from './AudioManager';\nimport { BombFragment } from './BombFragment';\nimport { Tank } from './tanks/Tank';\n\nexport class Bomb {\n\tpublic xPos: number;\n\tpublic yPos: number;\n\tpublic blastRadius: number;\n\tpublic blastDelayMS: number;\n\tpublic isDestroyed: boolean;\n\tpublic isExploding: boolean;\n\tpublic fuseStartTime: number;\n\tpublic shouldFlashRed: boolean;\n\tpublic audioManager: AudioManager;\n\n\tprivate fragments: BombFragment[];\n\n\tconstructor(startX: number, startY: number, blastRadius: number, isDestroyed: boolean, audioManager: AudioManager) {\n\t\tthis.xPos = startX;\n\t\tthis.yPos = startY;\n\t\tthis.blastRadius = blastRadius;\n\t\tthis.isDestroyed = isDestroyed;\n\t\tthis.audioManager = audioManager;\n\t\tthis.blastDelayMS = 5000;\n\t\tthis.fuseStartTime = 0;\n\t\tthis.shouldFlashRed = false;\n\t\tthis.isExploding = false;\n\t\tthis.fragments = [];\n\t}\n\n\tcheckEnemyHit(enemyTanks: Tank[]): void {\n\t\tenemyTanks.forEach((enemyTank) => {\n\t\t\tif (enemyTank.isDestroyed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.isExploding) {\n\t\t\t\tif (\n\t\t\t\t\tthis.isExploding &&\n\t\t\t\t\tthis.isPointInsideBlastRadius(\n\t\t\t\t\t\tenemyTank.xPos + enemyTank.tankMidpoint,\n\t\t\t\t\t\tenemyTank.yPos + enemyTank.tankMidpoint\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tenemyTank.destroy();\n\t\t\t\t\tconsole.log('Enemy hit with bomb!!!');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tcheckPlayerHit(playerTank: Tank): void {\n\t\tif (playerTank.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\tthis.isExploding &&\n\t\t\t(this.isPointInsideBlastRadius(playerTank.xLeft, playerTank.yTop) ||\n\t\t\t\tthis.isPointInsideBlastRadius(playerTank.xRight, playerTank.yTop) ||\n\t\t\t\tthis.isPointInsideBlastRadius(playerTank.xLeft, playerTank.yBottom) ||\n\t\t\t\tthis.isPointInsideBlastRadius(playerTank.xRight, playerTank.yBottom) ||\n\t\t\t\tthis.isPointInsideBlastRadius(playerTank.xPos, playerTank.yPos))\n\t\t) {\n\t\t\tplayerTank.destroy();\n\t\t\tconsole.log('Player Hit with bomb!!!');\n\t\t}\n\t}\n\n\tsetFuse(): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tthis.fuseStartTime = performance.now();\n\t\tthis.animateFuse();\n\t\tsetTimeout((): void => {\n\t\t\tthis.createFragments();\n\t\t\tthis.audioManager.play(AudioFile.BOMB_EXPLODE);\n\t\t\tthis.isExploding = true;\n\t\t\tsetTimeout((): void => {\n\t\t\t\tthis.isExploding = false;\n\t\t\t\tthis.isDestroyed = true;\n\t\t\t}, 1000);\n\t\t}, this.blastDelayMS);\n\t}\n\n\tprivate animateFuse(): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tconst elapsedTime = performance.now() - this.fuseStartTime;\n\t\tconst remainingTime = this.blastDelayMS - elapsedTime;\n\t\tif (remainingTime <= 0) {\n\t\t\tthis.isDestroyed = true;\n\t\t\treturn;\n\t\t}\n\t\tconst fractionElapsed = elapsedTime / this.blastDelayMS;\n\t\tconst flashThresholds = [0.25, 0.5, 0.625, 0.75, 0.8125, 0.875, 0.90625, 0.9375, 0.96875, 0.984375];\n\t\tthis.shouldFlashRed = flashThresholds.some(\n\t\t\t(threshold) => fractionElapsed > threshold && fractionElapsed < threshold + 0.01\n\t\t);\n\t\trequestAnimationFrame(() => this.animateFuse());\n\t}\n\n\tisPointInsideBlastRadius(x: number, y: number): boolean {\n\t\tconst dx = x - this.xPos;\n\t\tconst dy = y - this.yPos;\n\t\treturn Math.sqrt(dx * dx + dy * dy) <= this.blastRadius;\n\t}\n\n\tcreateFragments(): void {\n\t\tconst fragmentCount = 50;\n\t\tfor (let i = 0; i < fragmentCount; i++) {\n\t\t\tconst angle = Math.random() * 2 * Math.PI;\n\t\t\tconst speed = Math.random() * 5 + 2;\n\t\t\tconst velocityX = Math.cos(angle) * speed;\n\t\t\tconst velocityY = Math.sin(angle) * speed;\n\t\t\tconst fragment = new BombFragment(\n\t\t\t\tthis.xPos,\n\t\t\t\tthis.yPos,\n\t\t\t\tMath.random() * 2 + 1,\n\t\t\t\t'rgba(255, 69, 0, 1)',\n\t\t\t\tvelocityX,\n\t\t\t\tvelocityY,\n\t\t\t\tthis.blastRadius\n\t\t\t);\n\t\t\tthis.fragments.push(fragment);\n\t\t}\n\t}\n\n\tdraw(context: CanvasRenderingContext2D): void {\n\t\tif (this.isExploding) {\n\t\t\tthis.updateExplosion(context);\n\t\t\treturn;\n\t\t}\n\n\t\tcontext.beginPath();\n\t\tcontext.arc(this.xPos, this.yPos, 15, 0, 2 * Math.PI);\n\t\tcontext.fillStyle = this.shouldFlashRed ? 'red' : 'yellow';\n\t\tcontext.fill();\n\t\tcontext.lineWidth = 3;\n\t\tcontext.strokeStyle = 'black';\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\n\t\tcontext.beginPath();\n\t\tcontext.arc(this.xPos, this.yPos, 10, 0, 2 * Math.PI);\n\t\tcontext.lineWidth = 1.5;\n\t\tcontext.strokeStyle = 'black';\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\t}\n\n\tupdateExplosion(context: CanvasRenderingContext2D): void {\n\t\tthis.fragments.forEach((particle) => {\n\t\t\tparticle.update();\n\t\t\tparticle.draw(context);\n\t\t});\n\n\t\tthis.fragments = this.fragments.filter((particle) => particle.life > 0);\n\t}\n}\n\nexport class PlayerBomb extends Bomb {\n\tconstructor(startX: number, startY: number, isDestroyed: boolean, audioManager: AudioManager) {\n\t\tconst playerBombBlastRadius = 50;\n\t\tsuper(startX, startY, playerBombBlastRadius, isDestroyed, audioManager);\n\t}\n}\n\nexport class BasicBomb extends Bomb {\n\tconstructor(startX: number, startY: number, isDestroyed: boolean, audioManager: AudioManager) {\n\t\tconst basicBombBlastRadius = 80;\n\t\tsuper(startX, startY, basicBombBlastRadius, isDestroyed, audioManager);\n\t}\n}\n\nexport class SuperBomb extends Bomb {\n\tconstructor(startX: number, startY: number, isDestroyed: boolean, audioManager: AudioManager) {\n\t\tconst superBombBlastRadius = 20;\n\t\tsuper(startX, startY, superBombBlastRadius, isDestroyed, audioManager);\n\t}\n}\n\nexport class LoveBomb extends Bomb {\n\tconstructor(startX: number, startY: number, isDestroyed: boolean, audioManager: AudioManager) {\n\t\tconst loveBombBlastRadius = 100;\n\t\tsuper(startX, startY, loveBombBlastRadius, isDestroyed, audioManager);\n\t}\n\n\toverride draw(context: CanvasRenderingContext2D): void {\n\t\tif (this.isExploding) {\n\t\t\tthis.updateExplosion(context);\n\t\t\treturn;\n\t\t}\n\t\tcontext.save();\n\t\tcontext.translate(this.xPos, this.yPos);\n\t\tcontext.scale(1, 1.3);\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(0, 0);\n\t\tcontext.bezierCurveTo(12, -12, 24, 0, 0, 24);\n\t\tcontext.bezierCurveTo(-24, 0, -12, -12, 0, 0);\n\t\tcontext.fillStyle = this.shouldFlashRed ? 'red' : '#FFC2D1';\n\t\tcontext.fill();\n\t\tcontext.lineWidth = 3;\n\t\tcontext.strokeStyle = 'black';\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\t\tcontext.restore();\n\t}\n}\n","import { Tank } from './tanks/Tank';\n\nexport class GameRenderer {\n\tpublic playerWin = false;\n\tpublic enemyWin = false;\n\n\tprivate context: CanvasRenderingContext2D | null;\n\n\tconstructor(public canvas: HTMLCanvasElement) {\n\t\tconst context = this.canvas.getContext('2d');\n\t\tif (!context) {\n\t\t\tthrow new Error('2d context not supported or canvas element not found.');\n\t\t}\n\t\tthis.context = context;\n\t}\n\n\tpublic initializeCanvas(width: number, height: number): void {\n\t\tthis.canvas.width = width;\n\t\tthis.canvas.height = height;\n\t}\n\n\trenderLevelOverScreen() {\n\t\tif (!this.context) {\n\t\t\tthrow new Error('2d context not supported or canvas element not found.');\n\t\t}\n\n\t\tconst message = this.playerWin ? 'Win' : this.enemyWin ? 'Lose' : '';\n\t\tif (message === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst fontSize = 100;\n\t\tthis.context.font = `${fontSize}px Arial`;\n\t\tthis.context.lineWidth = 5;\n\t\tthis.context.strokeStyle = this.playerWin ? 'green' : 'red';\n\t\tthis.context.fillStyle = this.playerWin ? 'green' : 'red';\n\n\t\tconst textWidth = this.context.measureText(message).width;\n\t\tconst x = (this.canvas.width - textWidth) / 2;\n\t\tconst y = this.canvas.height / 2 + fontSize / 2;\n\n\t\tthis.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t\tthis.context.strokeText(message, x, y);\n\t\tthis.context.fillText(message, x, y);\n\t}\n\n\trender(progress: number, playerTank: Tank, enemyTanks: Tank[]): void {\n\t\tif (!this.context) {\n\t\t\tthrow new Error('2d context not supported or canvas element not found.');\n\t\t}\n\t\tthis.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n\t\tif (playerTank.isDestroyed) {\n\t\t\tthis.enemyWin = true;\n\t\t} else if (enemyTanks.every((tank) => tank.isDestroyed)) {\n\t\t\tthis.playerWin = true;\n\t\t}\n\t\tif (this.enemyWin || this.playerWin) {\n\t\t\tthis.renderLevelOverScreen();\n\t\t}\n\t\tplayerTank.updatePosition(playerTank);\n\t\tplayerTank.aim(playerTank.aimXPos, playerTank.aimYPos, playerTank);\n\n\t\tenemyTanks.forEach((enemyTank) => {\n\t\t\tenemyTank.updatePosition(playerTank);\n\t\t\tenemyTank.aim(enemyTank.aimXPos, enemyTank.aimYPos, playerTank);\n\t\t\tenemyTank.shoot(playerTank);\n\t\t\tenemyTank.plantBomb(playerTank);\n\t\t});\n\n\t\tenemyTanks.forEach((enemyTank) => {\n\t\t\tenemyTank.draw(this.context as CanvasRenderingContext2D);\n\t\t\tenemyTank.reticule.draw(\n\t\t\t\tthis.context as CanvasRenderingContext2D,\n\t\t\t\tenemyTank.xPos,\n\t\t\t\tenemyTank.yPos,\n\t\t\t\tenemyTank.aimXPos,\n\t\t\t\tenemyTank.aimYPos\n\t\t\t);\n\t\t\tenemyTank.ammunition.forEach((ammunition) => {\n\t\t\t\tif (ammunition.isDestroyed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tammunition.updatePosition(enemyTank.obstacleCanvas);\n\t\t\t\tammunition.checkPlayerHit(playerTank);\n\t\t\t\tammunition.draw(this.context as CanvasRenderingContext2D);\n\t\t\t});\n\t\t\tenemyTank.bombs.forEach((bomb) => {\n\t\t\t\tif (bomb.isDestroyed && !bomb.isExploding) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbomb.checkPlayerHit(playerTank);\n\t\t\t\tbomb.draw(this.context as CanvasRenderingContext2D);\n\t\t\t});\n\t\t});\n\t\tplayerTank.draw(this.context as CanvasRenderingContext2D);\n\t\tif (!playerTank.isDestroyed) {\n\t\t\tplayerTank.reticule.draw(\n\t\t\t\tthis.context as CanvasRenderingContext2D,\n\t\t\t\tplayerTank.xPos,\n\t\t\t\tplayerTank.yPos,\n\t\t\t\tplayerTank.aimXPos,\n\t\t\t\tplayerTank.aimYPos\n\t\t\t);\n\t\t}\n\t\tplayerTank.ammunition.forEach((ammunition) => {\n\t\t\tif (ammunition.isDestroyed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tammunition.updatePosition(playerTank.obstacleCanvas);\n\t\t\tammunition.checkEnemyHit(enemyTanks);\n\t\t\tammunition.draw(this.context as CanvasRenderingContext2D);\n\t\t});\n\t\tplayerTank.bombs.forEach((bomb) => {\n\t\t\tif (bomb.isDestroyed && !bomb.isExploding) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tbomb.checkEnemyHit(enemyTanks);\n\t\t\tbomb.draw(this.context as CanvasRenderingContext2D);\n\t\t});\n\t}\n}\n","import { GameRenderer } from './GameRenderer';\nimport { ObstacleCanvas } from './ObstacleCanvas';\nimport { Tank } from './tanks/Tank';\n\nexport class GameCanvas {\n\tpublic gameRenderer: GameRenderer;\n\tprivate playerTank: Tank | null = null;\n\tprivate enemyTanks: Tank[] = [];\n\tprivate lastRenderTime: number;\n\tpublic obstacleCanvas: ObstacleCanvas;\n\tpublic width: number;\n\tpublic height: number;\n\tpublic animationFrameID: number | null = null;\n\n\tconstructor(canvasSelector: string, width: number, height: number, obstacleCanvas: ObstacleCanvas) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.obstacleCanvas = obstacleCanvas;\n\t\tthis.animationFrameID = null;\n\t\tthis.gameRenderer = new GameRenderer(document.querySelector(canvasSelector) as HTMLCanvasElement);\n\t\tthis.gameRenderer.initializeCanvas(this.width, this.height);\n\t\tthis.lastRenderTime = 0;\n\t\twindow.addEventListener('resize', this.resizeCanvas.bind(this));\n\t}\n\n\tpublic start() {\n\t\tif (!this.animationFrameID) {\n\t\t\tthis.animationFrameID = requestAnimationFrame(this.gameLoop.bind(this));\n\t\t}\n\t}\n\n\tpublic stop() {\n\t\tif (this.animationFrameID) {\n\t\t\tcancelAnimationFrame(this.animationFrameID);\n\t\t\tthis.animationFrameID = null;\n\t\t}\n\t}\n\n\tprivate resizeCanvas(): void {}\n\n\tprivate gameLoop(timeStamp: number): void {\n\t\tif (this.playerTank != null) {\n\t\t\tconst progress = timeStamp - this.lastRenderTime;\n\t\t\tthis.gameRenderer.render(progress, this.playerTank, this.enemyTanks);\n\t\t\tthis.lastRenderTime = timeStamp;\n\t\t\tthis.animationFrameID = requestAnimationFrame(this.gameLoop.bind(this));\n\t\t}\n\t}\n\n\tpublic addEnemyTank(tank: Tank): void {\n\t\tthis.enemyTanks.push(tank);\n\t}\n\n\tpublic addPlayerTank(tank: Tank): void {\n\t\tthis.playerTank = tank;\n\t}\n}\n","import { GameCanvas } from './GameCanvas';\nimport { ObstacleCanvas } from './ObstacleCanvas';\nimport { Tank } from './tanks/Tank';\n\nexport class Node {\n\tpublic x: number;\n\tpublic y: number;\n\tpublic g = 0;\n\tpublic h = 0;\n\tpublic f = 0;\n\tpublic walkable = true;\n\tpublic parent: Node | null = null;\n\n\tconstructor(x: number, y: number) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n}\n\nexport class NavigationGrid {\n\tpublic grid: Node[][] = [];\n\tpublic gridCellWidth = 30;\n\tpublic gridXLength: number;\n\tpublic gridYLength: number;\n\tpublic path: Node[] = [];\n\tpublic stationary: boolean;\n\n\tconstructor(gameCanvas?: GameCanvas, obstacleCanvas?: ObstacleCanvas, stationary: boolean = true) {\n\t\tif (!gameCanvas || !obstacleCanvas || stationary) {\n\t\t\tthis.gridXLength = 0;\n\t\t\tthis.gridYLength = 0;\n\t\t\tthis.stationary = true;\n\t\t\treturn;\n\t\t}\n\t\tthis.stationary = false;\n\t\tthis.gridXLength = Math.floor(gameCanvas.width / this.gridCellWidth);\n\t\tthis.gridYLength = Math.floor(gameCanvas.height / this.gridCellWidth);\n\t\tfor (let x = 0; x < this.gridXLength; x++) {\n\t\t\tthis.grid[x] = [];\n\t\t\tfor (let y = 0; y < this.gridYLength; y++) {\n\t\t\t\tthis.grid[x][y] = new Node(x, y);\n\t\t\t\tconst gridXLeft = x * this.gridCellWidth;\n\t\t\t\tconst gridXRight = gridXLeft + this.gridCellWidth;\n\t\t\t\tconst gridYTop = y * this.gridCellWidth;\n\t\t\t\tconst gridYBottom = gridYTop + this.gridCellWidth;\n\t\t\t\tthis.grid[x][y].walkable = !obstacleCanvas.obstacles.some(\n\t\t\t\t\t(obs) => gridXRight > obs.xLeft && gridXLeft < obs.xRight && gridYBottom > obs.yTop && gridYTop < obs.yBottom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treset(): void {\n\t\tfor (let x = 0; x < this.gridXLength; x++) {\n\t\t\tfor (let y = 0; y < this.gridYLength; y++) {\n\t\t\t\tthis.grid[x][y].f = 0;\n\t\t\t\tthis.grid[x][y].g = 0;\n\t\t\t\tthis.grid[x][y].h = 0;\n\t\t\t\tthis.grid[x][y].parent = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetNodeFromTank(tank: Tank): Node {\n\t\tif (this.stationary) {\n\t\t\treturn new Node(0, 0);\n\t\t}\n\t\tlet xGridCoordinate: number = Math.floor((tank.xPos + tank.size / 2) / this.gridCellWidth);\n\t\tlet yGridCoordinate: number = Math.floor((tank.yPos + tank.size / 2) / this.gridCellWidth);\n\n\t\txGridCoordinate = Math.max(0, Math.min(xGridCoordinate, this.gridXLength - 1));\n\t\tyGridCoordinate = Math.max(0, Math.min(yGridCoordinate, this.gridYLength - 1));\n\t\treturn this.grid[xGridCoordinate][yGridCoordinate];\n\t}\n\n\tgetRandomNodeInRadiusOfTarget(target: Node, radius: number): Node {\n\t\tconst candidateNodes: Node[] = [];\n\t\tfor (let x = 0; x < this.gridXLength; x++) {\n\t\t\tfor (let y = 0; y < this.gridYLength; y++) {\n\t\t\t\tconst node = this.grid[x][y];\n\t\t\t\tconst distance = Math.sqrt(Math.pow(node.x - target.x, 2) + Math.pow(node.y - target.y, 2));\n\t\t\t\tif (distance <= radius + 1 && distance >= radius - 1 && node.walkable) {\n\t\t\t\t\tcandidateNodes.push(node);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst randomIndex = Math.floor(Math.random() * candidateNodes.length);\n\t\treturn candidateNodes[randomIndex];\n\t}\n\n\taStar(start: Node, target: Node): Node[] | null {\n\t\tconst openSet: Node[] = [start];\n\t\tconst closedSet = new Set<Node>();\n\n\t\twhile (openSet.length > 0) {\n\t\t\tlet current: Node | null = openSet.sort((a, b) => a.f - b.f)[0];\n\n\t\t\tif (current.x === target.x && current.y === target.y) {\n\t\t\t\tconst path = [];\n\t\t\t\twhile (current !== null) {\n\t\t\t\t\tpath.unshift(current);\n\t\t\t\t\tcurrent = current.parent;\n\t\t\t\t}\n\t\t\t\treturn path;\n\t\t\t}\n\n\t\t\topenSet.splice(openSet.indexOf(current), 1);\n\t\t\tclosedSet.add(current);\n\n\t\t\tconst neighbors = this.getWalkableNeighbors(current);\n\n\t\t\tfor (const neighbor of neighbors) {\n\t\t\t\tif (closedSet.has(neighbor)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst tentativeG = current.g + (neighbor.x - current.x === 0 || neighbor.y - current.y === 0 ? 1 : Math.SQRT2);\n\t\t\t\tif (!openSet.includes(neighbor)) {\n\t\t\t\t\topenSet.push(neighbor);\n\t\t\t\t} else if (tentativeG >= neighbor.g) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tneighbor.parent = current;\n\t\t\t\tneighbor.g = tentativeG;\n\t\t\t\tneighbor.h = Math.round(Math.sqrt(Math.pow(neighbor.x - target.x, 2) + Math.pow(neighbor.y - target.y, 2)));\n\t\t\t\tneighbor.f = neighbor.g + neighbor.h;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetWalkableNeighbors(node: Node): Node[] {\n\t\t// Get the 8 nodes surrounding the current only if its walkable\n\t\tconst neighbors: Node[] = [];\n\t\tfor (let dx = -1; dx <= 1; dx++) {\n\t\t\tfor (let dy = -1; dy <= 1; dy++) {\n\t\t\t\tif (dx === 0 && dy === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst x = node.x + dx;\n\t\t\t\tconst y = node.y + dy;\n\n\t\t\t\tif (x >= 0 && y >= 0 && x < this.gridXLength && y < this.gridYLength && this.grid[x][y].walkable) {\n\t\t\t\t\tneighbors.push(this.grid[x][y]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn neighbors;\n\t}\n}\n","export class Obstacle {\n\tpublic xLeft: number;\n\tpublic xRight: number;\n\tpublic yTop: number;\n\tpublic yBottom: number;\n\tpublic width: number;\n\tpublic height: number;\n\n\tconstructor(startX: number, startY: number, width: number, height: number) {\n\t\tthis.xLeft = startX;\n\t\tthis.yTop = startY;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.yBottom = this.yTop + this.height;\n\t\tthis.xRight = this.xLeft + this.width;\n\t}\n\n\tdraw(context: CanvasRenderingContext2D): void {\n\t\tcontext.beginPath();\n\t\tcontext.rect(this.xLeft, this.yTop, this.width, this.height);\n\t\tcontext.fillStyle = 'black';\n\t\tcontext.fill();\n\t}\n}\n","import { Obstacle } from './Obstacle';\n\nexport class ObstacleCanvas {\n\tprivate obstacleCanvas: HTMLCanvasElement;\n\tpublic obstacles: Obstacle[] = [];\n\tpublic width: number;\n\tpublic height: number;\n\n\tconstructor(obstacleCanvasSelector: string, width: number, height: number, obstacles: Obstacle[]) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.obstacles = obstacles;\n\t\twindow.addEventListener('resize', this.resizeCanvas.bind(this));\n\t\tthis.obstacleCanvas = document.querySelector(obstacleCanvasSelector) as HTMLCanvasElement;\n\t\tthis.obstacleCanvas.width = width;\n\t\tthis.obstacleCanvas.height = height;\n\t\tobstacles.forEach((obstacle) => {\n\t\t\tobstacle.draw(this.obstacleCanvas.getContext('2d') as CanvasRenderingContext2D);\n\t\t});\n\t}\n\n\tpublic clearObstacles(): void {\n\t\tconst context = this.obstacleCanvas.getContext('2d');\n\t\tif (context) {\n\t\t\tcontext.clearRect(0, 0, this.obstacleCanvas.width, this.obstacleCanvas.height);\n\t\t}\n\t\tthis.obstacles = [];\n\t}\n\n\tprivate resizeCanvas(): void {}\n}\n","export class Reticule {\n\tprotected color: string;\n\tprotected dashPattern: [number, number]; // [dashLengthInPixels, spaceLengthInPixels]\n\tprotected renderReticule: boolean;\n\tprotected tankSize: number;\n\tprotected reticuleWidth = 5;\n\n\tconstructor(dashPattern: [number, number], color: string, renderReticule: boolean, tankSize: number) {\n\t\tthis.color = color;\n\t\tthis.dashPattern = dashPattern;\n\t\tthis.renderReticule = renderReticule;\n\t\tthis.tankSize = tankSize;\n\t}\n\n\tpublic draw(\n\t\tcontext: CanvasRenderingContext2D,\n\t\ttankXPos: number,\n\t\ttankYPos: number,\n\t\tmouseXPos: number,\n\t\tmouseYpos: number\n\t): void {\n\t\tif (this.renderReticule) {\n\t\t\tcontext.strokeStyle = this.color;\n\t\t\tcontext.setLineDash(this.dashPattern);\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(tankXPos + this.tankSize / 2, tankYPos + this.tankSize / 2);\n\t\t\tcontext.lineTo(mouseXPos, mouseYpos);\n\t\t\tcontext.lineWidth = this.reticuleWidth;\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n}\n\nexport class NoReticule extends Reticule {\n\tconstructor() {\n\t\tsuper([0, 0], 'blue', false, 0);\n\t}\n}\n\nexport class SimplePlayerReticule extends Reticule {\n\tconstructor(tankSize: number) {\n\t\tsuper([5, 5], 'blue', true, tankSize);\n\t}\n}\n\nexport class CustomColorReticule extends Reticule {\n\tconstructor(tankSize: number, color: string) {\n\t\tsuper([4, 1], color, true, tankSize);\n\t}\n}\n\nexport class AdjustingCustomColorReticule extends Reticule {\n\tprivate maxReticuleLength: number;\n\n\tconstructor(tankSize: number, color: string, maxReticuleLength: number) {\n\t\tsuper([1, 1], color, true, tankSize);\n\t\tthis.maxReticuleLength = maxReticuleLength;\n\t}\n\n\toverride draw(\n\t\tcontext: CanvasRenderingContext2D,\n\t\ttankXPosition: number,\n\t\ttankYPosition: number,\n\t\tmouseXPosition: number,\n\t\tmouseYPosition: number\n\t): void {\n\t\tconst xDist = mouseXPosition - tankXPosition;\n\t\tconst yDist = mouseYPosition - tankYPosition;\n\t\tconst distance = Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));\n\t\tconst distanceToMaxDistanceRatio = distance / this.maxReticuleLength;\n\t\tconst distanceToMaxDistanceRatioInverse = 1 - distanceToMaxDistanceRatio;\n\t\tconst dashLength = distanceToMaxDistanceRatio * 10 + 2;\n\t\tconst spaceLength = distanceToMaxDistanceRatioInverse * 10 + 5;\n\n\t\tif (this.renderReticule) {\n\t\t\tcontext.strokeStyle = this.color;\n\t\t\tcontext.setLineDash([dashLength, spaceLength]);\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(tankXPosition + this.tankSize / 2, tankYPosition + this.tankSize / 2);\n\t\t\tcontext.lineTo(mouseXPosition, mouseYPosition);\n\t\t\tcontext.lineWidth = this.reticuleWidth;\n\t\t\tcontext.stroke();\n\n\t\t\tcontext.setLineDash([]);\n\t\t\tconst xLength = 10;\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(mouseXPosition - xLength, mouseYPosition - xLength);\n\t\t\tcontext.lineTo(mouseXPosition + xLength, mouseYPosition + xLength);\n\t\t\tcontext.stroke();\n\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(mouseXPosition - xLength, mouseYPosition + xLength);\n\t\t\tcontext.lineTo(mouseXPosition + xLength, mouseYPosition - xLength);\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n}\n","import { Ammunition } from '../Ammunition';\nimport { AudioManager } from '../AudioManager';\nimport { Bomb } from '../Bomb';\nimport { NavigationGrid, Node } from '../NavigationGrid';\nimport { ObstacleCanvas } from '../ObstacleCanvas';\nimport { Reticule } from '../Reticule';\nimport { Direction, Tank } from './Tank';\n\nexport class EnemyTank extends Tank {\n\tpublic navigationGrid: NavigationGrid;\n\tpublic aggressionFactor = 15; // Distance tank should maintain from its target\n\tpublic currentNode: Node;\n\tpublic path: Node[] | null = [];\n\tpublic pathRecaculationInterval = 60;\n\tpublic drawNavigationGrid = false;\n\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\treticule: Reticule,\n\t\txPos: number,\n\t\tyPos: number,\n\t\tspeed: number,\n\t\tsize: number,\n\t\taggressionFactor: number,\n\t\tcolor: string,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\tammunition: Ammunition[],\n\t\tbombs: Bomb[],\n\t\tnavigationGrid: NavigationGrid,\n\t\taudioManager: AudioManager\n\t) {\n\t\tsuper(canvas, reticule, xPos, yPos, speed, size, color, obstacleCanvas, ammunition, bombs, audioManager);\n\t\tthis.aggressionFactor = aggressionFactor;\n\t\tthis.navigationGrid = navigationGrid;\n\t\tthis.currentNode = this.navigationGrid.getNodeFromTank(this);\n\t}\n\n\tpublic override draw(context: CanvasRenderingContext2D): void {\n\t\tif (this.drawNavigationGrid) {\n\t\t\tcontext.lineWidth = 1;\n\t\t\tfor (let i = 0; i <= this.navigationGrid.gridYLength; i++) {\n\t\t\t\tcontext.fillStyle = 'blue';\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(0, i * this.navigationGrid.gridCellWidth);\n\t\t\t\tcontext.lineTo(\n\t\t\t\t\tthis.navigationGrid.gridXLength * this.navigationGrid.gridCellWidth,\n\t\t\t\t\ti * this.navigationGrid.gridCellWidth\n\t\t\t\t);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t\tfor (let j = 0; j <= this.navigationGrid.gridXLength; j++) {\n\t\t\t\tcontext.fillStyle = 'blue';\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(j * this.navigationGrid.gridCellWidth, 0);\n\t\t\t\tcontext.lineTo(\n\t\t\t\t\tj * this.navigationGrid.gridCellWidth,\n\t\t\t\t\tthis.navigationGrid.gridXLength * this.navigationGrid.gridCellWidth\n\t\t\t\t);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t\tcontext.fillStyle = this.color;\n\t\t\tthis.path?.forEach((value: Node, index: number, array: Node[]) => {\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.arc(\n\t\t\t\t\tvalue.x * this.navigationGrid.gridCellWidth + this.navigationGrid.gridCellWidth / 2,\n\t\t\t\t\tvalue.y * this.navigationGrid.gridCellWidth + this.navigationGrid.gridCellWidth / 2,\n\t\t\t\t\t5,\n\t\t\t\t\t0,\n\t\t\t\t\t2 * Math.PI\n\t\t\t\t);\n\t\t\t\tcontext.fill();\n\t\t\t});\n\t\t}\n\t\tsuper.draw(context);\n\t}\n\n\tpublic override updatePosition(playerTank: Tank): void {\n\t\tthis.pathRecaculationInterval -= 1;\n\t\tif (this.path == null || this.path.length == 0 || this.pathRecaculationInterval == 0) {\n\t\t\tthis.navigationGrid.reset();\n\t\t\tconst startNode: Node = this.navigationGrid.getNodeFromTank(this);\n\t\t\tconst targetNode: Node = this.navigationGrid.getNodeFromTank(playerTank);\n\t\t\tconst destinationNode: Node = this.navigationGrid.getRandomNodeInRadiusOfTarget(\n\t\t\t\ttargetNode,\n\t\t\t\tthis.aggressionFactor\n\t\t\t);\n\t\t\tthis.path = this.navigationGrid.aStar(startNode, destinationNode);\n\t\t\tthis.pathRecaculationInterval = 60;\n\t\t\tif (this.path == null) {\n\t\t\t\tconsole.log(`Path is null`);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.currentNode = this.navigationGrid.getNodeFromTank(this);\n\t\t\tconst dx = this.path[0].x - this.currentNode.x;\n\t\t\tconst dy = this.path[0].y - this.currentNode.y;\n\n\t\t\tif (this.wasLastMoveBlocked && this.consecutiveDirectionMoves > 2) {\n\t\t\t\tconst randomDirection: Direction = this.getRandomDirection();\n\t\t\t\tthis.moveInCardinalDirection(randomDirection);\n\t\t\t\tthis.consecutiveDirectionMoves = 0;\n\t\t\t\tconst randomNumber: number = Math.random();\n\t\t\t\tif (dx === 1 && dy === 0) {\n\t\t\t\t\tif (randomNumber < 0.5) {\n\t\t\t\t\t\tthis.moveSouthEast();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.moveNorthEast();\n\t\t\t\t\t}\n\t\t\t\t} else if (dx === -1 && dy === 0) {\n\t\t\t\t\tif (randomNumber < 0.5) {\n\t\t\t\t\t\tthis.moveNorthWest();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.moveSouthWest();\n\t\t\t\t\t}\n\t\t\t\t} else if (dx === 0 && dy === 1) {\n\t\t\t\t\tif (randomNumber < 0.5) {\n\t\t\t\t\t\tthis.moveSouthEast();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.moveSouthWest();\n\t\t\t\t\t}\n\t\t\t\t} else if (dx === 0 && dy === -1) {\n\t\t\t\t\tif (randomNumber < 0.5) {\n\t\t\t\t\t\tthis.moveNorthWest();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.moveNorthEast();\n\t\t\t\t\t}\n\t\t\t\t} else if (dx === 1 && dy === 1) {\n\t\t\t\t\tif (randomNumber < 0.5) {\n\t\t\t\t\t\tthis.moveSouth();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.moveEast();\n\t\t\t\t\t}\n\t\t\t\t} else if (dx === 1 && dy === -1) {\n\t\t\t\t\tif (randomNumber < 0.5) {\n\t\t\t\t\t\tthis.moveNorth();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.moveEast();\n\t\t\t\t\t}\n\t\t\t\t} else if (dx === -1 && dy === 1) {\n\t\t\t\t\tif (randomNumber < 0.5) {\n\t\t\t\t\t\tthis.moveSouth();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.moveWest();\n\t\t\t\t\t}\n\t\t\t\t} else if (dx === -1 && dy === -1) {\n\t\t\t\t\tif (randomNumber < 0.5) {\n\t\t\t\t\t\tthis.moveNorth();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.moveWest();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (dx === 1 && dy === 0) {\n\t\t\t\t\tthis.moveEast();\n\t\t\t\t} else if (dx === -1 && dy === 0) {\n\t\t\t\t\tthis.moveWest();\n\t\t\t\t} else if (dx === 0 && dy === 1) {\n\t\t\t\t\tthis.moveSouth();\n\t\t\t\t} else if (dx === 0 && dy === -1) {\n\t\t\t\t\tthis.moveNorth();\n\t\t\t\t} else if (dx === 1 && dy === 1) {\n\t\t\t\t\tthis.moveSouthEast();\n\t\t\t\t} else if (dx === 1 && dy === -1) {\n\t\t\t\t\tthis.moveNorthEast();\n\t\t\t\t} else if (dx === -1 && dy === 1) {\n\t\t\t\t\tthis.moveSouthWest();\n\t\t\t\t} else if (dx === -1 && dy === -1) {\n\t\t\t\t\tthis.moveNorthWest();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.path[0].x == this.currentNode.x && this.path[0].y == this.currentNode.y) {\n\t\t\t\tthis.path.splice(0, 1);\n\t\t\t}\n\t\t}\n\n\t\tthis.xLeft = this.xPos;\n\t\tthis.xRight = this.xPos + this.size;\n\t\tthis.yTop = this.yPos;\n\t\tthis.yBottom = this.yPos + this.size;\n\t}\n}\n","import { Ammunition } from '../Ammunition';\nimport { AudioManager } from '../AudioManager';\nimport { Bomb } from '../Bomb';\nimport { NavigationGrid } from '../NavigationGrid';\nimport { ObstacleCanvas } from '../ObstacleCanvas';\nimport { NoReticule } from '../Reticule';\nimport { EnemyTank } from './EnemyTank';\nimport { Tank } from './Tank';\n\nexport class BomberTank extends EnemyTank {\n\tpublic minTimeBetweenShotsMS = 20000;\n\tpublic timeBetweenShotsIsElapsed = true;\n\tpublic minTimeBetweenBombPlantsMS = 1000;\n\tpublic timeBetweenPlantsIsElapsed = true;\n\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\txPos: number,\n\t\tyPos: number,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\tammunition: Ammunition[],\n\t\tbombs: Bomb[],\n\t\tnavigationGrid: NavigationGrid,\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst bomberTankSpeed = 2;\n\t\tconst bomberTankSize = 30;\n\t\tconst bomberTankAggressionFactor = 4;\n\t\tconst bomberTankColor = 'yellow';\n\t\tsuper(\n\t\t\tcanvas,\n\t\t\tnew NoReticule(),\n\t\t\txPos,\n\t\t\tyPos,\n\t\t\tbomberTankSpeed,\n\t\t\tbomberTankSize,\n\t\t\tbomberTankAggressionFactor,\n\t\t\tbomberTankColor,\n\t\t\tobstacleCanvas,\n\t\t\tammunition,\n\t\t\tbombs,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t}\n\n\tpublic override plantBomb(playerTank: Tank): void {\n\t\tif (this.timeBetweenPlantsIsElapsed && !this.isDestroyed) {\n\t\t\tconst availableBombIndex = this.bombs.findIndex((bomb) => bomb.isDestroyed && !bomb.isExploding);\n\t\t\tif (availableBombIndex !== -1) {\n\t\t\t\tthis.bombs[availableBombIndex].xPos = this.xPos + this.size / 2;\n\t\t\t\tthis.bombs[availableBombIndex].yPos = this.yPos + this.size / 2;\n\t\t\t\tconst willHitPlayerTank: boolean = this.bombs[availableBombIndex].isPointInsideBlastRadius(\n\t\t\t\t\tplayerTank.xPos + playerTank.tankMidpoint,\n\t\t\t\t\tplayerTank.yPos + playerTank.tankMidpoint\n\t\t\t\t);\n\t\t\t\tif (willHitPlayerTank) {\n\t\t\t\t\tthis.bombs[availableBombIndex].isDestroyed = false;\n\t\t\t\t\tthis.bombs[availableBombIndex].setFuse();\n\t\t\t\t\tthis.timeBetweenPlantsIsElapsed = false;\n\t\t\t\t\tsetTimeout((): void => {\n\t\t\t\t\t\tthis.timeBetweenPlantsIsElapsed = true;\n\t\t\t\t\t}, this.minTimeBetweenBombPlantsMS);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic override shoot(playerTank: Tank): void {\n\t\tif (this.timeBetweenShotsIsElapsed && !this.isDestroyed) {\n\t\t\tconst availableAmmunitionIndex = this.ammunition.findIndex((ammunition) => ammunition.isDestroyed);\n\t\t\tif (availableAmmunitionIndex !== -1) {\n\t\t\t\tthis.ammunition[availableAmmunitionIndex].reload(\n\t\t\t\t\tthis.xPos + this.size / 2,\n\t\t\t\t\tthis.yPos + this.size / 2,\n\t\t\t\t\tthis.aimAngle,\n\t\t\t\t\ttrue,\n\t\t\t\t\tthis.canvasWidth,\n\t\t\t\t\tthis.canvasHeight\n\t\t\t\t);\n\t\t\t\tconst willHitPlayerTank: boolean = this.ammunition[availableAmmunitionIndex].willHitPlayerTank(\n\t\t\t\t\tthis.obstacleCanvas,\n\t\t\t\t\tplayerTank\n\t\t\t\t);\n\t\t\t\tif (willHitPlayerTank) {\n\t\t\t\t\tthis.ammunition[availableAmmunitionIndex].isDestroyed = false;\n\t\t\t\t\tthis.timeBetweenShotsIsElapsed = false;\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.timeBetweenShotsIsElapsed = true;\n\t\t\t\t\t}, this.minTimeBetweenShotsMS);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic override aim(mouseXPos: number, mouseYpos: number, playerTank: Tank): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dx: number = playerTank.xPos + playerTank.size / 2 - this.xPos - this.tankMidpoint;\n\t\tconst dy: number = playerTank.yPos + playerTank.size / 2 - this.yPos - this.tankMidpoint;\n\t\tlet theta = Math.atan2(dy, dx);\n\t\tif (theta < 0) {\n\t\t\ttheta += 2 * Math.PI;\n\t\t}\n\t\tthis.aimAngle = theta;\n\t}\n}\n","import { KeyStates } from '../../utils/KeyStates';\nimport { Ammunition, PlayerAmmunition } from '../Ammunition';\nimport { AudioFile, AudioManager } from '../AudioManager';\nimport { Bomb, PlayerBomb } from '../Bomb';\nimport { ObstacleCanvas } from '../ObstacleCanvas';\nimport { AdjustingCustomColorReticule, Reticule } from '../Reticule';\nimport { Tank } from './Tank';\n\nexport class PlayerTank extends Tank {\n\tpublic keyStates: KeyStates = {\n\t\tArrowUp: false,\n\t\tArrowDown: false,\n\t\tArrowLeft: false,\n\t\tArrowRight: false,\n\t\tw: false,\n\t\ta: false,\n\t\ts: false,\n\t\td: false,\n\t\tW: false,\n\t\tA: false,\n\t\tS: false,\n\t\tD: false,\n\t};\n\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\treticule: Reticule,\n\t\txPos: number,\n\t\tyPos: number,\n\t\tspeed: number,\n\t\tsize: number,\n\t\tcolor: string,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\tammunition: Ammunition[],\n\t\tbombs: Bomb[],\n\t\taudioManager: AudioManager\n\t) {\n\t\tsuper(canvas, reticule, xPos, yPos, speed, size, color, obstacleCanvas, ammunition, bombs, audioManager);\n\n\t\tdocument.addEventListener('keydown', (event: KeyboardEvent) => {\n\t\t\tif (this.keyStates.hasOwnProperty(event.key)) {\n\t\t\t\tthis.keyStates[event.key] = true;\n\t\t\t}\n\t\t});\n\n\t\tdocument.addEventListener('keydown', (event: KeyboardEvent) => {\n\t\t\tif (event.code === 'Space') {\n\t\t\t\tthis.plantBomb(this);\n\t\t\t}\n\t\t});\n\n\t\tdocument.addEventListener('keyup', (event: KeyboardEvent) => {\n\t\t\tif (this.keyStates.hasOwnProperty(event.key)) {\n\t\t\t\tthis.keyStates[event.key] = false;\n\t\t\t}\n\t\t});\n\n\t\tcanvas.addEventListener('mousemove', (event: MouseEvent) => {\n\t\t\tthis.aimXPos = event.clientX - this.xOffset;\n\t\t\tthis.aimYPos = event.clientY - this.yOffset;\n\t\t});\n\n\t\tcanvas.addEventListener('click', (event: MouseEvent) => {\n\t\t\tthis.shoot(this);\n\t\t});\n\t}\n\n\tpublic override updatePosition(playerTank: Tank): void {\n\t\t// Move the tank\n\t\tif (this.up() && this.right()) {\n\t\t\tthis.moveNorthEast();\n\t\t} else if (this.up() && this.left()) {\n\t\t\tthis.moveNorthWest();\n\t\t} else if (this.down() && this.right()) {\n\t\t\tthis.moveSouthEast();\n\t\t} else if (this.down() && this.left()) {\n\t\t\tthis.moveSouthWest();\n\t\t} else if (this.up()) {\n\t\t\tthis.moveNorth();\n\t\t} else if (this.down()) {\n\t\t\tthis.moveSouth();\n\t\t} else if (this.left()) {\n\t\t\tthis.moveWest();\n\t\t} else if (this.right()) {\n\t\t\tthis.moveEast();\n\t\t}\n\n\t\tthis.xLeft = this.xPos;\n\t\tthis.xRight = this.xPos + this.size;\n\t\tthis.yTop = this.yPos;\n\t\tthis.yBottom = this.yPos + this.size;\n\t}\n\n\tpublic override plantBomb(playerTank: Tank): void {\n\t\tif (!this.isDestroyed) {\n\t\t\tconst availableBombIndex = this.bombs.findIndex((bomb) => bomb.isDestroyed);\n\t\t\tif (availableBombIndex !== -1) {\n\t\t\t\tthis.bombs[availableBombIndex].xPos = this.xPos + this.size / 2;\n\t\t\t\tthis.bombs[availableBombIndex].yPos = this.yPos + this.size / 2;\n\t\t\t\tthis.bombs[availableBombIndex].isDestroyed = false;\n\t\t\t\tthis.bombs[availableBombIndex].setFuse();\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic override aim(mouseXPos: number, mouseYpos: number, playerTank: Tank): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tconst dx: number = mouseXPos - this.xPos - this.tankMidpoint;\n\t\tconst dy: number = mouseYpos - this.yPos - this.tankMidpoint;\n\t\tlet theta = Math.atan2(dy, dx);\n\t\tif (theta < 0) {\n\t\t\ttheta += 2 * Math.PI;\n\t\t}\n\t\tthis.aimAngle = theta;\n\t}\n\n\tpublic override shoot(playerTank: Tank): void {\n\t\tif (!this.isDestroyed) {\n\t\t\tconst availableAmmunitionIndex = this.ammunition.findIndex((ammunition) => ammunition.isDestroyed);\n\t\t\tif (availableAmmunitionIndex !== -1) {\n\t\t\t\tthis.audioManager.play(AudioFile.TANK_FIRE);\n\t\t\t\tthis.ammunition[availableAmmunitionIndex] = new PlayerAmmunition(\n\t\t\t\t\tthis.xPos + this.size / 2,\n\t\t\t\t\tthis.yPos + this.size / 2,\n\t\t\t\t\tthis.aimAngle,\n\t\t\t\t\tthis.canvasWidth,\n\t\t\t\t\tthis.canvasHeight,\n\t\t\t\t\tfalse,\n\t\t\t\t\tthis.audioManager\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic up(): boolean {\n\t\treturn this.keyStates.ArrowUp || this.keyStates.w || this.keyStates.W;\n\t}\n\n\tpublic down(): boolean {\n\t\treturn this.keyStates.ArrowDown || this.keyStates.s || this.keyStates.S;\n\t}\n\n\tpublic left(): boolean {\n\t\treturn this.keyStates.ArrowLeft || this.keyStates.a || this.keyStates.A;\n\t}\n\n\tpublic right(): boolean {\n\t\treturn this.keyStates.ArrowRight || this.keyStates.d || this.keyStates.D;\n\t}\n}\n\nexport class DefaultPlayerTank extends PlayerTank {\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\txPos: number,\n\t\tyPos: number,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst defaultPlayerTankSpeed = 2;\n\t\tconst defaultPlayerTankSize = 30;\n\t\tconst defaultPlayerTankColor = '#6384a1';\n\t\tconst ammunition: Ammunition[] = [\n\t\t\tnew PlayerAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew PlayerAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew PlayerAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew PlayerAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew PlayerAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t];\n\t\tconst bombs: Bomb[] = [new PlayerBomb(0, 0, true, audioManager), new PlayerBomb(0, 0, true, audioManager)];\n\t\tsuper(\n\t\t\tcanvas,\n\t\t\tnew AdjustingCustomColorReticule(defaultPlayerTankSize, defaultPlayerTankColor, canvas.width),\n\t\t\txPos,\n\t\t\tyPos,\n\t\t\tdefaultPlayerTankSpeed,\n\t\t\tdefaultPlayerTankSize,\n\t\t\tdefaultPlayerTankColor,\n\t\t\tobstacleCanvas,\n\t\t\tammunition,\n\t\t\tbombs,\n\t\t\taudioManager\n\t\t);\n\t}\n}\n","import { Ammunition } from '../Ammunition';\nimport { AudioManager } from '../AudioManager';\nimport { Bomb } from '../Bomb';\nimport { NavigationGrid } from '../NavigationGrid';\nimport { ObstacleCanvas } from '../ObstacleCanvas';\nimport { NoReticule } from '../Reticule';\nimport { EnemyTank } from './EnemyTank';\nimport { Tank } from './Tank';\n\nexport class SimpleMovingTank extends EnemyTank {\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\txPos: number,\n\t\tyPos: number,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\tammunition: Ammunition[],\n\t\tbombs: Bomb[],\n\t\tnavigationGrid: NavigationGrid,\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst simpleMovingTankSpeed = 1.2;\n\t\tconst simpleMovingTankSize = 30;\n\t\tconst simpleMovingTankAggressionFactor = 15;\n\t\tconst simpleMovingTankColor = '#fd8a8a';\n\t\tsuper(\n\t\t\tcanvas,\n\t\t\tnew NoReticule(),\n\t\t\txPos,\n\t\t\tyPos,\n\t\t\tsimpleMovingTankSpeed,\n\t\t\tsimpleMovingTankSize,\n\t\t\tsimpleMovingTankAggressionFactor,\n\t\t\tsimpleMovingTankColor,\n\t\t\tobstacleCanvas,\n\t\t\tammunition,\n\t\t\tbombs,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t}\n\n\tpublic override shoot(playerTank: Tank): void {\n\t\tconst availableAmmunitionIndex = this.ammunition.findIndex((ammunition) => ammunition.isDestroyed);\n\t\tif (availableAmmunitionIndex !== -1) {\n\t\t\tthis.ammunition[availableAmmunitionIndex].reload(\n\t\t\t\tthis.xPos + this.size / 2,\n\t\t\t\tthis.yPos + this.size / 2,\n\t\t\t\tthis.aimAngle,\n\t\t\t\ttrue,\n\t\t\t\tthis.canvasWidth,\n\t\t\t\tthis.canvasHeight\n\t\t\t);\n\t\t\tconst willHitPlayerTank: boolean = this.ammunition[availableAmmunitionIndex].willHitPlayerTank(\n\t\t\t\tthis.obstacleCanvas,\n\t\t\t\tplayerTank\n\t\t\t);\n\t\t\tif (willHitPlayerTank) {\n\t\t\t\tthis.ammunition[availableAmmunitionIndex].isDestroyed = false;\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic override aim(mouseXPos: number, mouseYpos: number, playerTank: Tank): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dx: number = playerTank.xPos + playerTank.size / 2 - this.xPos - this.tankMidpoint;\n\t\tconst dy: number = playerTank.yPos + playerTank.size / 2 - this.yPos - this.tankMidpoint;\n\t\tlet theta = Math.atan2(dy, dx);\n\t\tif (theta < 0) {\n\t\t\ttheta += 2 * Math.PI;\n\t\t}\n\t\tthis.aimAngle = theta;\n\t}\n}\n","import { Ammunition } from '../Ammunition';\nimport { AudioManager } from '../AudioManager';\nimport { Bomb } from '../Bomb';\nimport { NavigationGrid } from '../NavigationGrid';\nimport { ObstacleCanvas } from '../ObstacleCanvas';\nimport { NoReticule } from '../Reticule';\nimport { EnemyTank } from './EnemyTank';\nimport { Tank } from './Tank';\n\nexport class StationaryRandomAimTank extends EnemyTank {\n\tpublic aimAngleChangeAmount = 0;\n\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\txPos: number,\n\t\tyPos: number,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\tammunition: Ammunition[],\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst stationaryRandomAimTankSpeed = 0;\n\t\tconst stationaryRandomAimTankSize = 30;\n\t\tconst stationaryRandomAimTankAggressionFactor = 0;\n\t\tconst fastTankColor = '#ebe1b9';\n\t\tconst bombs: Bomb[] = [];\n\t\tconst navigationGrid: NavigationGrid = new NavigationGrid();\n\t\tsuper(\n\t\t\tcanvas,\n\t\t\tnew NoReticule(),\n\t\t\txPos,\n\t\t\tyPos,\n\t\t\tstationaryRandomAimTankSpeed,\n\t\t\tstationaryRandomAimTankSize,\n\t\t\tstationaryRandomAimTankAggressionFactor,\n\t\t\tfastTankColor,\n\t\t\tobstacleCanvas,\n\t\t\tammunition,\n\t\t\tbombs,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t}\n\n\tprivate getAngleChangeAmount(): number {\n\t\tconst max = 360;\n\t\tconst min = -360;\n\t\tconst randomAmount: number = Math.floor(Math.random() * (max - min + 1)) + min;\n\t\treturn randomAmount;\n\t}\n\n\tpublic override updatePosition(playerTank: Tank): void {\n\t\treturn;\n\t}\n\n\tpublic override shoot(playerTank: Tank): void {\n\t\tconst availableAmmunitionIndex = this.ammunition.findIndex((ammunition) => ammunition.isDestroyed);\n\t\tif (availableAmmunitionIndex !== -1) {\n\t\t\tthis.ammunition[availableAmmunitionIndex].reload(\n\t\t\t\tthis.xPos + this.size / 2,\n\t\t\t\tthis.yPos + this.size / 2,\n\t\t\t\tthis.aimAngle,\n\t\t\t\ttrue,\n\t\t\t\tthis.canvasWidth,\n\t\t\t\tthis.canvasHeight\n\t\t\t);\n\t\t\tconst willHitPlayerTank: boolean = this.ammunition[availableAmmunitionIndex].willHitPlayerTank(\n\t\t\t\tthis.obstacleCanvas,\n\t\t\t\tplayerTank\n\t\t\t);\n\t\t\tif (willHitPlayerTank) {\n\t\t\t\tthis.ammunition[availableAmmunitionIndex].isDestroyed = false;\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic override aim(mouseXPos: number, mouseYpos: number, playerTank: Tank): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.aimAngleChangeAmount > 0) {\n\t\t\tthis.aimAngle += 0.01;\n\t\t\tthis.aimAngleChangeAmount -= 1;\n\t\t} else if (this.aimAngleChangeAmount < 0) {\n\t\t\tthis.aimAngle -= 0.01;\n\t\t\tthis.aimAngleChangeAmount += 1;\n\t\t} else {\n\t\t\tthis.aimAngleChangeAmount = this.getAngleChangeAmount();\n\t\t}\n\t}\n}\n","import { Ammunition, BasicAIAmmunition } from '../Ammunition';\nimport { AudioManager } from '../AudioManager';\nimport { Bomb } from '../Bomb';\nimport { NavigationGrid } from '../NavigationGrid';\nimport { ObstacleCanvas } from '../ObstacleCanvas';\nimport { NoReticule } from '../Reticule';\nimport { EnemyTank } from './EnemyTank';\nimport { Tank } from './Tank';\n\nexport class StationaryTank extends EnemyTank {\n\tminTimeBetweenShotsMS = 5000;\n\tcanTakeShot = true;\n\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\txPos: number,\n\t\tyPos: number,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst stationaryTankSpeed = 0;\n\t\tconst stationaryTankSize = 30;\n\t\tconst stationaryTankAggressionFactor = 0;\n\t\tconst stationaryTankColor = '#5784ba';\n\t\tconst ammunition: Ammunition[] = [new BasicAIAmmunition(0, 0, 0, 0, 0, true, audioManager)];\n\t\tconst bombs: Bomb[] = [];\n\t\tconst navigationGrid: NavigationGrid = new NavigationGrid();\n\t\tsuper(\n\t\t\tcanvas,\n\t\t\tnew NoReticule(),\n\t\t\txPos,\n\t\t\tyPos,\n\t\t\tstationaryTankSpeed,\n\t\t\tstationaryTankSize,\n\t\t\tstationaryTankAggressionFactor,\n\t\t\tstationaryTankColor,\n\t\t\tobstacleCanvas,\n\t\t\tammunition,\n\t\t\tbombs,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t}\n\n\tpublic override updatePosition(playerTank: Tank): void {\n\t\treturn;\n\t}\n\n\tpublic override shoot(): void {\n\t\tif (!this.canTakeShot || this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\t\tconst availableAmmunitionIndex = this.ammunition.findIndex((ammunition) => ammunition.isDestroyed);\n\t\tif (availableAmmunitionIndex !== -1) {\n\t\t\tthis.ammunition[availableAmmunitionIndex] = new BasicAIAmmunition(\n\t\t\t\tthis.xPos + this.size / 2,\n\t\t\t\tthis.yPos + this.size / 2,\n\t\t\t\tthis.aimAngle,\n\t\t\t\tthis.canvasWidth,\n\t\t\t\tthis.canvasHeight,\n\t\t\t\tfalse,\n\t\t\t\tthis.audioManager\n\t\t\t);\n\t\t\tthis.canTakeShot = false;\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.canTakeShot = true;\n\t\t\t}, this.minTimeBetweenShotsMS);\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic override aim(mouseXPos: number, mouseYpos: number, playerTank: Tank): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dx: number = playerTank.xPos + playerTank.size / 2 - this.xPos - this.tankMidpoint;\n\t\tconst dy: number = playerTank.yPos + playerTank.size / 2 - this.yPos - this.tankMidpoint;\n\t\tlet theta = Math.atan2(dy, dx);\n\t\tif (theta < 0) {\n\t\t\ttheta += 2 * Math.PI;\n\t\t}\n\t\tthis.aimAngle = theta;\n\t}\n}\n","import { Ammunition } from '../Ammunition';\nimport { AudioManager } from '../AudioManager';\nimport { Bomb } from '../Bomb';\nimport { NavigationGrid } from '../NavigationGrid';\nimport { ObstacleCanvas } from '../ObstacleCanvas';\nimport { NoReticule } from '../Reticule';\nimport { EnemyTank } from './EnemyTank';\nimport { Tank } from './Tank';\n\nexport class SuperBomberMovingTank extends EnemyTank {\n\tpublic minTimeBetweenShotsMS = 1000;\n\tpublic timeBetweenShotsIsElapsed = true;\n\tpublic minTimeBetweenBombPlantsMS = 1000;\n\tpublic timeBetweenPlantsIsElapsed = true;\n\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\txPos: number,\n\t\tyPos: number,\n\t\tobstacleCanvas: ObstacleCanvas,\n\t\tammunition: Ammunition[],\n\t\tbombs: Bomb[],\n\t\tnavigationGrid: NavigationGrid,\n\t\taudioManager: AudioManager\n\t) {\n\t\tconst superBomberMovingTankSpeed = 2.2;\n\t\tconst superBomberMovingTankSize = 30;\n\t\tconst superBomberMovingTankAggressionFactor = 5;\n\t\tconst superBomberMovingTankColor = 'pink';\n\t\tsuper(\n\t\t\tcanvas,\n\t\t\tnew NoReticule(),\n\t\t\txPos,\n\t\t\tyPos,\n\t\t\tsuperBomberMovingTankSpeed,\n\t\t\tsuperBomberMovingTankSize,\n\t\t\tsuperBomberMovingTankAggressionFactor,\n\t\t\tsuperBomberMovingTankColor,\n\t\t\tobstacleCanvas,\n\t\t\tammunition,\n\t\t\tbombs,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t}\n\n\tpublic override plantBomb(playerTank: Tank): void {\n\t\tif (this.timeBetweenPlantsIsElapsed && !this.isDestroyed) {\n\t\t\tconst availableBombIndex = this.bombs.findIndex((bomb) => bomb.isDestroyed);\n\t\t\tif (availableBombIndex !== -1) {\n\t\t\t\tthis.bombs[availableBombIndex].xPos = this.xPos + this.size / 2;\n\t\t\t\tthis.bombs[availableBombIndex].yPos = this.yPos + this.size / 2;\n\t\t\t\tconst willHitPlayerTank: boolean = this.bombs[availableBombIndex].isPointInsideBlastRadius(\n\t\t\t\t\tplayerTank.xPos + playerTank.tankMidpoint,\n\t\t\t\t\tplayerTank.yPos + playerTank.tankMidpoint\n\t\t\t\t);\n\t\t\t\tif (willHitPlayerTank) {\n\t\t\t\t\tthis.bombs[availableBombIndex].isDestroyed = false;\n\t\t\t\t\tthis.bombs[availableBombIndex].setFuse();\n\t\t\t\t\tthis.timeBetweenPlantsIsElapsed = false;\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.timeBetweenPlantsIsElapsed = true;\n\t\t\t\t\t}, this.minTimeBetweenBombPlantsMS);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic override shoot(playerTank: Tank): void {\n\t\tif (this.timeBetweenShotsIsElapsed && !this.isDestroyed) {\n\t\t\tconst availableAmmunitionIndex = this.ammunition.findIndex((ammunition) => ammunition.isDestroyed);\n\t\t\tif (availableAmmunitionIndex !== -1) {\n\t\t\t\tthis.ammunition[availableAmmunitionIndex].reload(\n\t\t\t\t\tthis.xPos + this.size / 2,\n\t\t\t\t\tthis.yPos + this.size / 2,\n\t\t\t\t\tthis.aimAngle,\n\t\t\t\t\ttrue,\n\t\t\t\t\tthis.canvasWidth,\n\t\t\t\t\tthis.canvasHeight\n\t\t\t\t);\n\t\t\t\tconst willHitPlayerTank: boolean = this.ammunition[availableAmmunitionIndex].willHitPlayerTank(\n\t\t\t\t\tthis.obstacleCanvas,\n\t\t\t\t\tplayerTank\n\t\t\t\t);\n\t\t\t\tif (willHitPlayerTank) {\n\t\t\t\t\tthis.ammunition[availableAmmunitionIndex].isDestroyed = false;\n\t\t\t\t\tthis.timeBetweenShotsIsElapsed = false;\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.timeBetweenShotsIsElapsed = true;\n\t\t\t\t\t}, this.minTimeBetweenShotsMS);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tpublic override aim(mouseXPos: number, mouseYpos: number, playerTank: Tank): void {\n\t\tif (this.isDestroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dx: number = playerTank.xPos + playerTank.size / 2 - this.xPos - this.tankMidpoint;\n\t\tconst dy: number = playerTank.yPos + playerTank.size / 2 - this.yPos - this.tankMidpoint;\n\t\tlet theta = Math.atan2(dy, dx);\n\t\tif (theta < 0) {\n\t\t\ttheta += 2 * Math.PI;\n\t\t}\n\t\tthis.aimAngle = theta;\n\t}\n}\n","import { Ammunition, BasicAIAmmunition, SuperAIAmmunition } from './Ammunition';\nimport { AudioManager } from './AudioManager';\nimport { BasicBomb, Bomb, LoveBomb } from './Bomb';\nimport { GameCanvas } from './GameCanvas';\nimport { NavigationGrid } from './NavigationGrid';\nimport { Obstacle } from './Obstacle';\nimport { ObstacleCanvas } from './ObstacleCanvas';\nimport { BomberTank } from './tanks/BomberTank';\nimport { DefaultPlayerTank } from './tanks/PlayerTank';\nimport { SimpleMovingTank } from './tanks/SimpleMovingTank';\nimport { StationaryRandomAimTank } from './tanks/StationaryRandomAimTank';\nimport { StationaryTank } from './tanks/StationaryTank';\nimport { SuperBomberMovingTank } from './tanks/SuperBomberMovingTank';\n\nexport class Level {\n\tpublic gameCanvas: GameCanvas;\n\tpublic obstacleCanvas: ObstacleCanvas;\n\tpublic canvasWidth = 1000;\n\tpublic canvasHeight = 500;\n\tpublic audioManager: AudioManager;\n\n\tconstructor(obstacleCanvas: ObstacleCanvas, audioManager: AudioManager) {\n\t\tthis.obstacleCanvas = obstacleCanvas;\n\t\tthis.gameCanvas = new GameCanvas('#game-canvas', this.canvasWidth, this.canvasHeight, obstacleCanvas);\n\t\tthis.audioManager = audioManager;\n\t}\n\n\tpublic stop() {\n\t\tthis.gameCanvas.stop();\n\t}\n\n\tpublic start() {\n\t\tthis.gameCanvas.start();\n\t}\n}\n\nexport class Level1 extends Level {\n\tconstructor(audioManager: AudioManager) {\n\t\tconst obs: Obstacle = new Obstacle(300, 200, 40, 100);\n\t\tconst obstacleCanvas = new ObstacleCanvas('#obstacle-canvas', 1000, 500, [obs]);\n\t\tsuper(obstacleCanvas, audioManager);\n\t\tconst stationaryTank = new StationaryTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t900,\n\t\t\t240,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addEnemyTank(stationaryTank);\n\n\t\tconst playerTank = new DefaultPlayerTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t100,\n\t\t\t250,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addPlayerTank(playerTank);\n\t}\n}\n\nexport class Level2 extends Level {\n\tconstructor(audioManager: AudioManager) {\n\t\tconst obs: Obstacle = new Obstacle(300, 200, 40, 100);\n\t\tconst obstacleCanvas = new ObstacleCanvas('#obstacle-canvas', 1000, 500, [obs]);\n\t\tsuper(obstacleCanvas, audioManager);\n\n\t\tconst stationaryTank1 = new StationaryTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t100,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tconst stationaryTank2 = new StationaryTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t900,\n\t\t\t240,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tconst stationaryTank3 = new StationaryTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t400,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addEnemyTank(stationaryTank1);\n\t\tthis.gameCanvas.addEnemyTank(stationaryTank2);\n\t\tthis.gameCanvas.addEnemyTank(stationaryTank3);\n\n\t\tconst playerTank = new DefaultPlayerTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t100,\n\t\t\t250,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addPlayerTank(playerTank);\n\t}\n}\n\nexport class Level3 extends Level {\n\tconstructor(audioManager: AudioManager) {\n\t\tconst obs: Obstacle = new Obstacle(100, 100, 200, 100);\n\t\tconst obs2: Obstacle = new Obstacle(550, 200, 30, 200);\n\t\tconst obstacleCanvas = new ObstacleCanvas('#obstacle-canvas', 1000, 500, [obs, obs2]);\n\t\tsuper(obstacleCanvas, audioManager);\n\t\tconst superAmmo: Ammunition[] = [new SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager)];\n\t\tconst aiTank = new StationaryRandomAimTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t300,\n\t\t\tobstacleCanvas,\n\t\t\tsuperAmmo,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addEnemyTank(aiTank);\n\n\t\tconst playerTank = new DefaultPlayerTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t200,\n\t\t\t250,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addPlayerTank(playerTank);\n\t}\n}\n\nexport class Level4 extends Level {\n\tconstructor(audioManager: AudioManager) {\n\t\tconst obs: Obstacle = new Obstacle(250, 100, 600, 40);\n\t\tconst obs2: Obstacle = new Obstacle(100, 350, 600, 40);\n\t\tconst obstacleCanvas = new ObstacleCanvas('#obstacle-canvas', 1000, 500, [obs, obs2]);\n\t\tsuper(obstacleCanvas, audioManager);\n\t\tconst basicAmmo: Ammunition[] = [new BasicAIAmmunition(0, 0, 0, 0, 0, true, audioManager)];\n\t\tconst basicBomb: Bomb[] = [];\n\t\tconst navigationGrid: NavigationGrid = new NavigationGrid(this.gameCanvas, this.obstacleCanvas, false);\n\t\tconst aiTank = new SimpleMovingTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t900,\n\t\t\t50,\n\t\t\tobstacleCanvas,\n\t\t\tbasicAmmo,\n\t\t\tbasicBomb,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addEnemyTank(aiTank);\n\n\t\tconst playerTank = new DefaultPlayerTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t50,\n\t\t\t450,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addPlayerTank(playerTank);\n\t}\n}\n\nexport class Level5 extends Level {\n\tconstructor(audioManager: AudioManager) {\n\t\tconst obs: Obstacle = new Obstacle(100, 100, 200, 100);\n\t\tconst obs2: Obstacle = new Obstacle(700, 100, 30, 100);\n\t\tconst obs3: Obstacle = new Obstacle(700, 350, 30, 100);\n\t\tconst obstacleCanvas = new ObstacleCanvas('#obstacle-canvas', 1000, 500, [obs, obs2, obs3]);\n\t\tsuper(obstacleCanvas, audioManager);\n\t\tconst basicAmmo: Ammunition[] = [new BasicAIAmmunition(0, 0, 0, 0, 0, true, audioManager)];\n\t\tconst superAmmo: Ammunition[] = [new SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager)];\n\t\tconst basicBomb: Bomb[] = [];\n\t\tconst navigationGrid: NavigationGrid = new NavigationGrid(this.gameCanvas, this.obstacleCanvas, false);\n\t\tconst aiTank3 = new SimpleMovingTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t300,\n\t\t\tobstacleCanvas,\n\t\t\tbasicAmmo,\n\t\t\tbasicBomb,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t\tconst aiTank = new StationaryRandomAimTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t100,\n\t\t\tobstacleCanvas,\n\t\t\tsuperAmmo,\n\t\t\taudioManager\n\t\t);\n\t\tconst aiTank2 = new StationaryTank(this.gameCanvas.gameRenderer.canvas, 800, 200, obstacleCanvas, audioManager);\n\t\tthis.gameCanvas.addEnemyTank(aiTank3);\n\t\tthis.gameCanvas.addEnemyTank(aiTank);\n\t\tthis.gameCanvas.addEnemyTank(aiTank2);\n\n\t\tconst playerTank = new DefaultPlayerTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t200,\n\t\t\t250,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addPlayerTank(playerTank);\n\t}\n}\n\nexport class Level6 extends Level {\n\tconstructor(audioManager: AudioManager) {\n\t\tconst obs: Obstacle = new Obstacle(100, 100, 200, 100);\n\t\tconst obs2: Obstacle = new Obstacle(700, 100, 30, 300);\n\t\tconst obstacleCanvas = new ObstacleCanvas('#obstacle-canvas', 1000, 500, [obs, obs2]);\n\t\tsuper(obstacleCanvas, audioManager);\n\n\t\tconst basicBombs: Bomb[] = [\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t];\n\t\tconst basicBombs2: Bomb[] = [\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t];\n\t\tconst basicBombs3: Bomb[] = [\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t\tnew BasicBomb(0, 0, true, audioManager),\n\t\t];\n\n\t\tconst navigationGrid: NavigationGrid = new NavigationGrid(this.gameCanvas, this.obstacleCanvas, false);\n\t\tconst navigationGrid2: NavigationGrid = new NavigationGrid(this.gameCanvas, this.obstacleCanvas, false);\n\t\tconst navigationGrid3: NavigationGrid = new NavigationGrid(this.gameCanvas, this.obstacleCanvas, false);\n\t\tconst aiTank = new BomberTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t100,\n\t\t\tobstacleCanvas,\n\t\t\t[new BasicAIAmmunition(0, 0, 0, 0, 0, true, audioManager)],\n\t\t\tbasicBombs,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t\tconst aiTank2 = new BomberTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t200,\n\t\t\tobstacleCanvas,\n\t\t\t[new BasicAIAmmunition(0, 0, 0, 0, 0, true, audioManager)],\n\t\t\tbasicBombs2,\n\t\t\tnavigationGrid2,\n\t\t\taudioManager\n\t\t);\n\t\tconst aiTank3 = new BomberTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t300,\n\t\t\tobstacleCanvas,\n\t\t\t[new BasicAIAmmunition(0, 0, 0, 0, 0, true, audioManager)],\n\t\t\tbasicBombs3,\n\t\t\tnavigationGrid3,\n\t\t\taudioManager\n\t\t);\n\n\t\tthis.gameCanvas.addEnemyTank(aiTank);\n\t\tthis.gameCanvas.addEnemyTank(aiTank2);\n\t\tthis.gameCanvas.addEnemyTank(aiTank3);\n\n\t\tconst playerTank = new DefaultPlayerTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t200,\n\t\t\t250,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addPlayerTank(playerTank);\n\t}\n}\n\nexport class Level7 extends Level {\n\tconstructor(audioManager: AudioManager) {\n\t\tconst obs: Obstacle = new Obstacle(700, 100, 30, 300);\n\t\tconst obstacleCanvas = new ObstacleCanvas('#obstacle-canvas', 1000, 500, [obs]);\n\t\tsuper(obstacleCanvas, audioManager);\n\t\tconst basicAmmo: Ammunition[] = [\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t];\n\t\tconst basicAmmo2: Ammunition[] = [\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t];\n\t\tconst basicAmmo3: Ammunition[] = [\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t\tnew SuperAIAmmunition(0, 0, 0, 0, 0, true, audioManager),\n\t\t];\n\n\t\tconst basicBombs: Bomb[] = [\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t];\n\t\tconst basicBombs2: Bomb[] = [\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t];\n\t\tconst basicBombs3: Bomb[] = [\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t\tnew LoveBomb(0, 0, true, audioManager),\n\t\t];\n\n\t\tconst navigationGrid: NavigationGrid = new NavigationGrid(this.gameCanvas, this.obstacleCanvas, false);\n\t\tconst navigationGrid2: NavigationGrid = new NavigationGrid(this.gameCanvas, this.obstacleCanvas, false);\n\t\tconst navigationGrid3: NavigationGrid = new NavigationGrid(this.gameCanvas, this.obstacleCanvas, false);\n\t\tconst aiTank = new SuperBomberMovingTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t100,\n\t\t\tobstacleCanvas,\n\t\t\tbasicAmmo,\n\t\t\tbasicBombs,\n\t\t\tnavigationGrid,\n\t\t\taudioManager\n\t\t);\n\t\tconst aiTank2 = new SuperBomberMovingTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t200,\n\t\t\tobstacleCanvas,\n\t\t\tbasicAmmo2,\n\t\t\tbasicBombs2,\n\t\t\tnavigationGrid2,\n\t\t\taudioManager\n\t\t);\n\t\tconst aiTank3 = new SuperBomberMovingTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t800,\n\t\t\t300,\n\t\t\tobstacleCanvas,\n\t\t\tbasicAmmo3,\n\t\t\tbasicBombs3,\n\t\t\tnavigationGrid3,\n\t\t\taudioManager\n\t\t);\n\n\t\tthis.gameCanvas.addEnemyTank(aiTank);\n\t\tthis.gameCanvas.addEnemyTank(aiTank2);\n\t\tthis.gameCanvas.addEnemyTank(aiTank3);\n\n\t\tconst playerTank = new DefaultPlayerTank(\n\t\t\tthis.gameCanvas.gameRenderer.canvas,\n\t\t\t200,\n\t\t\t250,\n\t\t\tobstacleCanvas,\n\t\t\taudioManager\n\t\t);\n\t\tthis.gameCanvas.addPlayerTank(playerTank);\n\t}\n}\n","import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\nimport './assets/computer.ico';\nimport './css/style.css';\n\nimport { LevelSelector } from './ui/LevelSelector';\n\nconst levelSelector: LevelSelector = new LevelSelector(7);\n\nlevelSelector.startActiveLevel();\n","import * as d3 from 'd3';\nimport packageJson from '../../package.json';\nimport { AudioManager } from '../game/AudioManager';\nimport { Level, Level1, Level2, Level3, Level4, Level5, Level6, Level7 } from '../game/Level';\n\nexport class LevelSelector {\n\tprivate levels: number;\n\tprivate activeLevelNumber: number;\n\tprivate activeLevel: Level;\n\tprivate sliderWidth: number = Math.min(window.innerWidth * 0.8, 600); // Responsive width\n\tprivate audioManager: AudioManager;\n\n\tconstructor(levels: number) {\n\t\tthis.levels = levels;\n\t\tthis.audioManager = new AudioManager();\n\t\tconst audioPromise: Promise<void[]> = this.audioManager.loadAllAudio();\n\t\taudioPromise.then((): void => {\n\t\t\tthis.audioManager.playBackgroundMusic();\n\t\t});\n\t\tthis.activeLevelNumber = 1;\n\t\tthis.activeLevel = new Level1(this.audioManager);\n\t\tthis.setHeader();\n\t\tthis.createSlider();\n\t\tthis.createJumbotron();\n\t}\n\n\tpublic setHeader() {\n\t\tconst header: HTMLElement | null = document.getElementById('main-header');\n\t\tif (header) {\n\t\t\theader.textContent = `Treads V${packageJson.version}`;\n\t\t}\n\t}\n\n\tpublic startActiveLevel() {\n\t\tthis.activeLevel.stop();\n\t\tswitch (this.activeLevelNumber) {\n\t\t\tcase 1:\n\t\t\t\tthis.activeLevel = new Level1(this.audioManager);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.activeLevel = new Level2(this.audioManager);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.activeLevel = new Level3(this.audioManager);\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tthis.activeLevel = new Level4(this.audioManager);\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tthis.activeLevel = new Level5(this.audioManager);\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tthis.activeLevel = new Level6(this.audioManager);\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\tthis.activeLevel = new Level7(this.audioManager);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.activeLevel = new Level1(this.audioManager);\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.activeLevel.start();\n\t}\n\n\tprivate createSlider(): void {\n\t\tconst margin: { top: number; right: number; bottom: number; left: number } = {\n\t\t\ttop: 10,\n\t\t\tright: 10,\n\t\t\tbottom: 20,\n\t\t\tleft: 10,\n\t\t};\n\t\tconst effectiveWidth: number = this.sliderWidth - margin.left - margin.right;\n\n\t\tconst scale: d3.ScaleLinear<number, number, never> = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([1, this.levels])\n\t\t\t.range([0, effectiveWidth])\n\t\t\t.clamp(true);\n\n\t\tconst svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any> = d3\n\t\t\t.select('#slider')\n\t\t\t.append('svg')\n\t\t\t.attr('width', this.sliderWidth)\n\t\t\t.attr('height', 50);\n\n\t\tconst sliderGroup: d3.Selection<SVGGElement, unknown, HTMLElement, any> = svg\n\t\t\t.append('g')\n\t\t\t.attr('transform', `translate(${margin.left}, 30)`);\n\n\t\tsliderGroup.append('g').call(d3.axisBottom(scale).ticks(this.levels).tickFormat(d3.format('1')));\n\n\t\tconst handle: d3.Selection<SVGCircleElement, unknown, HTMLElement, any> = sliderGroup\n\t\t\t.append('circle')\n\t\t\t.attr('cx', scale(this.activeLevelNumber))\n\t\t\t.attr('cy', -10)\n\t\t\t.attr('r', 10)\n\t\t\t.style('fill', 'red')\n\t\t\t.style('cursor', 'ew-resize');\n\t\tconst dragHandler: d3.DragBehavior<SVGCircleElement, unknown, unknown> = d3\n\t\t\t.drag<SVGCircleElement, unknown>()\n\t\t\t.on('drag', (event) => {\n\t\t\t\tconst x = event.x - margin.left; // Adjusting for the left margin\n\t\t\t\tconst level = Math.round(scale.invert(x));\n\t\t\t\thandle.attr('cx', scale(level));\n\t\t\t\tthis.updateActiveLevel(level);\n\t\t\t});\n\n\t\thandle.call(dragHandler);\n\t}\n\n\tprivate createJumbotron(): void {\n\t\tconst jumbotron: d3.Selection<d3.BaseType, unknown, HTMLElement, any> = d3.select('#jumbotron');\n\t\tconst colorScale = d3.scaleLinear<string>().domain([1, this.levels]).range(['lightblue', 'lightcoral']);\n\t\tfor (let i = 1; i <= this.levels; i++) {\n\t\t\tconst box: d3.Selection<HTMLDivElement, unknown, HTMLElement, any> = jumbotron\n\t\t\t\t.append('div')\n\t\t\t\t.attr('class', 'jumbotron-box inactive')\n\t\t\t\t.on('click', () => this.updateActiveLevel(i));\n\n\t\t\t// Example of how you can append an SVG to a jumbotron box.\n\t\t\tconst svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any> = box\n\t\t\t\t.append('svg')\n\t\t\t\t.attr('width', '100%')\n\t\t\t\t.attr('height', '100%');\n\n\t\t\tsvg\n\t\t\t\t.append('rect') // Placeholder for actual SVG content.\n\t\t\t\t.attr('width', '100%')\n\t\t\t\t.attr('height', '100%')\n\t\t\t\t.attr('fill', colorScale(i));\n\t\t\tsvg\n\t\t\t\t.append('text')\n\t\t\t\t.attr('x', '50%')\n\t\t\t\t.attr('y', '50%')\n\t\t\t\t.attr('dominant-baseline', 'middle')\n\t\t\t\t.attr('text-anchor', 'middle')\n\t\t\t\t.text(`Level ${i}`);\n\t\t}\n\n\t\tthis.updateActiveLevel(this.activeLevelNumber);\n\t}\n\n\tprivate updateActiveLevel(level: number): void {\n\t\tthis.activeLevelNumber = level;\n\t\td3.selectAll('.jumbotron-box')\n\t\t\t.classed('active', (_, i) => i + 1 === level)\n\t\t\t.classed('inactive', (_, i) => i + 1 !== level);\n\t\td3.select('circle').attr(\n\t\t\t'cx',\n\t\t\td3\n\t\t\t\t.scaleLinear()\n\t\t\t\t.domain([1, this.levels])\n\t\t\t\t.range([0, this.sliderWidth - 20])(level)\n\t\t);\n\t\tthis.startActiveLevel();\n\t}\n}\n"],"names":["AudioFile","Direction","this","audioContext","window","AudioContext","webkitAudioContext","audioBuffers","Map","backgroundMusicSource","loadAllAudio","promises","loadAudio","TANK_FIRE","TANK_DESTROY","BOMB_EXPLODE","BACKGROUND_MUSIC","Promise","all","audioFile","url","fetch","then","response","arrayBuffer","decodeAudioData","audioBuffer","set","catch","error","console","play","buffer","get","source","createBufferSource","connect","destination","start","warn","getAudioContext","playBackgroundMusic","stopBackgroundMusic","loop","stop","disconnect","startX","startY","theta","speed","maxBounces","canvasWidth","canvasHeight","isDestroyed","audioManager","xPos","yPos","xVelocity","Math","cos","yVelocity","sin","bounces","updatePosition","obstacleCanvas","obstacles","forEach","obstacle","xLeft","xRight","yTop","yBottom","fromLeft","abs","fromRight","fromTop","fromBottom","minDistance","min","checkEnemyHit","enemyTanks","enemyTank","destroy","log","checkPlayerHit","playerTank","reload","draw","context","beginPath","arc","PI","fillStyle","fill","lineWidth","strokeStyle","stroke","closePath","willHitPlayerTank","predictedXPosition","predictedYPosition","predictedXVelocity","predictedYVelocity","predictedBounces","Ammunition","x","y","radius","color","velocityX","velocityY","life","fragmentRadius","fragmentColor","blastRadius","update","blastDelayMS","fuseStartTime","shouldFlashRed","isExploding","fragments","isPointInsideBlastRadius","tankMidpoint","setFuse","performance","now","animateFuse","setTimeout","createFragments","elapsedTime","fractionElapsed","some","threshold","requestAnimationFrame","dx","dy","sqrt","i","angle","random","fragment","BombFragment","push","updateExplosion","particle","filter","Bomb","save","translate","scale","moveTo","bezierCurveTo","restore","canvas","playerWin","enemyWin","getContext","Error","initializeCanvas","width","height","renderLevelOverScreen","message","font","textWidth","measureText","fontSize","clearRect","strokeText","fillText","render","progress","every","tank","aim","aimXPos","aimYPos","shoot","plantBomb","reticule","ammunition","bombs","bomb","canvasSelector","animationFrameID","gameRenderer","GameRenderer","document","querySelector","lastRenderTime","addEventListener","resizeCanvas","bind","gameLoop","cancelAnimationFrame","timeStamp","addEnemyTank","addPlayerTank","g","h","f","walkable","parent","gameCanvas","stationary","grid","gridCellWidth","path","gridXLength","gridYLength","floor","Node","gridXLeft","gridXRight","gridYTop","gridYBottom","obs","reset","getNodeFromTank","xGridCoordinate","size","yGridCoordinate","max","getRandomNodeInRadiusOfTarget","target","candidateNodes","node","distance","pow","length","aStar","openSet","closedSet","Set","current","sort","a","b","unshift","splice","indexOf","add","getWalkableNeighbors","neighbor","has","tentativeG","SQRT2","includes","round","neighbors","rect","obstacleCanvasSelector","clearObstacles","dashPattern","renderReticule","tankSize","reticuleWidth","tankXPos","tankYPos","mouseXPos","mouseYpos","setLineDash","lineTo","Reticule","maxReticuleLength","tankXPosition","tankYPosition","mouseXPosition","mouseYPosition","xDist","yDist","distanceToMaxDistanceRatio","dashLength","spaceLength","xLength","gunBarrellWidth","twoPi","lastDirectionMoved","UNKNOWN","wasLastMoveBlocked","consecutiveDirectionMoves","maxAmmunition","maxBombs","aimAngle","canvasRect","getBoundingClientRect","xOffset","left","yOffset","top","fillRect","lineJoin","strokeRect","endX","endY","grayValue","alphaValue","moveInLastDirectionMoved","moveInCardinalDirection","getRandomDirection","enumValues","Object","keys","map","n","Number","parseInt","isNaN","direction","NORTH","moveNorth","SOUTH","moveSouth","EAST","moveEast","WEST","moveWest","NORTHEAST","moveNorthEast","NORTHWEST","moveNorthWest","SOUTHEAST","moveSouthEast","SOUTHWEST","moveSouthWest","values","value","randomIndex","blocked","blockedNorth","blockedEast","blockedWest","blockedSouth","aggressionFactor","navigationGrid","pathRecaculationInterval","drawNavigationGrid","currentNode","j","index","array","startNode","targetNode","destinationNode","randomDirection","randomNumber","Tank","NoReticule","minTimeBetweenShotsMS","timeBetweenShotsIsElapsed","minTimeBetweenBombPlantsMS","timeBetweenPlantsIsElapsed","availableBombIndex","findIndex","availableAmmunitionIndex","atan2","EnemyTank","defaultPlayerTankColor","PlayerAmmunition","PlayerBomb","AdjustingCustomColorReticule","keyStates","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","w","s","d","W","A","S","D","event","hasOwnProperty","key","code","clientX","clientY","up","right","down","NavigationGrid","aimAngleChangeAmount","getAngleChangeAmount","BasicAIAmmunition","canTakeShot","GameCanvas","Obstacle","ObstacleCanvas","stationaryTank","StationaryTank","DefaultPlayerTank","Level","stationaryTank1","stationaryTank2","stationaryTank3","obs2","superAmmo","SuperAIAmmunition","aiTank","StationaryRandomAimTank","basicAmmo","SimpleMovingTank","obs3","aiTank3","aiTank2","basicBombs","BasicBomb","basicBombs2","basicBombs3","navigationGrid2","navigationGrid3","BomberTank","basicAmmo2","basicAmmo3","LoveBomb","SuperBomberMovingTank","levels","sliderWidth","innerWidth","AudioManager","activeLevelNumber","activeLevel","Level1","setHeader","createSlider","createJumbotron","header","getElementById","textContent","startActiveLevel","Level2","Level3","Level4","Level5","Level6","Level7","margin","effectiveWidth","domain","range","clamp","sliderGroup","append","attr","call","ticks","tickFormat","handle","style","dragHandler","on","level","invert","updateActiveLevel","jumbotron","colorScale","svg","text","classed","_"],"sourceRoot":""}